Dataset,System,Bug ID,Creation Date,Title,Description,Ground Truth
CLASS,tika-1.3,TIKA-1152,2013-07-23T08:45:11.000-05:00,process loops on parsing parse of CHM file,"{code}
 
    
     
    
    
    
    
    
    
    
    
 {code}",tika-parsers.src.main.java.org.apache.tika.parser.chm.lzx.ChmLzxBlock
FILE,DATAMONGO,DATAMONGO-315,2011-11-09T10:21:33.000-06:00,ignore SortOrder on query,"Query query = query(where(""type"").is(""ad""));
query.sort().on(""rawBidPrice"", Order.DESCENDING);
Ad ad = mongoTemplate.findOne(query, Ad.class);
 
 query.getSortOrder() 
 Query query = query(where(""type"").is(""ad""));
query.sort().on(""rawBidPrice"", Order.DESCENDING);
query.limit(1);
List<Ad> ads = mongoTemplate.find(query, Ad.class);
Ad ad = ads.isEmpty() ? null : ads.get(0);","org.springframework.data.mongodb.core.MongoTemplateTests
org.springframework.data.mongodb.core.MongoTemplate"
FILE,DATAMONGO,DATAMONGO-260,2011-09-05T01:06:36.000-05:00,use with Long use as key-type,"class Foo {




  String id;




  Long number;




  Long version;




} 






 
 function()  
 emit(this.number, this.version)




 
 function(key, values)  {




	return Math.max.apply(Math, values);




}","org.springframework.data.mongodb.core.convert.AbstractMongoConverter
org.springframework.data.mongodb.core.mapreduce.MapReduceTests"
FILE,DATAMONGO,DATAMONGO-385,2012-01-26T05:13:31.000-06:00,not support id classes of type java.lang.Long,"public interface TestRepository extends MongoRepository<TestEntity, Long> {  }












 @Document




public class TestEntity




{




  @Id




  private Long id;




  




}",org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryUnitTests
FILE,DATAMONGO,DATAMONGO-413,2012-03-09T17:21:02.000-06:00,use in repository query yield ClassCastException,"List<User> findByEmailOrAlias(String email, String alias) 
        
 
 List<User> findByEmailAndAlias(String email, String alias)","org.springframework.data.mongodb.core.query.OrQuery
org.springframework.data.mongodb.repository.query.MongoQueryCreator
org.springframework.data.mongodb.repository.query.MongoQueryCreatorUnitTests"
FILE,DATAMONGO,DATAMONGO-423,2012-03-29T06:03:26.000-05:00,use java.util.Pattern instead_of $regex,"c.find( new BasicDBObject( ""x"" ,




                new BasicDBObject(""$not"", new BasicDBObject(""$regex"", ""b"") ) ) );






  
  
 c.find( new BasicDBObject( ""x"" ,




                new BasicDBObject(""$not"", Pattern.compile( ""b"" , Pattern.CASE_INSENSITIVE ) ) ) );","org.springframework.data.mongodb.core.MongoTemplateTests
org.springframework.data.mongodb.core.query.QueryTests
org.springframework.data.mongodb.core.query.Criteria"
FILE,DATAMONGO,DATAMONGO-462,2012-06-19T08:57:02.000-05:00,discover root cause fail with NPE,@PersistenceConstructor,"org.springframework.data.mongodb.core.convert.MongoConverters
org.springframework.data.mongodb.core.convert.MappingMongoConverterUnitTests
org.springframework.data.mongodb.core.convert.CustomConversionsUnitTests
org.springframework.data.mongodb.core.convert.CustomConversions"
FILE,DATAMONGO,DATAMONGO-467,2012-06-24T08:58:49.000-05:00,use QueryDSL,"@Document 
 @Id String id;






 
 QUser.id.eq(""4f43b6a384aea4e77d403709"")",org.springframework.data.mongodb.repository.support.SpringDataMongodbSerializerUnitTests
FILE,DATAMONGO,DATAMONGO-505,2012-08-14T03:07:56.000-05:00,not work for collection values,"class Entity {









  Long id;




  @DBRef




  Property property;




}









 class Property {




  Long id;




}









 interface EntityRepository extends Repository<Entity, Long> {









  Entity findByPropertyIn(Property... property);




}






  findByProperty()","org.springframework.data.mongodb.repository.query.ConvertingParameterAccessor
org.springframework.data.mongodb.repository.query.ConvertingParameterAccessorUnitTests"
FILE,DATAMONGO,DATAMONGO-523,2012-09-01T03:39:51.000-05:00,not use with AbstractMongoConfiguration,@TypeAlias      @Document  @TypeAlias,org.springframework.data.mongodb.core.convert.MappingMongoConverterUnitTests
FILE,DATAMONGO,DATAMONGO-585,2012-12-01T08:28:43.000-06:00,exception during authentication,"class which implements Runnable.  
Those",org.springframework.data.mongodb.core.MongoDbUtils
FILE,DATAMONGO,DATAMONGO-629,2013-03-22T04:08:25.000-05:00,count with field find with field,"Query q = query 
    
  
 
 
 {




		""id"" : /zzz/




	} 
 
 
 
 
 
  
  
 
 
 {




		""count"" : ""test"",




		""query"" : {




			""_id"" : /zzz/




		}




	 
 
 
 
 
 
     find()     count()","org.springframework.data.mongodb.core.mapping.MongoMappingContext
org.springframework.data.mongodb.core.MongoTemplateTests
org.springframework.data.mongodb.core.convert.QueryMapper
org.springframework.data.mongodb.core.convert.QueryMapperUnitTests"
FILE,DATAMONGO,DATAMONGO-571,2012-11-09T08:00:10.000-06:00,not save null values add @Version to domain class,"Scenario 
 CrudRepository.findOne()  
 @Version 
 CrudRepository.save()  
 @Version","org.springframework.data.mongodb.core.MongoTemplateTests
org.springframework.data.mongodb.core.query.Update"
FILE,DATAMONGO,DATAMONGO-663,2013-04-24T03:21:19.000-05:00,need equals method,"class Field   equals()  
  
 boolean fieldsEqual = this.fieldSpec == null ? that.fieldSpec == null : this.fieldSpec.equals(that.fieldSpec);",org.springframework.data.mongodb.core.query.Field
FILE,DATAMONGO,DATAMONGO-392,2012-02-07T04:28:15.000-06:00,update object not write type information for objects,MappingMongoConverter.writeInternal(...)   addCustomTypeIfNecessary(...)     convertToMongoType(...)   removeTypeInfoRecursively(...),"org.springframework.data.mongodb.core.MongoTemplateTests
org.springframework.data.mongodb.core.MongoTemplate"
FILE,DATAMONGO,DATAMONGO-702,2013-06-20T00:12:30.000-05:00,not configure spring Data MongoDB projection with respective Java pojo,"@Field 
 query.fields() 
  
 @Field","org.springframework.data.mongodb.core.MongoTemplateTests
org.springframework.data.mongodb.core.MongoTemplate"
FILE,DATAMONGO,DATAMONGO-717,2013-07-10T11:13:46.000-05:00,not distribute application context to persistent entities,"@Override




	protected <T> BasicMongoPersistentEntity<T> createPersistentEntity(TypeInformation<T> typeInformation) {









		BasicMongoPersistentEntity<T> entity = new BasicMongoPersistentEntity<T>(typeInformation);









		if (context != null) {




			entity.setApplicationContext(context);




		}









		return entity;




	}









	




	 @Override




	public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {









		this.context = applicationContext;




		super.setApplicationContext(applicationContext);




	}






 
  
 @Override




	public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {









		this.context = applicationContext;




		super.setApplicationContext(applicationContext);




                // Send the application context to ALL the PersistentEntities, not just ones created after this point




               for (BasicMongoPersistentEntity entity : getPersistentEntities()) {




                   entity.setApplicationContext(applicationContext);




               }




	}






      testMultiTenantSave()  
   initialize()    
 
 @Bean




	public MongoMappingContext mongoMappingContext() throws ClassNotFoundException {









		MongoMappingContext mappingContext = new MongoMappingContext();




		mappingContext.setInitialEntitySet(getInitialEntitySet());




		mappingContext.setSimpleTypeHolder(customConversions().getSimpleTypeHolder());




		mappingContext.initialize(); // <----









		return mappingContext;




	}",org.springframework.data.mongodb.config.AbstractMongoConfigurationUnitTests
FILE,DATAMONGO,DATAMONGO-721,2013-07-11T11:36:06.000-05:00,persist on update operations,"@Document
public class ParentClass {
   private List<ChildClass> list;
}
    @Document   
        
  
 mongoTemplate.updateFirst(Query.query(criteria), 
  new Update().push(""list"", child));",org.springframework.data.mongodb.core.convert.QueryMapper
FILE,DATAMONGO,DATAMONGO-602,2013-01-30T02:22:53.000-06:00,return results query with $in operator query on id field,"List<BigInteger> profileIds = findProfileIds();




Predicate predicate = QProfileDocument.profileDocument.id.in(profileIds);




Iterable<ProfileDocument> profiles = profileRepository.findAll(predicate);",org.springframework.data.mongodb.core.MongoTemplateTests
FILE,DATAMONGO,DATAMONGO-805,2013-12-02T06:34:36.000-06:00,exclude DBRef field in query cause MappingException,"Query query = new Query(Criteria.where(""parentField"").is(""test""));
        query.fields().exclude(""children"");
        ParentClass parentClass = mongoOperations.findOne(query, ParentClass.class);","org.springframework.data.mongodb.core.convert.QueryMapper
org.springframework.data.mongodb.core.mapping.MappingTests
org.springframework.data.mongodb.core.convert.QueryMapperUnitTests"
FILE,DATAMONGO,DATAMONGO-887,2014-03-20T21:01:31.000-05:00,contain field of type TreeMap,"public interface SourceRepository extends PagingAndSortingRepository<MyEntity, ObjectId> {




}









// Entity




 @Document(""test_collection"")




public class MyEntity {




private TreeMap<String,MyClass> treeMap;




}









// TreeMap value class




 public class MyClass {




private String foo = ""bar"";




}",org.springframework.data.mongodb.core.convert.MappingMongoConverterUnitTests
FILE,DATAMONGO,DATAMONGO-897,2014-04-01T04:38:51.000-05:00,use @DbRef as target use interface as target,MongoTemplate.findAndModify(...)   @DbRef  @DbRef,"org.springframework.data.mongodb.core.convert.UpdateMapperUnitTests
org.springframework.data.mongodb.core.convert.QueryMapper"
FILE,DATAMONGO,DATAMONGO-892,2014-03-28T09:08:03.000-05:00,not configure as nested bean definition,parserContext.isNested(),"org.springframework.data.mongodb.config.MappingMongoConverterParser
org.springframework.data.mongodb.config.MappingMongoConverterParserIntegrationTests"
FILE,DATAMONGO,DATAMONGO-647,2013-04-09T17:29:02.000-05:00,ignore @Field annotation for field alias,"@Field(""sr"")
 
 List<Answer> findByQuestionIdOrderByScoreDesc(String questionId)",org.springframework.data.mongodb.core.convert.QueryMapperUnitTests
FILE,DATAMONGO,DATAMONGO-938,2014-05-21T06:09:48.000-05:00,create geo within Criteria use MapReduce,"Criteria.where(""location"")  within(new Box(lowerLeft, upperRight));","org.springframework.data.mongodb.core.mapreduce.MapReduceTests
org.springframework.data.mongodb.core.MongoTemplate"
FILE,DATAMONGO,DATAMONGO-952,2014-06-10T22:45:47.000-05:00,not work with only field restrictions,"@Query 
 @Query(fields = ""{ 'email' : 1 }"")




User findByEmail(String email)






  @Query",org.springframework.data.mongodb.repository.query.PartTreeMongoQuery
FILE,DATAMONGO,DATAMONGO-969,2014-06-26T16:28:13.000-05:00,use QueryDSL,"eq()   in() 
 @Document




public class User {




    @Id String id;




}









 Collection<String> collection = new ArrayList<>();




collection.add(""abcdef....."");




Iterable<User> user = userRepository.findAll(QUser.user.id.in(collection));","org.springframework.data.mongodb.repository.support.SpringDataMongodbSerializerUnitTests
org.springframework.data.mongodb.repository.AbstractPersonRepositoryIntegrationTests
org.springframework.data.mongodb.repository.support.SpringDataMongodbSerializer"
FILE,DATAMONGO,DATAMONGO-987,2014-07-14T12:01:52.000-05:00,get data use MongoTemplate problem with lazy loading,"@Document 
 @Document




class Parent {




     @Id




     private String id;




     private String name;




     @DBref(lazy=true)




     private Child child;









    // getters and setters ommited




}






 
 @Document




class Child {




      @Id




       private String id;




       private String name;




      //getters and setters ommited




}






 
 Parent parent = new Parent();




parent.setName(""Daddy"");




mongoTemplate.save(parent); //ok, it is persisted like we expected.




// Than we try to load this same entity from the database




Criteria criteria = Criteria.where(""_id"").is(parent.getId());




Parent persisted = mongoTemplate.findOne(new Query(criteria), Parent.class);




// The child attribute should be null, right?




assertNull(persisted.getChild()); // it fails","org.springframework.data.mongodb.core.convert.MappingMongoConverter
org.springframework.data.mongodb.core.convert.DbRefMappingMongoConverterUnitTests"
FILE,DATAMONGO,DATAMONGO-420,2012-03-22T10:09:35.000-05:00,add to @Query values add to fields,"@Query 
 @Query 
 { ?0 }
 
 { ?1 }
 
 someMethod( String values, String fields ) 
 String values = ""value : 'things'"";
   
 { ""value : 'things'"" }
   
 String values = ""field : 0"";
   
 { ""field : 0"" }
   
 String values = ""field\"" : \""0"";","org.springframework.data.mongodb.repository.query.StringBasedMongoQuery
org.springframework.data.mongodb.repository.query.StringBasedMongoQueryUnitTests"
FILE,DATAMONGO,DATAMONGO-1053,2014-09-12T12:14:49.000-05:00,fail to map,"package com.instantly.pipeline.engine.model;









import javax.persistence.Id;









public class Foobar {









    @Id




    String id;




    




    private Number language;









    public String getId() {




        return id;




    }









    public void setId(String id) {




        this.id = id;




    }









    public Number getLanguage() {




        return language;




    }









    public void setLanguage(Number language) {




        this.language = language;




    }




}","org.springframework.data.mongodb.core.mapping.BasicMongoPersistentEntity
org.springframework.data.mongodb.core.mapping.BasicMongoPersistentEntityUnitTests"
FILE,DATAMONGO,DATAMONGO-1068,2014-10-08T19:43:32.000-05:00,build special cirteria,"public class Room {




		private String name;




		private List<Date> occupied;




	}






 
 {




		occupied : {




			$not : {




				$elemMatch : {




					$gte : start,




					$lte : end




				}




			}




		}




	}






 
 Criteria c1 = new Criteria().gte(start).lte(end);




	Criteria c = Criteria.where(""occupied"").not().elemMatch(c1);






 
 {




	occupied : {




		$not : {




			$elemMatch : {




			}




		}




	}




}






  elemMatch(Criteria)","org.springframework.data.mongodb.core.query.CriteriaTests
org.springframework.data.mongodb.core.query.Criteria"
FILE,DATAMONGO,DATAMONGO-1050,2014-09-09T03:41:12.000-05:00,not return ids for nested documents,"class A {




 private String id; //stored in mongo as ""id""




 private String name;




}









 class B {




  private String id; // stored in mongo as ""_id""




  private List<A> innerDocs;




}






     
  
 @Data  @NoArgsConstructor","org.springframework.data.mongodb.core.mapping.BasicMongoPersistentProperty
org.springframework.data.mongodb.core.convert.MappingMongoConverterUnitTests
org.springframework.data.mongodb.core.mapping.BasicMongoPersistentPropertyUnitTests
org.springframework.data.mongodb.core.convert.QueryMapperUnitTests"
FILE,DATAMONGO,DATAMONGO-1078,2014-10-28T02:23:26.000-05:00,map complex id structure,"@Query(""{'_id': {$in: ?0}}"")




List<User> findByUserIds(Collection<MyUserId> userIds) 
 {$in: [ {_class:""com.sampleuser.MyUserId"", userId:""...."", sampleId:""....""}","org.springframework.data.mongodb.core.convert.MappingMongoConverter
org.springframework.data.mongodb.core.MongoTemplate"
FILE,DATAMONGO,DATAMONGO-1088,2014-11-07T03:08:58.000-06:00,not remove _ class property on collection,"@Query(value = ""{ embedded : { $in : ?0} }"")




	List<Foo> findByEmbeddedIn2(Collection<EmbeddedObject> c)","org.springframework.data.mongodb.core.convert.MappingMongoConverter
org.springframework.data.mongodb.core.MongoTemplate"
FILE,DATAMONGO,DATAMONGO-1123,2014-12-17T09:39:36.000-06:00,not return matching elements return max of documents,"public GeoResults<MyObject> findByTypeAndLocationNear(MyObjectType type, Point p, Distance distance) {




   final NearQuery nearQuery = NearQuery.near(p).maxDistance(distance);




   log.info(""{}"",nearQuery.toDBObject());




   return mongoTemplate.geoNear(nearQuery, MyObject.class);




}






   
 {@link GeoResults}   {@link NearQuery}",org.springframework.data.mongodb.core.MongoOperations
FILE,DATAMONGO,DATAMONGO-1126,2014-12-21T06:03:21.000-06:00,keyword query findByInId with pageable,"getTotalElements()   getTotalPages()  
 @Document




public class Item {









    @Id




    private String id;




    private String type;




}












 public interface ItemRepository extends MongoRepository<Item, String> {









    Page<Item> findByIdIn(Collection ids, Pageable pageable);




    Page<Item> findByTypeIn(Collection types, Pageable pageable);




}












 @RunWith(SpringJUnit4ClassRunner.class)




@ContextConfiguration(classes = {MongoDbConfig.class})




@TransactionConfiguration(defaultRollback = false)




public class TestPageableIdIn {









    @Autowired




    private ItemRepository itemRepository;




    




    private List<String> allIds = new LinkedList<>();









    @Before




    public void setUp() {




        itemRepository.deleteAll();




        String[] types = {""SWORD"", ""SHIELD"", ""ARMOUR""};









        // 10 items per type




        for (String type : types) {




            for (int i = 0; i < 10; i++) {




                String id = UUID.randomUUID().toString();




                allIds.add(id);




                itemRepository.save(new Item(id, type));




            }




        }




    }









    @Test




    public void testPageableIdIn() {




        




        Pageable pageable = new PageRequest(0, 5);




        




        // expect 5 Items returned, total of 10 Items(SWORDS) in 2 Pages




        Page<Item> results = itemRepository.findByTypeIn(Arrays.asList(""SWORD""), pageable);




        Assert.assertEquals(5, results.getContent().size());




        Assert.assertEquals(10, results.getTotalElements());




        Assert.assertEquals(2, results.getTotalPages());




        




        // expect 5 Items returned, total of 30 Items in 6 Pages




        results = itemRepository.findByIdIn(allIds, pageable);




        Assert.assertEquals(5, results.getContent().size());




        Assert.assertEquals(30, results.getTotalElements()); // this is returning 0




        Assert.assertEquals(6, results.getTotalPages());     // this is returning 0




    }




}","org.springframework.data.mongodb.repository.Person
org.springframework.data.mongodb.repository.query.AbstractMongoQueryUnitTests
org.springframework.data.mongodb.core.MongoOperations
org.springframework.data.mongodb.core.MongoTemplate
org.springframework.data.mongodb.repository.query.AbstractMongoQuery"
FILE,DATAMONGO,DATAMONGO-1133,2015-01-07T00:20:51.000-06:00,not honor field aliasing in Aggregation operations,@Field,"org.springframework.data.mongodb.core.aggregation.TypeBasedAggregationOperationContextUnitTests
org.springframework.data.mongodb.core.aggregation.AggregationTests"
FILE,DATAMONGO,DATAMONGO-1250,2015-07-03T21:07:44.000-05:00,not use in updates,"@Document 
 
 
 @Document




public class MyPersistantObject  
 public Allocation allocation;




     public BigDecimal value;









     
 private final String code;









         Allocation(String code) {




            this.code = code;




        }









         public static Converter<Allocation, String> writer() {




            return new Converter<Allocation, String>() {




                public String convert(Allocation allocation) {




                    return allocation.getCode();




                }




            };




        }









         public static Converter<String, Allocation> reader() {




            return new Converter<String, Allocation>() {




                public Allocation convert(String source) {




                    return Allocation.getByCode(source);




                }




            };




        }









         public static Allocation getByCode(String code)  
 return AVAILABLE;




                 
 return ALLOCATED;




             
 throw new IllegalArgumentException(""Unable to get Allocation from: "" + code);




         
 public String getCode() {




            return code;




        }




     
 @Bean




    public CustomConversions customConversions() {




        return new CustomConversions(Arrays.asList(




                MyPersistantObject.Allocation.reader(),




                MyPersistantObject.Allocation.writer()




        ));




    }






 
 @Test




    public void testConversion() {




        Update update;




        Query query;




        MyPersistantObject returned;




        MyPersistantObject myPersistantObject = new MyPersistantObject();




        myPersistantObject.allocation = AVAILABLE;




        myPersistantObject.value = new BigDecimal(1234567);









        mongoTemplate.save(myPersistantObject);









        // Check it was saved correctly - first with invalid allocation to confirm conversion in query




        query = query(where(""allocation"").is(ALLOCATED));




        assertThat(mongoTemplate.findOne(query, MyPersistantObject.class), is(nullValue()));









        // Check it was saved correctly - now with valid allocation to confirm conversion in query




        query = query(where(""allocation"").is(AVAILABLE));




        returned = mongoTemplate.findOne(query, MyPersistantObject.class);




        assertThat(returned.allocation, is(AVAILABLE));




        assertThat(returned.value.longValue(), is(1234567L));









        try {




            // Update allocation from constant - will fail




            update = update(""allocation"", ALLOCATED);




            mongoTemplate.updateMulti(query, update, MyPersistantObject.class);




        } catch (Exception e) {




            System.err.println(""failed to convert allocation: java.lang.IllegalArgumentException: can't serialize class converter_test.MyPersistantObject$Allocation"");




        }









        // Update allocation from string value - succeeds




        update = update(""allocation"", ALLOCATED.getCode());




        mongoTemplate.updateMulti(query, update, MyPersistantObject.class);




        // Check allocation update




        query = query(where(""allocation"").is(ALLOCATED));




        returned = mongoTemplate.findOne(query, MyPersistantObject.class);




        assertThat(returned.allocation, is(ALLOCATED));









        // Update value only - will fail: Caused by: java.lang.IllegalArgumentException: Unable to get MyPersistantObject.Allocation from: 54321




        // Tries to use MyPersistantObject.Allocation converter to String




        update = update(""value"", new BigDecimal(54321));




        mongoTemplate.updateMulti(query, update, MyPersistantObject.class);




        // Check value update




        returned = mongoTemplate.findAll(MyPersistantObject.class).get(0);




        assertThat(returned.value.longValue(), is(54321L));




    }","org.springframework.data.mongodb.core.convert.UpdateMapperUnitTests
org.springframework.data.mongodb.core.convert.UpdateMapper"
FILE,DATAMONGO,DATAMONGO-1269,2015-08-04T23:04:39.000-05:00,drop numeric keys in maps,"@Test




public void SO_31799474() {









	SomeContent content = new SomeContent();




	content.text = ""foo"";









	SO31799474 entity = new SO31799474();




	entity.id = ""id-1"";









	entity.map = Collections.singletonMap(Integer.valueOf(1), content);









	template.save(entity);









	assertThat(template.findOne(query(where(""map.1.text"").is(""foo"")), SO31799474.class), notNullValue());




}









 static class SO31799474 {




	String id;




	Map<Integer, SomeContent> map;









	@Override




	public String toString() {




		return ""SO31799474 [id="" + id + "", map="" + map + ""]"";




	}









}","org.springframework.data.mongodb.core.convert.QueryMapper
org.springframework.data.mongodb.core.convert.UpdateMapper
org.springframework.data.mongodb.core.convert.QueryMapperUnitTests"
FILE,DATAMONGO,DATAMONGO-1307,2015-10-20T12:33:45.000-05:00,convert user-defined runtime exceptions to npes,"throw exceptionTranslator.translateExceptionIfPossible(ex);
  
 
 
 
 return null;",org.springframework.data.mongodb.core.MongoTemplate
FILE,DATAMONGO,DATAMONGO-1263,2015-07-30T09:03:41.000-05:00,involve generic types,"class Book  
 class AbstractProduct  
 class ProductWrapper    
 class Catalog","org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexResolver
org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexResolverUnitTests"
FILE,DATAMONGO,DATAMONGO-1360,2016-01-16T07:47:34.000-06:00,not query with JSR310,"query.addCriteria(where(""createdDate"").lte(LocalDateTime.now()));","org.springframework.data.mongodb.core.Venue
org.springframework.data.mongodb.core.geo.AbstractGeoSpatialTests
org.springframework.data.mongodb.core.MongoTemplate"
FILE,DATAMONGO,DATAMONGO-1288,2015-09-16T23:51:16.000-05:00,work with AtomicInteger,"org.springframework.data.mongodb.core.query.Update.inc(String, Number)","org.springframework.data.mongodb.core.convert.UpdateMapperUnitTests
org.springframework.data.mongodb.core.convert.MongoConverters
org.springframework.data.mongodb.core.convert.CustomConversions"
FILE,DATAMONGO,DATAMONGO-1438,2016-05-26T14:01:14.000-05:00,get warning in logs switch in Spring boot 1.3.5 switch to Spring,@Document,"org.springframework.data.mongodb.core.convert.MongoConvertersUnitTests
org.springframework.data.mongodb.core.convert.MongoConverters"
FILE,DATAMONGO,DATAMONGO-1394,2016-03-09T10:36:46.000-06:00,use querydsl,"public class Book {




     @DBRef




     private Library library;




} 












 
 public class Library {




     @Id




     private String id;




}












  
   ;




QBook book = QBook.book;




BooleanExpression exp = book.library.id.eq(library_id);




    




List<Book> list = bookRepository.findAll(exp);  // EMPTY






 
  
 Library library = libraryRepository.findById(library_id);




QBook book = QBook.book;




BooleanExpression exp = book.library.eq(library);









List<Book> list = bookRepository.findAll(exp);  // EXPECTED ITEMS






 
  
 List<Book> list = bookRepository.findByLibraryId(library_id) // EXPECTED ITEMS","org.springframework.data.mongodb.repository.support.SpringDataMongodbSerializer
org.springframework.data.mongodb.repository.support.QuerydslRepositorySupportTests"
FILE,DATAMONGO,DATAMONGO-1406,2016-04-04T18:59:49.000-05:00,not use @Field field name nest fields with nested keywords nest fields in combination,";






@Document(collection = ""Computer"")




public class Computer




{




   @Id




   private String _id;









   private String batchId;









  @Field(""stat"")




   private String status;









   @Field(""disp"")




   private List<Monitor> displays;









   //setters and getters




}









public class Monitor {




   @Field(""res"")




   private String resolution;









  // setters/getters




}






   
 protected <S, T> List<T> doFind(String collectionName, DBObject query, DBObject fields, Class<S> entityClass,




			CursorPreparer preparer, DbObjectCallback<T> objectCallback)









 DBObject mappedQuery = queryMapper.getMappedObject(query, entity);






  @Field   
  
  
 
  
  @Field","org.springframework.data.mongodb.core.convert.QueryMapper
org.springframework.data.mongodb.core.convert.QueryMapperUnitTests"
FILE,DATAMONGO,DATAMONGO-1498,2016-09-25T22:21:26.000-05:00,not know about types auto-detected,"@JsonProperty(""myDate"")




    private DateTime myDate;






 
 
 
  
 
  @JsonUnwrapped 
 @JsonProperty(""myDate"")




    @JsonUnwrapped




    private DateTime myDate;






  @JsonUnwrapped","org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension
org.springframework.data.mongodb.config.AuditingViaJavaConfigRepositoriesTests
org.springframework.data.mongodb.config.MongoAuditingRegistrar"
CLASS,derby-10.7.1.1,DERBY-4624,2010-04-21T05:30:55.000-05:00,avoid testing across midnight,"while (calendar.get(Calendar.HOUR) == 23
						&& calendar.get(Calendar.MINUTE) >= 58) {
					try {
						Thread.sleep((60 - calendar.get(Calendar.SECOND)) * 1000);
					} catch (InterruptedException ie) {
						// ignore it
					}
				}

 
 calendar.get(Calendar.HOUR)   calendar.get(Calendar.HOUR)",org.apache.derbyTesting.functionTests.tests.lang.TimestampArithTest
CLASS,derby-10.7.1.1,DERBY-4654,2010-05-12T05:27:40.000-05:00,not escape special characters,"org.apache.derby.vti.Restriction.toSQL()  
 Restriction.doubleQuote()   IdUtil.normalToDelimited()","org.apache.derbyTesting.functionTests.tests.lang.RestrictedVTITest
org.apache.derby.vti.Restriction"
CLASS,derby-10.7.1.1,DERBY-4664,2010-05-18T18:56:12.000-05:00,"store procedures avoid DriverManager.getConnection(""jdbc:default:connection"")","DriverManager.getConnection(""jdbc:default:connection"");    
  
   
    SystemProcedures.getDefaultConn()   InternalDriver.activeDriver()",org.apache.derby.impl.jdbc.LOBStoredProcedure
CLASS,derby-10.7.1.1,DERBY-4665,2010-05-19T03:12:33.000-05:00,handle in TimestampArithTest,"printStackTrace(sqle);
					fail(""Unexpected exception from statement '"" + sql + ""'"");

 
 {
			System.out.println(s + "" is not a proper timestamp string."");
			System.out.println(e.getClass().getName() + "": "" + e.getMessage());
			e.printStackTrace();
			System.exit(1);
			return null;
		}","org.apache.derbyTesting.functionTests.tests.lang.TimestampArithTest.OneTest
org.apache.derbyTesting.functionTests.tests.lang.TimestampArithTest"
CLASS,derby-10.7.1.1,DERBY-4718,2010-06-28T02:48:44.000-05:00,correct wrong main() method in LocalizedDisplayScriptTest correct wrong main() method in LocalizedAttributeScriptTest,public static void main(),"org.apache.derbyTesting.functionTests.tests.i18n.LocalizedDisplayScriptTest
org.apache.derbyTesting.functionTests.tests.i18n.LocalizedAttributeScriptTest"
CLASS,derby-10.7.1.1,DERBY-4835,2010-10-06T11:05:13.000-05:00,cause java.lang.NoSuchMethodError not recompile with upgrade not recompile from 10.5.3.0 not recompile to 10.6.1.0,"tidlggls(blt_number,create_date,update_date,propagation_date,glossary_status,
     time_stamp,min_max_size )
    
      
 
  
 tidlrblt(BLT,BLT_SIZE,MIN_MAX_SIZE)  
 
     
  
   GeneratedMe
thod;    
  
  
 if (fromVersion.majorVersionNumber >= DataDictionary.DD_VERSION_DERBY_10_5)
				bootingDictionary.updateMetadataSPSes(tc);
			else
				bootingDictionary.clearSPSPlans();

  clearSPSPlans()","org.apache.derby.impl.sql.catalog.DD_Version
org.apache.derbyTesting.functionTests.tests.upgradeTests.BasicSetup"
CLASS,derby-10.7.1.1,DERBY-4884,2010-11-04T06:15:07.000-05:00,not change static properties in encrypted databases,setUp()   Decorator.encryptedDatabase(),"org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest
org.apache.derbyTesting.functionTests.tests.lang.DeadlockModeTest
org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest
org.apache.derbyTesting.junit.JDBCDataSource
org.apache.derbyTesting.junit.Decorator
org.apache.derbyTesting.junit.DriverManagerConnector"
CLASS,derby-10.7.1.1,DERBY-4889,2010-11-05T20:06:56.000-05:00,boolean conversion on embedded boolean conversion on client,"PreparedStatement ps = c.prepareStatement(""values cast(? as boolean)"");
        ps.setByte(1, (byte) 32);
        ResultSet rs = ps.executeQuery();
        rs.next();
        System.out.println(rs.getBoolean(1));

 If setByte()   setInt()","org.apache.derbyTesting.functionTests.tests.jdbcapi.ParameterMappingTest
org.apache.derby.impl.drda.DRDAConnThread"
CLASS,pig-0.11.1,PIG-2767,2012-06-25T09:11:20.000-05:00,create wrong schema after dereferencing dereference nested tuple fields,"PigStorage()  
  
   ;
DESCRIBE dereferenced;

   nested_tuple.f3;
DESCRIBE uses_dereferenced;

  {f1: int, nested_tuple: (f2: int,
f3: int)}  {f1: int, f2: int}","src.org.apache.pig.newplan.logical.expression.DereferenceExpression
test.org.apache.pig.test.TestPigServer"
CLASS,pig-0.11.1,PIG-2828,2012-07-19T05:03:16.000-05:00,null in DataType.compare,"Object field1 = o1.get(fieldNum);
                Object field2 = o2.get(fieldNum);
                if (!typeFound) {
                    datatype = DataType.findType(field1);
                    typeFound = true;
                }
                return DataType.compare(field1, field2, datatype, datatype);","src.org.apache.pig.data.DataType
src.org.apache.pig.builtin.TOP
test.org.apache.pig.test.TestNull"
CLASS,pig-0.11.1,PIG-2970,2012-10-12T15:58:03.000-05:00,get incorrect schema have unrelated inner query,"{noformat}
 
 {
     4          sym = daily.symbol;
     5          uniq_sym = distinct sym;
     6          --ignoring uniq_sym result
     7          generate group, daily;
     8  } 
  
  
 {noformat}","src.org.apache.pig.PigServer
src.org.apache.pig.backend.hadoop.executionengine.HExecutionEngine
test.org.apache.pig.test.TestEvalPipelineLocal"
CLASS,pig-0.11.1,PIG-3060,2012-11-20T02:29:04.000-06:00,contain empty bag,"{code}
  {(t:chararray)} 
 {
  c1 = foreach A generate FLATTEN(a1);
  generate COUNT(c1);
} ;
{code}","src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach
test.org.apache.pig.test.TestEvalPipelineLocal"
CLASS,pig-0.11.1,PIG-3114,2013-01-03T19:49:42.000-06:00,duplicate macro name error use pigunit,"{code:title=test.pig|borderStyle=solid}
    {
    $C = ORDER $QUERY BY total DESC, $A;
}  
  
     AS total;

queries_ordered = my_macro_1(queries_count, query);

    
   ;
{code}","src.org.apache.pig.PigServer
test.org.apache.pig.test.pigunit.TestPigTest
test.org.apache.pig.pigunit.PigTest
test.org.apache.pig.pigunit.pig.PigServer"
CLASS,pig-0.11.1,PIG-3267,2013-04-03T16:14:30.000-05:00,fail in limit query,"{code}
 
  
  
     ;
{code}

 
 {code}
  {code}","src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore
test.org.apache.pig.test.TestMRCompiler"
CLASS,pig-0.11.1,PIG-3290,2013-04-23T12:28:01.000-05:00,fail in trunk,"{noformat}
    
 {noformat}",src.org.apache.pig.newplan.logical.expression.DereferenceExpression
CLASS,pig-0.11.1,PIG-3292,2013-04-24T03:06:41.000-05:00,get cross product,"{code}
 
  
   {
  y = a.x;
  pair = cross a.x, y;
  generate flatten(pair);
}

 dump b;
{code}

 
 {code}
   
 {code}

 
 {code}
 
  
   {
  y = foreach a generate -(-x);
  pair = cross a.x, y;
  generate flatten(pair);
}

 dump b;
{code}","test.org.apache.pig.test.TestEvalPipelineLocal
src.org.apache.pig.newplan.logical.relational.LOCross"
CLASS,pig-0.11.1,PIG-3310,2013-05-03T02:59:57.000-05:00,not generate new uids for nested schema fields lead to miscomputations,"{code}
     
    
        
        
    
           as shop;

EXPLAIN K;
DUMP K;
{code}

 
 {code}
 
 {code}

 
 {code}
 
 {code}
 
        
      
  
 {code}
                  
              
              
              
              
              
 {code}

 
 {code}
                   
  
  
 {code}

     
 LOSplitOutput.getSchema()",src.org.apache.pig.newplan.logical.relational.LOSplitOutput
CLASS,pig-0.11.1,PIG-3316,2013-05-08T14:01:36.000-05:00,interpret DateTime values in special cases,";
dump A;","test.org.apache.pig.test.TestDefaultDateTimeZone
src.org.apache.pig.builtin.ToDate"
CLASS,pig-0.11.1,PIG-3329,2013-05-16T22:44:41.000-05:00,work with SPLIT,"RANK b;
dump d;","src.org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceOper
src.org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler"
CLASS,pig-0.11.1,PIG-3379,2013-07-16T13:37:26.000-05:00,cause PIG script,"{code:title=temp.pig}
       
      
    
    {
  DistinctDevices = DISTINCT Events.deviceId;
  nbDevices = SIZE(DistinctDevices);

  DistinctDevices = FILTER Events BY eventName == 'xuaHeartBeat';
  nbDevicesWatching = SIZE(DistinctDevices);

  GENERATE $0*60000 as timeStamp, nbDevices as nbDevices, nbDevicesWatching as nbDevicesWatching;
}
        
  GENERATE timeStamp;
describe A;
{code}
 
 {code}
   
    
 {code}","src.org.apache.pig.parser.LogicalPlanBuilder
src.org.apache.pig.PigServer
test.org.apache.pig.test.TestEvalPipeline2
src.org.apache.pig.newplan.logical.relational.LOInnerLoad
src.org.apache.pig.newplan.logical.expression.ProjectExpression"
CLASS,pig-0.11.1,PIG-3495,2013-10-02T16:40:25.000-05:00,test failures for streaming test failures on windows,"{code}
 
 PigStorage()  
 myfuncs.square(age);
dump b;
{code}",src.org.apache.pig.scripting.ScriptEngine
CLASS,pig-0.11.1,PIG-3510,2013-10-09T18:02:45.000-05:00,fail with filter statement,";
{code}
{code:title=one filter}
      ;
{code}",src.org.apache.pig.newplan.logical.optimizer.LogicalPlanOptimizer
CLASS,mahout-0.8,MAHOUT-1261,2013-06-13T10:09:15.000-05:00,return int have size Integer.MAX_VALUE have int,Longs.hashCode(id),core.src.main.java.org.apache.mahout.cf.taste.hadoop.TasteHadoopUtils
CLASS,mahout-0.8,MAHOUT-1314,2013-08-18T09:07:48.000-05:00,throw NullPointerException set REDUCE_STREAMING_KMEANS to true,"return input.getCentroid();  
 input.getCentroid()  clone();",core.src.main.java.org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer
CLASS,mahout-0.8,MAHOUT-1358,2013-11-18T01:58:22.000-06:00,throw IllegalArgumentException set REDUCE_STREAMING_KMEANS to true,"{Code}

 {Code}

  StreamingKMeansThread.call()

 {Code}
     Iterator<Centroid> datapointsIterator = datapoints.iterator();
    if (estimateDistanceCutoff == StreamingKMeansDriver.INVALID_DISTANCE_CUTOFF) {
      List<Centroid> estimatePoints = Lists.newArrayListWithExpectedSize(NUM_ESTIMATE_POINTS);
      while (datapointsIterator.hasNext() && estimatePoints.size() < NUM_ESTIMATE_POINTS) {
        estimatePoints.add(datapointsIterator.next());
      }
      estimateDistanceCutoff = ClusteringUtils.estimateDistanceCutoff(estimatePoints, searcher.getDistanceMeasure());
    }

    StreamingKMeans clusterer = new StreamingKMeans(searcher, numClusters, estimateDistanceCutoff);
    while (datapointsIterator.hasNext()) {
      clusterer.cluster(datapointsIterator.next());
    }
{Code}",core.src.main.java.org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansThread
CLASS,mahout-0.8,MAHOUT-1396,2014-01-15T02:02:41.000-06:00,not work with next Hadoop release,import org.apache.commons.math.special.Gamma;,core.src.main.java.org.apache.mahout.classifier.sgd.TPrior
CLASS,zookeeper-3.4.5,ZOOKEEPER-1619,2013-01-11T09:57:16.000-06:00,allow spaces in URL,"{code}
 
 {code}

 
 {code}
 
 {code}",src.java.main.org.apache.zookeeper.client.ConnectStringParser
CLASS,zookeeper-3.4.5,ZOOKEEPER-1642,2013-02-08T04:30:06.000-06:00,load database,"getLastLoggedZxid()    
 loadData()",src.java.main.org.apache.zookeeper.server.ZooKeeperServer
CLASS,zookeeper-3.4.5,ZOOKEEPER-1753,2013-09-05T09:37:15.000-05:00,not release resources ping RwServer,"pingRwServer()
{code}
             try {
                Socket sock = new Socket(addr.getHostName(), addr.getPort());
                BufferedReader br = new BufferedReader(
                        new InputStreamReader(sock.getInputStream()));
                ......
                sock.close();
                br.close();
            } catch (ConnectException e) {
                // ignore, this just means server is not up
            } catch (IOException e) {
                // some unexpected error, warn about it
                LOG.warn(""Exception while seeking for r/w server "" +
                        e.getMessage(), e);
            }
 {code}",src.java.main.org.apache.zookeeper.ClientCnxn
CLASS,zookeeper-3.4.5,ZOOKEEPER-1774,2013-10-01T18:14:39.000-05:00,fail with complains,"{noformat}
     
     
 {noformat}",src.java.test.org.apache.zookeeper.server.quorum.QuorumPeerMainTest
CLASS,zookeeper-3.4.5,ZOOKEEPER-1781,2013-10-03T20:19:27.000-05:00,set snapCount,"int randRoll = r.nextInt(snapCount/2);
{code}",src.java.main.org.apache.zookeeper.server.ZooKeeperServer
METHOD,bookkeeper-4.1.0,BOOKKEEPER-294,2012-06-12T23:56:56.000-05:00,start bookkeeper before ZK session timeout,"{noformat}
         
 {noformat}","org.apache.bookkeeper.bookie.Bookie:readJournal()
org.apache.bookkeeper.bookie.Bookie:registerBookie(int)
org.apache.bookkeeper.bookie.Bookie:start()
org.apache.bookkeeper.proto.BookieServer:start()"
METHOD,bookkeeper-4.1.0,BOOKKEEPER-318,2012-06-26T01:55:45.000-05:00,log message for spelling,"{code}
 @Override
        public void processResult(int rc, String path, Object ctx) {
            if (rc != successRc) {
                LOG.error(""Error in multi callback : "" + rc);
                exceptions.add(rc);
            }
            tick();
        }
 {code}",":processResult(int, String, Object)"
METHOD,bookkeeper-4.1.0,BOOKKEEPER-355,2012-08-08T05:02:04.000-05:00,mark ledger close in_case_of slow bookie add slow bookie to ensemble add slow bookie during recovery,doRecoveryRead(),"org.apache.bookkeeper.client.LedgerRecoveryOp:doRecoveryRead()
org.apache.bookkeeper.client.LedgerRecoveryOp:readComplete(int, LedgerHandle, Enumeration<LedgerEntry>, Object)
org.apache.bookkeeper.client.LedgerRecoveryOp:LedgerRecoveryOp(LedgerHandle, GenericCallback<Void>)
org.apache.bookkeeper.client.LedgerRecoveryOp:initiate()
org.apache.bookkeeper.client.PendingReadOp:readEntryComplete(int, long, long, ChannelBuffer, Object)"
METHOD,bookkeeper-4.1.0,BOOKKEEPER-371,2012-08-17T05:42:02.000-05:00,cause hedwig hub,"Channel topicSubscriberChannel = client.getSubscriber().getChannelForTopic(topicSubscriber);
        HedwigClientImpl.getResponseHandlerFromChannel(topicSubscriberChannel).getSubscribeResponseHandler()
        .messageConsumed(messageConsumeData.msg);


  getPipeline()  getLast()   channel.close()   messageConsumed()","org.apache.hedwig.client.netty.HedwigClientImpl:getResponseHandlerFromChannel(Channel)
org.apache.hedwig.client.handlers.MessageConsumeCallback:operationFailed(Object, PubSubException)
org.apache.hedwig.client.handlers.MessageConsumeCallback.MessageConsumeRetryTask:run()"
METHOD,bookkeeper-4.1.0,BOOKKEEPER-55,2011-08-25T05:52:23.000-05:00,retry subscription,HedwigSubscriber.subscribe(),org.apache.hedwig.client.handlers.SubscribeReconnectCallback.SubscribeReconnectRetryTask:run()
CLASS,argouml-0.22,3923,2006-02-07T13:17:48.000-06:00,import Poseidon activity diagrams from XMI,"Collection actionStates = getModel().getAllActionStates();
  Iterator iterActionState = actionStates.iterator();
iterActionState.hasNext(); 
 ActionStateFacade actionState =
(ActionStateFacade) iterActionState.next();",org.argouml.persistence.XMIParser
CLASS,argouml-0.22,4200,2006-05-11T23:30:25.000-05:00,vanish in new package,Model folder;,"org.argouml.ui.explorer.PerspectiveManager
org.argouml.ui.explorer.rules.GoModelElementToBehavior"
METHOD,apache-nutch-1.8,NUTCH-1262,2012-01-31T03:15:33.000-06:00,duplicate content-types to single type,"{code}
   
 {code}","org.apache.nutch.indexer.more.MoreIndexingFilter:getConf()
org.apache.nutch.indexer.more.MoreIndexingFilter:setConf(Configuration)
org.apache.nutch.indexer.more.MoreIndexingFilter:filter(NutchDocument, Parse, Text, CrawlDatum, Inlinks)"
CLASS,lucene-4.0,LUCENE-4182,2012-06-29T06:45:34.000-05:00,trip by NGramTokenizerTest.testRandomStrings,"{noformat}

  
 
  
  
    
 
 
   
  
    
                                       
                                
    
          
     {0,5}     {0,5}      {0,5}         {1,5}  {0, & qgbiwn  < vyge acmvidw xbwgrppk \uf612p\u05f5^\u048f\u056d \ud6436\u9cde0\u274e\u0592 tamcca \ufd7b\ufbf9\ufb88\ufbae tusifiwj \u000f\u0600\uef93}                   {0,5}       
      
 @AfterClass 
         {dummy=DFR I(n)3(800.0)}   
                                                                                            
 {noformat}",org.apache.lucene.index.DocumentsWriterFlushControl
CLASS,lucene-4.0,LUCENE-4461,2012-10-05T10:21:38.000-05:00,create inconsistent results,"FacetSearchParams facetSearchParams = new FacetSearchParams();
		facetSearchParams.addFacetRequest(new CountFacetRequest(new CategoryPath(""author""), 10));
		facetSearchParams.addFacetRequest(new CountFacetRequest(new CategoryPath(""author""), 10));",org.apache.lucene.facet.search.StandardFacetsAccumulator
CLASS,jedit-4.3,1193683,2005-05-02T09:22:25.000-05:00,be in black hole,"{\{\{ test
aaaa
bbbb
cccc
\}",org.gjt.sp.jedit.textarea.BufferHandler
CLASS,jedit-4.3,1571752,2006-10-05T21:26:12.000-05:00,fold wrong comments in PHP mode,"{

\} 
 {\{\{  --&gt;
function foo\(\) \{

\} //\}\}\}",org.gjt.sp.jedit.textarea.TextArea
CLASS,jedit-4.3,1658252,2007-02-12T17:48:03.000-06:00,match in multi-line defines,"{ \
code;                         \
more code;                    \
even more code;               \
\}","org.gjt.sp.jedit.syntax.ParserRule
org.gjt.sp.jedit.syntax.XModeHandler
org.gjt.sp.jedit.syntax.XModeHandler.TagDecl
org.gjt.sp.jedit.syntax.TokenMarker"
CLASS,jedit-4.3,1724940,2007-05-24T15:02:18.000-05:00,type in multiple,"lt;body&gt;
  lt;p&gt;
 
 the &lt;p&gt;  
 lt;body&gt;
  lt;d&gt;",org.gjt.sp.jedit.textarea.BufferHandler
CLASS,jedit-4.3,1999448,2008-08-23T10:28:24.000-05:00,fold expantion,"{\{\{ hello

something

\}","org.gjt.sp.jedit.textarea.BufferHandler
org.gjt.sp.jedit.textarea.DisplayManager
org.gjt.sp.jedit.textarea.TextArea"
CLASS,jedit-4.3,2129419,2008-09-25T23:53:11.000-05:00,quit jEdit,lt;init&gt;,org.gjt.sp.jedit.gui.CloseDialog.ListHandler
CLASS,jedit-4.3,2759434,2009-04-13T17:19:22.000-05:00,indent related bug,"lt;ENTER&gt;
  lt;CARRET&gt;",org.gjt.sp.util.StandardUtilities
CLASS,jabref-2.6,1631548,2007-01-09T14:20:57.000-06:00,depend on working dir,{HOME\},net.sf.jabref.JabRefFrame
METHOD,apache-nutch-2.1,NUTCH-1484,2012-11-01T03:36:57.000-05:00,fail on file,"{code}
 {code}","org.apache.nutch.util.TestTableUtil:assertReverse(String, String)
org.apache.nutch.util.TestTableUtil:testReverseUrl()
org.apache.nutch.util.TestTableUtil:testUnreverseUrl()"
CLASS,openjpa-2.0.1,OPENJPA-1752,2010-07-29T23:33:45.000-05:00,produce inconsistent behavior with various backends,"testFindAfterQueryWithPessimisticLocks()
  testFindAfterQueryOrderByWithPessimisticLocks()
  testQueryAfterFindWithPessimisticLocks()
  testQueryOrderByAfterFindWithPessimisticLocks()


 
 testFindAfterQueryWithPessimisticLocks() 
  No exception;",org.apache.openjpa.persistence.lockmgr.TestPessimisticLocks
CLASS,openjpa-2.0.1,OPENJPA-1787,2010-09-10T11:23:51.000-05:00,merge new entity,"EntityManager em = entityManagerFactory.createEntityManager();
        Person person = new Person();
        person.setName(""Oliver"");                               // Employee.name is annotated @NotNull 
        person = em.merge(person);","org.apache.openjpa.kernel.BrokerImpl
org.apache.openjpa.kernel.AttachStrategy
org.apache.openjpa.integration.validation.TestValidationGroups"
CLASS,openjpa-2.0.1,OPENJPA-1903,2010-12-06T13:05:34.000-06:00,work first time,"@Entity
@IdClass(MandantAndNameIdentity.class)
public class Website {
    @Id
    private String mandant;
   
    @Id
    private String name;
...
}

 @Entity
@IdClass(WebsiteProduktDatumIdentity.class)
public class Preis {
    @Id
    @ManyToOne(cascade = CascadeType.MERGE)
    private Website website;

    @Id
    @Basic
    private String datum;
...
}

 
 em.getTransaction().begin();

        Website website = em.merge(new Website(""Mandant"", ""Website""));

        em.merge(new Preis(website, DATUM));
       
        em.getTransaction().commit();

 
 TypedQuery<Preis> q = em.createQuery(
                ""select m from Preis m "" +
                ""where m.website.name = :website "", Preis.class);
       q.setParameter(""website"", website.getName());

 
 TypedQuery<Preis> q = em.createQuery(
                ""select m from Preis m "" +
                ""where m.website = :website "", Preis.class);
        q.setParameter(""website"", website);",org.apache.openjpa.jdbc.kernel.PreparedQueryImpl
CLASS,openjpa-2.0.1,OPENJPA-1912,2011-01-03T13:48:09.000-06:00,generate invalid code,"@Entity
public abstract class AbstractGroup {
   ...
    @Temporal(TemporalType.TIMESTAMP)
    @TrackChanges
    private Date applicationBegin;
 ...
}

 
 @Entity
public class Group extends AbstractGroup {
...
}

 
 public void writeExternal(ObjectOutput objectoutput)
        throws IOException
     
 pcWriteUnmanaged(objectoutput);
        if(pcStateManager != null)
        {
            if(pcStateManager.writeDetached(objectoutput))
                return;
        } else
        {
            objectoutput.writeObject(pcGetDetachedState());
            objectoutput.writeObject(null);
        }
        objectoutput.writeObject(applicationBegin);
        objectoutput.writeObject(applicationEnd);
        objectoutput.writeObject(applicationLocked);
        objectoutput.writeObject(approvalRequired);",org.apache.openjpa.enhance.PCEnhancer
CLASS,openjpa-2.0.1,OPENJPA-1918,2011-01-06T08:11:24.000-06:00,ignore class loader,"PersistenceUnitInfo.getClassLoader() 
 MetaDataRepository.preload()      
 PersistenceUnitInfo.getClassLoader()    
  
   PersistenceProvider.createContainerEntityManagerFactory()  MetaDatRepository.preload()","org.apache.openjpa.meta.FieldMetaData
org.apache.openjpa.meta.MetaDataRepository
org.apache.openjpa.persistence.detach.NoVersionEntity"
CLASS,openjpa-2.0.1,OPENJPA-1928,2011-01-20T17:43:52.000-06:00,not allow method overriding,"@Factory 
 @Persistent(optional = false)
	@Column(name = ""STATUS"")
	@Externalizer(""getName"")
	@Factory(""valueOf"")
	public OrderStatus getStatus() {
		return this.status;
	}

 public class OrderStatus {
   public static OrderStatus valueOf(final int ordinal) {
        return valueOf(ordinal, OrderStatus.class);
    }
    
    public static OrderStatus valueOf(final String name) {
        return valueOf(name, OrderStatus.class);
    }
}

 
 valueOf(String)  
 valueOf(String)",org.apache.openjpa.meta.FieldMetaData
CLASS,openjpa-2.0.1,OPENJPA-1975,2011-04-07T15:57:51.000-05:00,obtain default schema name,DB2Dictionary.connectedConfiguration(),"org.apache.openjpa.jdbc.sql.DBDictionary
org.apache.openjpa.jdbc.sql.DB2Dictionary"
CLASS,openjpa-2.0.1,OPENJPA-1986,2011-04-27T11:44:53.000-05:00,cascade persist,"@Entity
public class CascadePersistEntity implements Serializable {
    private static final long serialVersionUID = -8290604110046006897L;

    @Id
    long id;

    @OneToOne(cascade = CascadeType.ALL)
    CascadePersistEntity other;
...
}

 
 CascadePersistEntity cpe1 = new CascadePersistEntity(1);
CascadePersistEntity cpe2 = new CascadePersistEntity(2);
cpe1.setOther(cpe2);
em.persist(cpe1);","org.apache.openjpa.kernel.BrokerImpl
org.apache.openjpa.conf.Compatibility
org.apache.openjpa.kernel.SingleFieldManager"
CLASS,openjpa-2.0.1,OPENJPA-2132,2012-02-14T14:48:29.000-06:00,return empty list,@Inheritance(strategy=InheritanceType.JOINED),org.apache.openjpa.jdbc.kernel.JDBCStoreManager
CLASS,openjpa-2.0.1,OPENJPA-2289,2012-10-31T13:40:55.000-05:00,generate incorrect # of rows generate incorrect # for query,"createQuery(""SELECT e FROM MaxQueryEntity e, MaxQueryMapEntity map ""
                    + ""WHERE map.selectCriteria = 'B3' AND map.refEntity = e ""
                    + ""  AND e.revision = ( SELECT MAX(e_.revision)""
                    + ""                     FROM MaxQueryEntity e_""
                    + ""                     WHERE e_.domainId = e.domainId )""
                    + ""  AND map.revision = ( SELECT MAX(map_.revision)""
                    + ""                       FROM MaxQueryMapEntity map_""
                    + ""                       WHERE map_.refEntity = map.refEntity )"");","org.apache.openjpa.jdbc.sql.SelectImpl
org.apache.openjpa.jdbc.sql.OracleDictionary
org.apache.openjpa.jdbc.sql.DBDictionary"
METHOD,lang,LANG-300,2006-12-19T17:47:43.000-06:00,throw NumberFormatException for digit,isDigits(numeric.substring(1))  numeric.substring(1),org.apache.commons.lang.math.NumberUtils:createNumber(String)
METHOD,lang,LANG-346,2007-07-06T20:06:55.000-05:00,behave for minutes behave for seconds,"public void testRound()
{
    Calendar testCalendar = Calendar.getInstance(TimeZone.getTimeZone(""GMT""));
    testCalendar.set(2007, 6, 2, 8, 9, 50);
    Date date = testCalendar.getTime();
    System.out.println(""Before round() "" + date);
    System.out.println(""After round()  "" + DateUtils.round(date, Calendar.MINUTE));
}

 
 Before round()  
 After round()   
 Before round()  
 After round()","org.apache.commons.lang.time.DateUtils:modify(Calendar, int, boolean)"
METHOD,lang,LANG-363,2007-10-23T07:12:48.000-05:00,not escape /' into '\/ make IE render page,"document.getElementById(""test"")   document.getElementById(""test"") 
  
 String s = ""<script>alert('aaa');</script>"";
  String str = org.springframework.web.util.JavaScriptUtils.javaScriptEscape(s);
  System.out.println(""Spring JS Escape : ""+str);
  str = org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(s);
  System.out.println(""Apache Common Lang JS Escape : ""+ str);","org.apache.commons.lang.StringEscapeUtils:escapeJavaStyleString(Writer, String, boolean)"
METHOD,lang,LANG-477,2009-01-09T10:05:53.000-06:00,contain single quotes,"{code:title=ExtendedMessageFormatTest.java|borderStyle=solid}

 private static Map<String, Object> formatRegistry = new HashMap<String, Object>();    
     static {
        formatRegistry.put(DummyFormatFactory.DUMMY_FORMAT, new DummyFormatFactory());
    }
    
     public static void main(String[] args) {
        ExtendedMessageFormat mf = new ExtendedMessageFormat(""it''s a {dummy} 'test'!"", formatRegistry);
        String formattedPattern = mf.format(new String[] {""great""});
        System.out.println(formattedPattern);
    }
 
 {code}

 
 {code:title=ExtendedMessageFormat.java|borderStyle=solid}
 
 if (escapingOn && c[start] == QUOTE) {
        return appendTo == null ? null : appendTo.append(QUOTE);
}

WORKING:
if (escapingOn && c[start] == QUOTE) {
        next(pos);
        return appendTo == null ? null : appendTo.append(QUOTE);
}
{code}","org.apache.commons.lang.text.ExtendedMessageFormat:appendQuotedString(String, ParsePosition, StringBuffer, boolean)"
METHOD,lang,LANG-480,2009-01-20T17:36:44.000-06:00,convert unicode characters into characters convert unicode characters above u ffff,"import org.apache.commons.lang.*;

public class J2 {
    public static void main(String[] args) throws Exception {
        // this is the utf8 representation of the character:
        // COUNTING ROD UNIT DIGIT THREE
        // in unicode
        // codepoint: U+1D362
        byte[] data = new byte[] { (byte)0xF0, (byte)0x9D, (byte)0x8D, (byte)0xA2 };

        //output is: &amp;#55348;&amp;#57186;
        // should be: &amp;#119650;
        System.out.println(""'"" + StringEscapeUtils.escapeHtml(new String(data, ""UTF8"")) + ""'"");
    }
}","org.apache.commons.lang.Entities:escape(Writer, String)"
METHOD,lang,LANG-538,2009-10-16T16:47:39.000-05:00,not change Calendar TimeZone in certain situations,"Calenar.getTime()    
 {noformat}
   public void testFormat_CalendarIsoMsZulu() {
    final String dateTime = ""2009-10-16T16:42:16.000Z"";

    // more commonly constructed with: cal = new GregorianCalendar(2009, 9, 16, 8, 42, 16)
    // for the unit test to work in any time zone, constructing with GMT-8 rather than default locale time zone
    GregorianCalendar cal = new GregorianCalendar(TimeZone.getTimeZone(""GMT-8""));
    cal.clear();
    cal.set(2009, 9, 16, 8, 42, 16);


    FastDateFormat format = FastDateFormat.getInstance(""yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"", TimeZone.getTimeZone(""GMT""));
    assertEquals(""dateTime"", dateTime, format.format(cal));
  }
 {noformat}

 
 {noformat}
   public void testFormat_CalendarIsoMsZulu() {
    final String dateTime = ""2009-10-16T16:42:16.000Z"";
    GregorianCalendar cal = new GregorianCalendar(TimeZone.getTimeZone(""GMT-8""));
    cal.clear();
    cal.set(2009, 9, 16, 8, 42, 16);
    cal.getTime();

    FastDateFormat format = FastDateFormat.getInstance(""yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"", TimeZone.getTimeZone(""GMT""));
    assertEquals(""dateTime"", dateTime, format.format(cal));
  }
 {noformat}","org.apache.commons.lang3.time.FastDateFormat:format(Calendar, StringBuffer)"
METHOD,lang,LANG-624,2010-05-27T21:09:29.000-05:00,throw StringIndexOutOfBoundsException on Android runtime/dalvik VM,"{noformat}

   
   
         
   
          {noformat}",org.apache.commons.lang3.SystemUtils:toJavaVersionInt(String)
METHOD,lang,LANG-710,2011-07-01T20:57:30.000-05:00,"call unescapeHtml4(""&#03"")",unescapeHtml4(),"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:translate(CharSequence, int, Writer)"
METHOD,lang,LANG-746,2011-08-23T12:32:12.000-05:00,not handle upper-case hex,"NumberUtils.createNumber()   
 Integer.decode()",org.apache.commons.lang3.math.NumberUtils:createNumber(String)
METHOD,lang,LANG-788,2012-02-11T12:36:48.000-06:00,throw ClassNotFoundException clone primitive classes,"{noformat}
 import org.apache.commons.lang3.SerializationUtils;
import org.junit.Test;


public class SerializationUtilsTest {

	
	@Test
	public void primitiveTypeClassSerialization(){
		Class<?> primitiveType = int.class;
		
		Class<?> clone = SerializationUtils.clone(primitiveType);
		assertEquals(primitiveType, clone);
	}
}
 {noformat} 

  
         
    
  
 {noformat}
         protected Class<?> resolveClass(ObjectStreamClass desc) throws IOException, ClassNotFoundException {
            String name = desc.getName();
            try {
                return Class.forName(name, false, classLoader);
            } catch (ClassNotFoundException ex) {
            	try {
            	     return Class.forName(name, false, Thread.currentThread().getContextClassLoader());
            	} catch (Exception e) {
		     return super.resolveClass(desc);
		}
            }
        }
 {noformat}

   
 {noformat}
     protected Class<?> resolveClass(ObjectStreamClass desc)
	throws IOException, ClassNotFoundException
    {
	String name = desc.getName();
	try {
	    return Class.forName(name, false, latestUserDefinedLoader());
	} catch (ClassNotFoundException ex) {
	    Class cl = (Class) primClasses.get(name);
	    if (cl != null) {
		return cl;
	    } else {
		throw ex;
	    }
	}
    }
 {noformat}","org.apache.commons.lang3.SerializationUtils:ClassLoaderAwareObjectInputStream(InputStream, ClassLoader)
org.apache.commons.lang3.SerializationUtils:resolveClass(ObjectStreamClass)"
METHOD,lang,LANG-832,2012-09-27T00:27:58.000-05:00,not handle unterminated quotes,{IsNd},org.apache.commons.lang3.time.FastDateParser:init()
METHOD,lang,LANG-879,2013-03-18T21:46:29.000-05:00,fail with new Locale,"import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.equalTo;

import java.util.Locale;

import org.testng.annotations.Test;

import com.scispike.foundation.i18n.StringToLocaleConverter;

public class LocaleStringConverterTest {

	StringToLocaleConverter converter = new StringToLocaleConverter();

	public void testStringToLocale(Locale l) {
		String s = l.toString();

		assertThat(converter.convert(s), equalTo(l));
	}

	@Test
	public void testAllLocales() {

		Locale[] locales = Locale.getAvailableLocales();
		for (Locale l : locales) {
			testStringToLocale(l);
		}
	}
}


  
 import java.util.Locale;

import org.apache.commons.lang3.LocaleUtils;
import org.springframework.core.convert.converter.Converter;

public class StringToLocaleConverter implements Converter<String, Locale> {

	@Override
	public Locale convert(String source) {
		if (source == null) {
			return LocaleToStringConverter.DEFAULT;
		}
		return LocaleUtils.toLocale(source);
	}
}",org.apache.commons.lang3.LocaleUtils:toLocale(String)
FILE,SWARM,SWARM-528,2016-06-22T02:53:46.000-05:00,not work with @ArquillianResource URL baseURL,"@ArquillianResource 
  
 
 
 
 @ArquillianResource 
  
 
 
 
 @ArquillianResource",org.wildfly.swarm.arquillian.resources.SwarmURLResourceProvider
FILE,SWARM,SWARM-486,2016-05-28T18:25:37.000-05:00,not load project-stages.yml with arq not load project-stages.yml on classpath,"classpath(src/main/resources)  
 
 
 container.withStageConfig(Paths.get(""/tmp"", ""external-project-stages.yml"").toUri().toURL())",org.wildfly.swarm.container.ProjectStagesTest
FILE,SWARM,SWARM-691,2016-09-16T21:54:39.000-05:00,occur ParseError of web.xml,as(Secured.class),org.wildfly.swarm.undertow.descriptors.WebXmlAsset
METHOD,derby-10.9.1.0,DERBY-5663,2012-03-17T23:45:11.000-05:00,get NPE set derby.language.logStatementText property to true,patch(DERBY5663_patch1.txt),"org.apache.derbyTesting.functionTests.tests.largedata.LobLimitsTest:baseSuite(int, int)
org.apache.derbyTesting.junit.SystemPropertyTestSetup:setProperties(Properties)"
METHOD,derby-10.9.1.0,DERBY-5912,2012-08-28T19:43:59.000-05:00,fail for NetworkServer,"isValid()  
 testIsValidImplemented(org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionTest) 
 
  assertTrue(getConnection().isValid(1));",org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionTest:testIsValidImplemented()
METHOD,derby-10.9.1.0,DERBY-5951,2012-10-16T10:33:53.000-05:00,use Clobs with territory base collation,"db;create=true; 
   varchar( 32672 )  
  
  
  
 clobTable( a )   makeClob( 'a' )  
   varchar( 32672 )  
  
  
 clobTable( a )   makeClob( 'a' )  
     Ljava/sql/Clob;Lorg/apache/derby/iapi/types/StringDataValue;   
   Ljava/sql/Clob;Lorg/apache/derby/iapi/types/StringDataValue;     
  
 clobTable( a )   makeClob( 'a' )",org.apache.derby.iapi.types.CollatorSQLClob:getNewNull()
METHOD,derby-10.9.1.0,DERBY-6073,2013-02-15T10:11:27.000-06:00,order instability in StatementPoolingTest,StatementPoolingTest.testPoolingEnabledByCheckingImplementationDetails()   testCacheOverflow()  If testPoolingEnabledByCheckingImplementationDetails()    testPoolingEnabledByCheckingImplementationDetails(),"org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest:testIsolationLevelIsResetExplicitCloseQuery()
org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest:testPoolingEnabledByCheckingImplementationDetails()
org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest:testDeleteReferringTableWhenInCache()
org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest:testGetStatementCallable()
org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest:testGetStatementPrepared()
org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest:testIsolationLevelIsResetExplicitCloseNoQuery()
org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest:testPrepareCallPath()
org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest:testCachingLogicalConnectionCloseLeavesPhysicalStatementsOpen()
org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest:testHoldabilityIsResetNoExplicitClose()
org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest:testCacheOverflow()
org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest:testPrepareCallWithNoCallPath()
org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest:suite()
org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest:testIsolationLevelIsResetNoExplicitCloseNoQuery()
org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest:testTemporaryTablesAreDeletedInNewLogicalConnection()
org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest:testClosingPSClosesRS()
org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest:testIsolationLevelIsResetNoExplicitCloseQuery()
org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest:testPrepareStatementPath()
org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest:testDeleteReferringTableWhenOpen()
org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest:testHoldabilityIsResetExplicitClose()"
METHOD,derby-10.9.1.0,DERBY-6089,2013-02-21T22:39:19.000-06:00,lack check of legal types,"registerOutParameter(int parameterIndex,
int sqlType, String typeName)","org.apache.derby.impl.jdbc.EmbedPreparedStatement:setNull(int, int)
org.apache.derby.client.am.Agent:accumulateDeferredException(SqlException)
org.apache.derby.client.am.PreparedStatement:checkScaleForINOUTDecimal(int, int)
org.apache.derby.client.am.CallableStatement:registerOutParameterX(int, int, int)
org.apache.derby.impl.jdbc.ConnectionChild:newSQLException(String)
org.apache.derby.client.am.PreparedStatement:checkForSupportedDataType(int)
org.apache.derby.impl.sql.GenericParameterValueSet:registerOutParameter(int, int, int)"
METHOD,derby-10.9.1.0,DERBY-6150,2013-04-03T19:58:03.000-05:00,add automatic cleanup of connections open with openDefaultConnection(),openDefaultConnection()   tearDown(),"org.apache.derbyTesting.junit.BaseJDBCTestCase:openDefaultConnection()
org.apache.derbyTesting.junit.BaseJDBCTestCase:openConnection(String)
org.apache.derbyTesting.junit.BaseJDBCTestCase:openDefaultConnection(TestConfiguration)"
FILE,eclipse-3.1,100137,2005-06-15T04:29:00.000-05:00,not work in details pane,"public class A {
	String dog1 = ""Max"", dog2 = ""Bailey"", dog3 = ""Harriet"";
	public static void main(String[] args) {
		new A().foo();
	}
	
	void foo() {
		String p= """";
	}
}",org.eclipse.jdt.launching.StandardClasspathProvider
FILE,eclipse-3.1,102427,2005-06-30T20:45:00.000-05:00,not import methods,"public class Helper {
    public static int getValue() {...}
}
  
import static Helper.*;

public class Doer {
    public void doit() {
        int i = getValue();
    }
}
 
 getValue() 
 getValue()",org.eclipse.jdt.internal.debug.eval.ast.engine.SourceBasedSourceGenerator
FILE,eclipse-3.1,103379,2005-07-11T15:37:00.000-05:00,leak time leak editor instance,dispose(),org.eclipse.ui.operations.OperationHistoryActionHandler
FILE,eclipse-3.1,103918,2005-07-14T17:25:00.000-05:00,create dynamic proxy in rich client,"public void start(BundleContext context) throws Exception {
  super.start(context);
  XmlBeanFactory bf = new XmlBeanFactory(
     new ClassPathResource(""/bug/beans.xml""));
  bf.getBean(""hang"");
}

  bf.getBean(""hang"")  
 bf.getBean()",org.eclipse.core.runtime.internal.adaptor.ContextFinder
FILE,eclipse-3.1,110837,2005-09-27T13:16:00.000-05:00,throw exception in IDE,"KeyAgreement.getInstance(""DiffieHellman"")  
  
 
import java.security.NoSuchAlgorithmException;
import javax.crypto.KeyAgreement;

public class KeyAgreementProblem
{
    public static void main(String[] args) throws NoSuchAlgorithmException
    {
        KeyAgreement ka = KeyAgreement.getInstance(""DiffieHellman"");
        System.out.println(ka);
    }
}
 
 
  
  
 javax.crypto.KeyAgreement.getInstance(DashoA12275)","org.eclipse.jdt.launching.AbstractJavaLaunchConfigurationDelegate
org.eclipse.jdt.internal.launching.JRERuntimeClasspathEntryResolver
org.eclipse.jdt.internal.launching.StandardVMType"
FILE,eclipse-3.1,133072,2006-03-23T16:58:00.000-06:00,not launch eclipse application without ws argument,"package Fred;

import javax.swing.JFrame;
import javax.swing.SwingUtilities;

import org.eclipse.core.runtime.IPlatformRunnable;

public class Main implements IPlatformRunnable {

       public Object run(Object args) throws Exception {
               SwingUtilities.invokeLater(new Runnable() {
                       public void run() {
                               new JFrame(""Fred"").setVisible(true);
                       }
               });
               synchronized(this)
               {
                       wait();
               }
               return IPlatformRunnable.EXIT_OK;
       }

}","org.eclipse.pde.internal.ui.IPDEUIConstants
org.eclipse.pde.internal.ui.launcher.LaunchAction"
FILE,eclipse-3.1,133292,2006-03-26T06:15:00.000-06:00,accept spurious semicolon in array initialiser,"{
    /* On the next line, the first semicolon is a syntax error. 
     * The error is not reported, and the program will run and print ""Fail"".
     * Without the semicolon, it prints ""foo"" as expected. */
    public static Baz.C a[] =  { new Baz.C(""foo"") ; } 
 public static void main(String args[]) {
	if (a == null)
	    System.out.println(""Fail"");
	else
	    System.out.println(a[0]);
    }
 
 class Baz {
    public static class C {
	String name;
	public C(String name) { this.name = name; }
	public String toString() { return name; }
    }
}","org.eclipse.jdt.internal.compiler.parser.RecoveredField
org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable"
FILE,eclipse-3.1,300054,2010-01-19T10:12:00.000-06:00,copy changes from right copy changes to left,"public class Bug {
	void bar() {
		System.out.println();
	}
}
  System.out.println();",org.eclipse.compare.internal.Utilities
FILE,eclipse-3.1,76534,2004-10-18T22:57:00.000-05:00,not perform evaluations with constructor _ parameters not perform evaluations inside inner class,createViewer(...),org.eclipse.jdt.internal.debug.eval.ast.engine.SourceBasedSourceGenerator
FILE,eclipse-3.1,77234,2004-10-28T15:41:00.000-05:00,not see inherited method,"getTypeName() 
  
  
  
 getTypeName()   JavaExceptionBreakpoint

getTypeName()",org.eclipse.jdt.internal.debug.ui.JavaDetailFormattersManager
FILE,eclipse-3.1,77249,2004-10-28T17:57:00.000-05:00,cancel public modifier,"@Jpf.Controller 
public class Foo {...} 
 @Jpf.Controller(
    catches={
       @Jpf.Catch(type=java.lang.Exception.class, method=""handleException""),
       @Jpf.Catch(type=PageFlowException.class, 
method=""handlePageFlowException"")
    }
)
public class Foo {
...
}","org.eclipse.jdt.core.dom.ASTConverter
org.eclipse.swt.graphics.GC"
FILE,eclipse-3.1,77573,2004-11-03T04:43:00.000-06:00,not propose static fields,import static java.lang.Math,"org.eclipse.jdt.internal.codeassist.CompletionEngine
org.eclipse.jdt.core.CompletionProposal
org.eclipse.jdt.core.CompletionRequestor"
FILE,eclipse-3.1,78647,2004-11-15T13:52:00.000-06:00,add breakpoint on invalid location,"public class Test {
  public static void main(String[] args) {
    int i= 
      2
      +
      (short)3;  // <-- breakpoint here
  }
}",org.eclipse.jdt.internal.debug.ui.actions.ValidBreakpointLocationLocator
FILE,eclipse-3.1,78740,2004-11-16T10:57:00.000-06:00,represent interface flags,"becomeDetailed()   

package org.example.jdom;

import org.eclipse.core.runtime.IPlatformRunnable;
import org.eclipse.jdt.core.Flags;
import org.eclipse.jdt.core.jdom.DOMFactory;
import org.eclipse.jdt.core.jdom.IDOMCompilationUnit;
import org.eclipse.jdt.core.jdom.IDOMType;

public class Test implements IPlatformRunnable
{
  public Object run(Object object)
  {
    DOMFactory factory = new DOMFactory();
    IDOMCompilationUnit jCompilationUnit =
factory.createCompilationUnit(""package x; /** @model */ interface X  {}"", ""NAME"");
    IDOMType jType = (IDOMType)jCompilationUnit.getFirstChild().getNextNode(); 
    System.err.println("""" + ((jType.getFlags() & Flags.AccInterface) != 0));
    jType.getComment();
    System.err.println("""" + ((jType.getFlags() & Flags.AccInterface) != 0));
    return new Integer(0);
  }
}",org.eclipse.jdt.internal.compiler.DocumentElementParser
FILE,eclipse-3.1,78746,2004-11-16T11:50:00.000-06:00,contain in status line render with _,"interface I {
    static void m(/*caret_here*/);
}","org.eclipse.ui.texteditor.AbstractDecoratedTextEditor
org.eclipse.ui.internal.util.Util
org.eclipse.ui.internal.texteditor.quickdiff.QuickDiffRestoreAction
org.eclipse.ui.internal.editors.quickdiff.QuickDiffRestoreAction
org.eclipse.jface.action.StatusLine
org.eclipse.ui.internal.editors.quickdiff.CompositeRevertAction
org.eclipse.jface.util.Util"
FILE,eclipse-3.1,79091,2004-11-19T13:00:00.000-06:00,report invalid type on name,class X { Zork[] foo; },"org.eclipse.jdt.internal.compiler.problem.ProblemReporter
org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference"
FILE,eclipse-3.1,79309,2004-11-23T12:04:00.000-06:00,not resolve nested interfaces in import,"import test.Testable;
import test.Testable.Types; // F3 leads to java.sql.Types

public class Test { 

	public static void main( String[] args ) {
		System.out.println(Testable.Types.TEST);
	}
}
 
 
package test;

public interface Testable {
	public interface Types {
		String TEST = ""test"";
	}
}",org.eclipse.jdt.internal.codeassist.SelectionEngine
FILE,eclipse-3.1,79544,2004-11-26T05:48:00.000-06:00,itypebind #ce not compare type arguments for itypebinding,"public class A<X> {
    List<Integer> i;
    List<Number> n;
    List<? extends Number> en;
    List<X> x;
}",org.eclipse.jdt.core.dom.BindingComparator
FILE,eclipse-3.1,79690,2004-11-29T13:21:00.000-06:00,declare node not work for type variables,"public class A_test1105 {
	public <E> void foo(E param) {
		/*[*/E local= param;
		foo(local);/*]*/
	}
}","org.eclipse.jdt.core.dom.ASTConverter
org.eclipse.jdt.core.dom.CompilationUnit
org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodAnalyzer"
FILE,eclipse-3.1,79957,2004-12-02T00:47:00.000-06:00,change input usingTableViewer,"Table table=new Table(shell,SWT.VIRTUAL);
TableViewer tv=new TableViewer(table);
tv.setContentProvider(new NetworkContentProvider());
tv.setLabelProvider(new NetworkLabelProvider());
tv.setInput(model);
 
 tv.setInput(model1);",org.eclipse.jface.viewers.TableViewer
FILE,eclipse-3.1,80384,2004-12-07T11:53:00.000-06:00,not decode package signature from CompletionProposal,"getDeclarationSignature() 
 
 class Signature",org.eclipse.jdt.core.CompletionProposal
FILE,eclipse-3.1,80672,2004-12-10T04:44:00.000-06:00,not trigger recompilation,"package p;
@q.Ann
public class Use {
}
  
package q;
public @interface Ann {
}


 
 
package q;
import java.lang.annotation.*;
@Target(ElementType.METHOD)
public @interface Ann {
}
 
 
 @Ann",org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
FILE,eclipse-3.1,80904,2004-12-14T03:26:00.000-06:00,fix assign parameter to new field not appear assign parameter with commented type not appear assign parameter to new field,"import java.util.List;
class A {
	public A (List/*<String>*/ list, Integer integer) {
	}
}",org.eclipse.jdt.internal.compiler.SourceElementParser
FILE,eclipse-3.1,81045,2004-12-14T20:13:00.000-06:00,change value,"public class Test {
	static class Inner {
	}
	public static void main(String[] args) {
		Inner inner= null;
		System.out.println(1);  //  <- breakpoint here
	}
}","org.eclipse.jdt.internal.debug.ui.actions.JavaVariableValueEditor
org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine
org.eclipse.jdt.internal.debug.core.model.JDILocalVariable"
FILE,eclipse-3.1,81428,2004-12-16T12:04:00.000-06:00,require use of optional timeout argument,"defaultArguments()   
 getConnectionArguments(Map)",org.eclipse.jdi.internal.connect.SocketTransportService
FILE,eclipse-3.1,82712,2005-01-12T15:54:00.000-06:00,not show method parameters from static imports,"import static java.lang.Math.*; 
 public class Test {

    void t() {
        abs(<CTRL+SPACE>);
    }
}",org.eclipse.jdt.internal.codeassist.CompletionEngine
FILE,eclipse-3.1,83005,2005-01-17T14:08:00.000-06:00,override methods,"@interface A {
    // Content Assist here
}",org.eclipse.jdt.internal.codeassist.CompletionEngine
FILE,eclipse-3.1,83206,2005-01-19T11:34:00.000-06:00,not return java element,"class User {
    enum Color {RED, GREEN, BLUE}
    void x() {
        Color.valueOf(""RED"");
        Color.values();
    }
}

     valueOf(String)  values()",org.eclipse.jdt.internal.codeassist.SelectionEngine
FILE,eclipse-3.1,83321,2005-01-20T12:13:00.000-06:00,assist ] [ enum override completion proposals in type follow by package visible enum,"package test1;

public class Completion {
	| // does not work here
}

enum Natural {
	ONE;
     // works here
}

class After {
    // works here
}",org.eclipse.jdt.internal.compiler.parser.Parser
FILE,eclipse-3.1,83489,2005-01-22T17:33:00.000-06:00,select ] code select returns itype instead_of ITypeParameter,"class Test<T> {
  void foo(T t) {}
}",org.eclipse.jdt.internal.codeassist.SelectionEngine
FILE,eclipse-3.1,83699,2005-01-26T06:03:00.000-06:00,default after screen saver,"StyledText.setFont(Font)  
   updateFont(Font, Font)  
   updateFont(Font, Font)  
 updateFont(Font, Font)  
 Composite.updateFont(Font, Font)  
 Composite.updateFont(Font, Font)  
 Composite.updateFont(Font, Font)  
 Composite.updateFont(Font, Font)  
 Composite.updateFont(Font, Font)  
 Composite.updateFont(Font, Font)  
 Composite.updateFont(Font, Font)  
 updateFont(Font, Font)  
 Display.updateFont()  
  
  
 Display.readAndDispatch()  
 Workbench.runEventLoop(Window$IExceptionHandler, Display)  
 Workbench.runUI()  
 Workbench.createAndRunWorkbench(Display, WorkbenchAdvisor)  
 PlatformUI.createAndRunWorkbench(Display, WorkbenchAdvisor)  
 IDEApplication.run(Object)  
 EclipseStarter.run(Object)",org.eclipse.swt.widgets.Control
FILE,eclipse-3.1,84194,2005-02-01T18:05:00.000-06:00,assist at end assist in import statements insert,import org.eclipse.core.runtime.*;,"org.eclipse.jdt.internal.ui.text.java.JavaTypeCompletionProposal
org.eclipse.jdt.internal.ui.text.java.ExperimentalResultCollector"
FILE,eclipse-3.1,84724,2005-02-08T13:41:00.000-06:00,find call sites for varargs constructor_s,"public class Test {
    public void foo() {
        Cell c= new Cell("""", """"); // calls Cell.Cell(String...)
    }
}
 class Cell {
    public Cell(String... args) { }
}",org.eclipse.jdt.internal.core.search.matching.ConstructorLocator
FILE,eclipse-3.1,84770,2005-02-09T06:46:00.000-06:00,fail in specific case,"public class FormatterTest {
  void doTest(
      ) {
     System.out.println(""("" + 
         Object.class + "")"");
  }
}
 
 toString()",org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder
FILE,eclipse-3.1,85344,2005-02-15T17:36:00.000-06:00,evaluate logical structure value in Java evaluate logical structure value for map,"public class Test {
  public static void main(String[] args) {
    Map<String, Integer> map= new HashMap<String, Integer>();
    System.out.println();     // <-- breakpoint here
  }
}

  entrySet()",org.eclipse.jdt.internal.debug.eval.ast.engine.BinaryBasedSourceGenerator
FILE,eclipse-3.1,85397,2005-02-16T08:20:00.000-06:00,produce error on constructor _,"strictfp enum Natural {
	ONE, TWO;
}

 
 strictfp enum Natural {
	ONE, TWO;
	
	private Natural() {
	}
}","org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart
org.eclipse.jdt.internal.compiler.lookup.MethodScope"
FILE,eclipse-3.1,85402,2005-02-16T08:50:00.000-06:00,assist ] NPE while trying complete on empty annotation,"import e.Team;
   @Author(name={Team.DAVID, Team.JEROME})
    
  public class Test {
	@Author(name=Team.PHILIPPE) void foo() {}
	@Author int t;
  }
  
  import e.Team;
  public @interface Author {
	Team[] name() default Team.FREDERIC;
  }
  
  package e;
  public enum Team {
	PHILIPPE, DAVID, JEROME, FREDERIC;
  }

 
 ResultCollector.accept(CompletionProposal)","org.eclipse.jdt.internal.codeassist.complete.CompletionOnAnnotationOfType
org.eclipse.jdt.internal.codeassist.CompletionEngine
org.eclipse.jdt.internal.codeassist.complete.CompletionParser"
FILE,eclipse-3.1,85672,2005-02-17T05:53:00.000-06:00,unfold folded region with line delimiter,"package folding;

class Test {
    
}",org.eclipse.jface.text.source.projection.ProjectionViewer
FILE,eclipse-3.1,85734,2005-02-17T12:28:00.000-06:00,debug view excessively for debug,Runtime.exec(...),"org.eclipse.debug.internal.ui.views.RemoteTreeViewer
org.eclipse.debug.internal.ui.views.launch.LaunchViewer
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler
org.eclipse.debug.internal.ui.views.RemoteTreeContentManager"
FILE,eclipse-3.1,86000,2005-02-21T14:47:00.000-06:00,produce invalid JPEG images,"package com.ibm.test.image;

import org.eclipse.swt.*;
import org.eclipse.swt.graphics.*;

public class ImageLoaderTest {
		
	public static void main(String[] args) {
		ImageLoader loader;
		String dir=""c:\\image-problems\\"";
		String files[]={
				""s34i3p04"",
				""s34n3p04"",
				""s35i3p04"",
				""s35n3p04"",
				""s36i3p04"",
				""s36n3p04"",
				""s37i3p04"",
				""s37n3p04"",
				""s38i3p04"",
				""s38n3p04"",
				""s39i3p04"",
				""s39n3p04""
		};
		
		try {
			for (int i=0; i<files.length; i++) {
			String filein  = dir+files[i]+"".png"";
			String fileout = dir+files[i]+"".jpg"";
			
			loader = new ImageLoader();
			loader.load(filein);
			loader.save(fileout,SWT.IMAGE_JPEG);
			}
		} catch (SWTException e) {
		  e.printStackTrace();
		}
	}
}","org.eclipse.ui.internal.WorkbenchIntroManager
org.eclipse.swt.internal.image.JPEGFileFormat"
FILE,eclipse-3.1,86614,2005-02-25T07:10:00.000-06:00,deadlock on startup,"Target Workspace=c 
    
 
 
  
  
 Object.wait()
 
 
  
 
  
  Object.wait()
 
   
   
  Object.wait()
 
   
   
 
   
 
  
 
 Object.wait()  
 
  
   
 
   
   
 
 Object.wait()
 
   
   
  Object.wait()","org.eclipse.ui.internal.AbstractWorkingSetManager
org.eclipse.ui.IWorkingSetUpdater"
FILE,eclipse-3.1,87171,2005-03-04T14:19:00.000-06:00,declare node use type parameters not work for methods/fields,"public class Inline<T> {
	void foo(T t) {
		System.out.println(t);
	}
}

 class Use {
	public static void main(String[] args) {
		Inline<String> i= null;
		i.foo(""Eclipse"");
	}
}

  i.foo(""Eclipse"");
 
 root.findDeclaringNode(methodBinding);","org.eclipse.jdt.core.dom.CompilationUnit
org.eclipse.jdt.core.dom.DefaultBindingResolver"
FILE,eclipse-3.1,87569,2005-03-09T16:41:00.000-06:00,obtain image switch to Debug perspective,class which implements java.io.Serializable,org.eclipse.debug.internal.ui.DefaultLabelProvider
FILE,eclipse-3.1,87665,2005-03-10T11:38:00.000-06:00,open details with errors,testOpenJavaEditor1(),"org.eclipse.swt.printing.PrintDialog
org.eclipse.swt.widgets.MessageBox"
FILE,eclipse-3.1,87692,2005-03-10T14:25:00.000-06:00,cause Invalid thread access,setConsoleWidth(),org.eclipse.ui.console.TextConsoleViewer
FILE,eclipse-3.1,88295,2005-03-17T03:34:00.000-06:00,assist ] many completion on enum case label,"public class Class3 {

	enum Color {
		BLUE, WHITE, RED;
	}
	
	void select(Color c) {
		
		switch(c){
			case BLUE :
			case WHITE:
			case R<|>
		}
	}
}",org.eclipse.jdt.internal.codeassist.CompletionEngine
FILE,eclipse-3.1,89014,2005-03-24T13:10:00.000-06:00,return true for methods,"run()  
 public class Try {
	Runnable one= new Runnable(){
		public void run() {
		}
	};
	Runnable two= new Runnable(){
		public void run() {
		}
	};
}",org.eclipse.jdt.core.dom.BindingComparator
FILE,eclipse-3.1,89632,2005-03-30T13:10:00.000-06:00,evaluate in Snippet editor,"Collection<String> c = new ArrayList<String>();
        c.add(""a"");
        c.add(""b"");
        c.add(""c"");

        for (Iterator<String> i = c.iterator(); i.hasNext(); )
            if (i.next().length() == 4)
            {
                String x = i.next();
                System.out.println(x);
            }
        
        return c;

 
   
  run()",org.eclipse.jdt.internal.eval.CodeSnippetMessageSend
FILE,eclipse-3.1,90289,2005-04-05T09:17:00.000-05:00,call IStackFrame.getVariables(),IStackFrame.getVariables(),"org.eclipse.debug.internal.ui.views.variables.VariablesViewEventHandler
org.eclipse.debug.internal.ui.views.registers.RegistersView
org.eclipse.debug.internal.ui.views.registers.RegistersViewEventHandler
org.eclipse.debug.internal.ui.views.expression.ExpressionViewEventHandler"
FILE,eclipse-3.1,90600,2005-04-07T09:32:00.000-05:00,use project options for rewriter,"rewriter.rewriteAST(document, null)","org.eclipse.jface.text.source.SourceViewer
org.eclipse.jdt.internal.core.CreateElementInCUOperation
org.eclipse.jface.text.source.OverviewRuler"
FILE,eclipse-3.1,91098,2005-04-12T06:07:00.000-05:00,not mark occurrences,"String a;
String[] b;
String[][] c;",org.eclipse.jdt.core.dom.ASTConverter
FILE,eclipse-3.1,91346,2005-04-13T16:43:00.000-05:00,mark occurrences not find for marking,{buildDirectory},org.eclipse.ant.internal.ui.model.AntPropertyNode
FILE,eclipse-3.1,92291,2005-04-21T16:48:00.000-05:00,use toString(),"Util.compare(Object, Object)   toString() 
 org.eclipse.ui.commands.HandlerSubmission.compareTo(Object)  
 org.eclipse.ui.contexts.EnabledSubmission.compareTo(Object)",org.eclipse.ui.internal.util.Util
FILE,eclipse-3.1,92451,2005-04-22T16:36:00.000-05:00,assist failure cast + arrays,"public class Test {
	public static void main(String[] args) {
		java.util.List elements = null;
		// code assist works on this line
		new Test(Test.toStrings((Test[])elements.toArray(new Test
[0])));
		//code assist fails on this line
	}
	public Test(Object object) {
	}
	public static Object toStrings(Test[] objects) {
		return null;
	}
}",org.eclipse.jdt.internal.codeassist.complete.CompletionParser
FILE,eclipse-3.1,92602,2005-04-25T12:07:00.000-05:00,acquire during waitEnd,"ThreadJob.joinRun(IProgressMonitor)  
      
 JobManager.beginRule(ISchedulingRule, IProgressMonitor)  
 WorkManager.checkIn(ISchedulingRule, IProgressMonitor)  
 Workspace.prepareOperation(ISchedulingRule, IProgressMonitor)  
    
    
 SynchronizationManager$ActivationListener.handleActivated(ResourceInfo)  
 SynchronizationManager$ActivationListener.handleActivated()  
 SynchronizationManager$ActivationListener.windowActivated(IWorkbenchWindow)
 
 Workbench$6.run()  
 InternalPlatform.run(ISafeRunnable)  
 Platform.run(ISafeRunnable)  
 Workbench.fireWindowActivated(IWorkbenchWindow)  
 WorkbenchWindow$5.shellActivated(ShellEvent)  
 TypedListener.handleEvent(Event)  
 EventTable.sendEvent(Event)  
 sendEvent(Event)  
  
  
  
  
  
  
 destroyWidget()  
 dispose()  
 dispose()  
 Shell.dispose()  
   close()  
   close()  
 BlockedJobsDialog.close()  
 BlockedJobsDialog.close(IProgressMonitor)  
 BlockedJobsDialog.clear(IProgressMonitor)  
 WorkbenchDialogBlockedHandler.clearBlocked()  
 EventLoopProgressMonitor.clearBlocked()  
 JobManager.reportUnblocked(IProgressMonitor)  
 ThreadJob.waitEnd(IProgressMonitor)  
 ThreadJob.joinRun(IProgressMonitor)  
      
 JobManager.beginRule(ISchedulingRule, IProgressMonitor)  
 WorkManager.checkIn(ISchedulingRule, IProgressMonitor)  
 Workspace.prepareOperation(ISchedulingRule, IProgressMonitor)  
    
    
 URIConverterImpl$WorkbenchHelper.createPlatformResourceInputStream(String)
 
 URIConverterImpl.createPlatformResourceInputStream(String)  
 URIConverterImpl.createInputStream(URI)  
    
 MonUtils.loadResource(ResourceSet, String)  
 MonUtils.getMonitorResource(ResourceSet, String)  
 MonUtils.getMonitorResource(Resource)  
     initializeMonAdapters()  
     
   
 Class.newInstanceImpl()  
 Class.newInstance()  
 ConfigurationElement.createExecutableExtension(Bundle, String, Object,
IConfigurationElement, String)  
 ConfigurationElement.createExecutableExtension(Bundle, String, String, Object,
IConfigurationElement, String)  
 ConfigurationElement.createExecutableExtension(String)  
 SectionDescriptor.getSectionClass()  
 TabDescriptor.createTab()  
        
     setInput(IWorkbenchPart,
ISelection)  
     selectionChanged(IWorkbenchPart,
ISelection)  
 BPELTabbedPropertySheetPage.selectionChanged(IWorkbenchPart, ISelection)  
 PropertySheet.selectionChanged(IWorkbenchPart, ISelection)  
 AbstractSelectionService$3.run()  
 InternalPlatform.run(ISafeRunnable)  
 Platform.run(ISafeRunnable)  
     fireSelection(IWorkbenchPart,
ISelection)  
     partActivated(IWorkbenchPart)
 
 WorkbenchPage.firePartActivated(IWorkbenchPart)  
 WorkbenchPage.setActivePart(IWorkbenchPart)  
 WorkbenchPage.activate(IWorkbenchPart)  
    
    
      
 WorkbenchPage$9.run()  
 BusyIndicator.showWhile(Display, Runnable)  
    
      
 SCDLUIUtils.openEditor(IWorkbenchPart, IFileEditorInput)  
 SCDLUIUtils.openEditor(IWorkbenchPart, IFile)  
 ComponentEditPart.performOpen()  
     performRequest(Request)  
 CreateImplementationAction.run()  
   runWithEvent(Event)  
  
    
 ActionContributionItem$7.handleEvent(Event)  
 EventTable.sendEvent(Event)  
   sendEvent(Event)  
 Display.runDeferredEvents()  
 Display.readAndDispatch()  
 Workbench.runEventLoop(Window$IExceptionHandler, Display)  
 Workbench.runUI()  
 Workbench.createAndRunWorkbench(Display, WorkbenchAdvisor)  
 PlatformUI.createAndRunWorkbench(Display, WorkbenchAdvisor)  
 IDEApplication.run(Object)  
 PlatformActivator$1.run(Object)  
 EclipseStarter.run(Object)","org.eclipse.core.internal.jobs.ImplicitJobs
org.eclipse.core.internal.jobs.ThreadJob
org.eclipse.core.internal.jobs.JobManager"
FILE,eclipse-3.1,93249,2005-04-29T05:49:00.000-05:00,not propose full method stub,"IRunnableWithProgress runnable= new IRunnableWithProgress() {
};

  
  
 public void run(org.eclipse.core.runtime.IProgressMonitor monitor) throws
InvocationTargetException, InterruptedException","org.eclipse.jdt.internal.codeassist.CompletionEngine
org.eclipse.jdt.internal.ui.text.java.OverrideCompletionProposal"
FILE,eclipse-3.1,93727,2005-05-04T17:43:00.000-05:00,fail with Method Parameter annotations,"import org.drools.semantics.annotation.DroolsParameter;

public class Test
{
  public Object passthrough( @DroolsParameter(""parameter"") Object parameter ) {
    return parameter;
  }
}",org.eclipse.jdt.internal.formatter.CodeFormatterVisitor
FILE,eclipse-3.1,93854,2005-05-05T17:23:00.000-05:00,scan signature retrieve from binding key,"Signature.getTypeParameters(String)  
    
      
    
  
     getText(Object)  
 HierarchyLabelProvider.getText(Object)  
     getText(Object)  
     updateLabel(ViewerLabel,
Object)  
     buildLabel(ViewerLabel, Object,
IViewerLabelProvider)  
     doUpdateItem(Item, Object)  
 AbstractTreeViewer$UpdateItemSafeRunnable.run()  
 InternalPlatform.run(ISafeRunnable)  
 Platform.run(ISafeRunnable)  
 JFaceUtil$1.run(ISafeRunnable)  
 SafeRunnable.run(ISafeRunnable)  
      
 StructuredViewer$UpdateItemSafeRunnable.run()  
 InternalPlatform.run(ISafeRunnable)  
 Platform.run(ISafeRunnable)  
 JFaceUtil$1.run(ISafeRunnable)  
 SafeRunnable.run(ISafeRunnable)  
     updateItem(Widget, Object)  
      
 AbstractTreeViewer$1.run()  
 BusyIndicator.showWhile(Display, Runnable)  
     createChildren(Widget)  
      
      
      
      
  
 TypeHierarchyViewPart$11.run()  
 BusyIndicator.showWhile(Display, Runnable)  
  
 TypeHierarchyViewPart.updateInput(IJavaElement)  
 TypeHierarchyViewPart.setInputElement(IJavaElement)  
 OpenTypeHierarchyUtil.openInViewPart(IWorkbenchWindow, IJavaElement)  
      
    
 OpenTypeHierarchyAction.run(ITextSelection)  
     dispatchRun(ISelection)  
     run()  
   runWithEvent(Event)  
 ActionHandler.execute(Map)  
 LegacyHandlerWrapper.execute(ExecutionEvent)  
 Command.execute(ExecutionEvent)  
 ParameterizedCommand.execute(Object, Object)  
 WorkbenchKeyboard.executeCommand(Binding, Object)  
 WorkbenchKeyboard.press(List, Event)  
 WorkbenchKeyboard.processKeyEvent(List, Event)  
 WorkbenchKeyboard.filterKeySequenceBindings(Event)  
 WorkbenchKeyboard.access$3(WorkbenchKeyboard, Event)  
 WorkbenchKeyboard$KeyDownFilter.handleEvent(Event)  
 EventTable.sendEvent(Event)  
 Display.filterEvent(Event)  
   sendEvent(Event)  
    
    
    
    
    
  
    
  
  
 Display.readAndDispatch()  
 Workbench.runEventLoop(Window$IExceptionHandler, Display)  
 Workbench.runUI()  
 Workbench.createAndRunWorkbench(Display, WorkbenchAdvisor)  
 PlatformUI.createAndRunWorkbench(Display, WorkbenchAdvisor)  
 IDEApplication.run(Object)  
 PlatformActivator$1.run(Object)  
 EclipseStarter.run(Object)","org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType
org.eclipse.jdt.internal.ui.typehierarchy.HierarchyLabelProvider"
FILE,eclipse-3.1,94216,2005-05-09T20:04:00.000-05:00,not work for generic types,"interface IGeneric<T> {
}
 public class Generic<T> implements IGeneric<T> {
    public static void main(String[] args) {
        IGeneric<String> gen= new Generic<String>();
        System.out.println();  // <-- breakpoint here
    }
}","org.eclipse.jdt.internal.debug.ui.actions.OpenVariableDeclaredTypeAction
org.eclipse.jdt.internal.debug.ui.actions.OpenVariableConcreteTypeAction"
FILE,eclipse-3.1,94465,2005-05-10T14:33:00.000-05:00,modify value in Variables view,"String [] elms= { ""abc"", ""cde"", ""xyz"" };","org.eclipse.jdt.internal.debug.ui.JDIModelPresentation
org.eclipse.jdt.internal.debug.ui.actions.JavaObjectValueEditor
org.eclipse.jdt.internal.debug.ui.actions.ActionMessages"
FILE,eclipse-3.1,94540,2005-05-10T17:28:00.000-05:00,dispose undoable operations on shutdown,"Workbench.shutdown()  
  
  
  
  
                           
  
  
 org.eclipse.ui.internal.WorkbenchPlugin.stop()",org.eclipse.ui.internal.WorkbenchPlugin
FILE,eclipse-3.1,95096,2005-05-13T06:16:00.000-05:00,assist popup complete imported method name,import static java.lang.Math,"org.eclipse.jdt.internal.ui.text.java.JavaMethodCompletionProposal
org.eclipse.jdt.internal.ui.text.java.LazyJavaCompletionProposal"
FILE,eclipse-3.1,95152,2005-05-13T12:14:00.000-05:00,not find synthetic constructor _,InputReadJob readJob = new InputReadJob(streamsProxy);,"org.eclipse.ant.internal.ui.views.AntViewDropAdapter
org.eclipse.ant.internal.ui.launchConfigurations.AntLaunchShortcut
org.eclipse.ant.internal.ui.AntUtil
org.eclipse.jdt.internal.core.search.matching.ConstructorLocator
org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer
org.eclipse.jdt.internal.core.index.DiskIndex
org.eclipse.jdt.internal.core.search.matching.ConstructorPattern"
FILE,eclipse-3.1,95352,2005-05-16T09:35:00.000-05:00,reduce JDWP communications,"ObjectReferenceImpl.uniqueID()  
  
 isCollected()",org.eclipse.jdt.internal.debug.core.model.JDIValue
FILE,eclipse-3.1,95505,2005-05-17T02:56:00.000-05:00,not use code completion,{cursor},org.eclipse.jdt.internal.codeassist.CompletionEngine
FILE,eclipse-3.1,96440,2005-05-24T11:11:00.000-05:00,determine sizes lay out times,table.getClientArea(),org.eclipse.jface.preference.PreferencePage
FILE,eclipse-3.1,96489,2005-05-24T14:40:00.000-05:00,have border,"layout.addStandaloneView(BrowserApp.BROWSER_VIEW_ID, false,
IPageLayout.RIGHT, .25f, IPageLayout.ID_EDITOR_AREA);","org.eclipse.ui.presentations.WorkbenchPresentationFactory
org.eclipse.ui.internal.presentations.defaultpresentation.EmptyTabFolder"
FILE,eclipse-3.1,96604,2005-05-25T09:31:00.000-05:00,codeassist ] missing proposals for wildcard capture,"import java.util.List;
 public class X<U, V extends List<U>>  
 void foo(X<String, ?> x1, X<Object, ?> x2)  
 get(...)",org.eclipse.jdt.internal.compiler.lookup.BlockScope
FILE,eclipse-3.1,96765,2005-05-26T07:21:00.000-05:00,not work in enum constants,"public enum MyEnum {

  A(){
    public String toString() {
      // no code completion here!
      return null;
    }
  };

}",org.eclipse.jdt.internal.codeassist.impl.AssistParser
FILE,eclipse-3.1,97674,2005-05-31T15:16:00.000-05:00,not report error for changing,"VectorTest.testCapacity()
 
 fEmpty.toString()  charAt(100000)","org.eclipse.jdt.internal.debug.ui.actions.JavaObjectValueEditor
org.eclipse.jdt.internal.debug.ui.actions.EvaluateAction"
FILE,eclipse-3.1,97722,2005-05-31T16:41:00.000-05:00,dialog problems,"@

Dialog",org.eclipse.ant.internal.ui.preferences.AddCustomDialog
FILE,eclipse-3.1,98147,2005-06-02T13:09:00.000-05:00,not show children,"package xy;
public class Try {
	String fName;
	int fID;
	
	public Try(String name, int id) {
		fName= name;
		fID= id;
	}
	
	public static void main(String[] args) {
		Try t= new Try(""Hello"", 5);
		callee(t, t);
	}
	
	static void callee(Try t1, Try t2) {
		boolean same= t1.equals(t2); //breakpoint here
	}
	
}",org.eclipse.debug.internal.ui.views.RemoteTreeViewer
FILE,eclipse-3.1,98202,2005-06-02T18:28:00.000-05:00,breakpoint on task outside,"lStack(java.lang.StringBuffer)  
 
 r.getStackFrames()  
  
 org.eclipse.ant.internal.ui.debug.model.AntThread.getStackFrames0() 
 
 org.eclipse.ant.internal.ui.debug.model.AntThread.getTopStackFrame() 
 
  
    
 
     
  
 org.eclipse.debug.core.DebugPlugin$EventNotifier.run()  
  
  
  
  
  
  
  
 org.eclipse.core.internal.jobs.Worker.run()",org.eclipse.ant.internal.ui.antsupport.logger.util.AntDebugState
FILE,eclipse-3.1,98686,2005-06-07T10:39:00.000-05:00,pref page mnemonics,"@

Click","org.eclipse.pde.internal.ui.IHelpContextIds
org.eclipse.team.internal.ccvs.ui.CVSProjectPropertiesPage"
FILE,eclipse-3.1,98740,2005-06-07T13:25:00.000-05:00,refresh children on project,"String folder = ""/temp"";//$NON-NLS-1$
String projName = ""project"";//$NON-NLS-1$ 
IProjectDescription description = ResourcesPlugin.getWorkspace
().loadProjectDescription(projPath);
IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject
(description.getName());
project.create(description, new NullProgressMonitor());

  project.open()  
 The members()  
 if (info.isSet(ICoreConstants.M_CHILDREN_UNKNOWN))
			workspace.refreshManager.refresh(this);","org.eclipse.core.internal.resources.Container
org.eclipse.core.internal.resources.Resource"
FILE,eclipse-3.1,99282,2005-06-09T19:46:00.000-05:00,not initialize switch method in thread safe way,"package com.bea;

public class TestEnumSwitch {
	
	public static synchronized void foo() {} 

	public static final void main(String args[]) {
		
		final TestEnum e = TestEnum.A1999;
		
		Thread[] runners = new Thread[40];
		for (int i = 0; i < runners.length; i++) {
			runners[i] = new Thread(new Runnable() {
				public void run() {
					switch (e) {
					case A1:
						System.err.println(""1"");
						break;
					case A2:
						System.err.println(""2"");
						break;
					case A8:
						System.err.println(""8"");
						break;
					case A13:
						System.err.println(""13"");
						break;
					case A1999:
						System.err.println(""1999"");
						break;
					default:
						System.err.println(""default"");
						break;
					}
					
				}
			});
		}
		
		for (int i = 0; i < runners.length; i++) {
			runners[i].start();
		}
		
	}
	
	public enum TestEnum {
		A0, A1, A2, A3, A4, A5, A6, A7, A8, A9,
		A10, A11, A12, A13, A14, A15, A16, A17, A18, A19,
		A20, A21, A22, A23, A24, A25, A26, A27, A28, A29,
		A30, A31, A32, A33, A34, A35, A36, A37, A38, A39,
		A40, A41, A42, A43, A44, A45, A46, A47, A48, A49,
		A50, A51, A52, A53, A54, A55, A56, A57, A58, A59,
		A60, A61, A62, A63, A64, A65, A66, A67, A68, A69,
		A70, A71, A72, A73, A74, A75, A76, A77, A78, A79,
		A80, A81, A82, A83, A84, A85, A86, A87, A88, A89,
		A90, A91, A92, A93, A94, A95, A96, A97, A98, A99,
		A100, A101, A102, A103, A104, A105, A106, A107, A108, A109,
		A110, A111, A112, A113, A114, A115, A116, A117, A118, A119,
		A120, A121, A122, A123, A124, A125, A126, A127, A128, A129,
		A130, A131, A132, A133, A134, A135, A136, A137, A138, A139,
		A140, A141, A142, A143, A144, A145, A146, A147, A148, A149,
		A150, A151, A152, A153, A154, A155, A156, A157, A158, A159,
		A160, A161, A162, A163, A164, A165, A166, A167, A168, A169,
		A170, A171, A172, A173, A174, A175, A176, A177, A178, A179,
		A180, A181, A182, A183, A184, A185, A186, A187, A188, A189,
		A190, A191, A192, A193, A194, A195, A196, A197, A198, A199,
		A200, A201, A202, A203, A204, A205, A206, A207, A208, A209,
		A210, A211, A212, A213, A214, A215, A216, A217, A218, A219,
		A220, A221, A222, A223, A224, A225, A226, A227, A228, A229,
		A230, A231, A232, A233, A234, A235, A236, A237, A238, A239,
		A240, A241, A242, A243, A244, A245, A246, A247, A248, A249,
		A250, A251, A252, A253, A254, A255, A256, A257, A258, A259,
		A260, A261, A262, A263, A264, A265, A266, A267, A268, A269,
		A270, A271, A272, A273, A274, A275, A276, A277, A278, A279,
		A280, A281, A282, A283, A284, A285, A286, A287, A288, A289,
		A290, A291, A292, A293, A294, A295, A296, A297, A298, A299,
		A300, A301, A302, A303, A304, A305, A306, A307, A308, A309,
		A310, A311, A312, A313, A314, A315, A316, A317, A318, A319,
		A320, A321, A322, A323, A324, A325, A326, A327, A328, A329,
		A330, A331, A332, A333, A334, A335, A336, A337, A338, A339,
		A340, A341, A342, A343, A344, A345, A346, A347, A348, A349,
		A350, A351, A352, A353, A354, A355, A356, A357, A358, A359,
		A360, A361, A362, A363, A364, A365, A366, A367, A368, A369,
		A370, A371, A372, A373, A374, A375, A376, A377, A378, A379,
		A380, A381, A382, A383, A384, A385, A386, A387, A388, A389,
		A390, A391, A392, A393, A394, A395, A396, A397, A398, A399,
		A400, A401, A402, A403, A404, A405, A406, A407, A408, A409,
		A410, A411, A412, A413, A414, A415, A416, A417, A418, A419,
		A420, A421, A422, A423, A424, A425, A426, A427, A428, A429,
		A430, A431, A432, A433, A434, A435, A436, A437, A438, A439,
		A440, A441, A442, A443, A444, A445, A446, A447, A448, A449,
		A450, A451, A452, A453, A454, A455, A456, A457, A458, A459,
		A460, A461, A462, A463, A464, A465, A466, A467, A468, A469,
		A470, A471, A472, A473, A474, A475, A476, A477, A478, A479,
		A480, A481, A482, A483, A484, A485, A486, A487, A488, A489,
		A490, A491, A492, A493, A494, A495, A496, A497, A498, A499,
		A500, A501, A502, A503, A504, A505, A506, A507, A508, A509,
		A510, A511, A512, A513, A514, A515, A516, A517, A518, A519,
		A520, A521, A522, A523, A524, A525, A526, A527, A528, A529,
		A530, A531, A532, A533, A534, A535, A536, A537, A538, A539,
		A540, A541, A542, A543, A544, A545, A546, A547, A548, A549,
		A550, A551, A552, A553, A554, A555, A556, A557, A558, A559,
		A560, A561, A562, A563, A564, A565, A566, A567, A568, A569,
		A570, A571, A572, A573, A574, A575, A576, A577, A578, A579,
		A580, A581, A582, A583, A584, A585, A586, A587, A588, A589,
		A590, A591, A592, A593, A594, A595, A596, A597, A598, A599,
		A600, A601, A602, A603, A604, A605, A606, A607, A608, A609,
		A610, A611, A612, A613, A614, A615, A616, A617, A618, A619,
		A620, A621, A622, A623, A624, A625, A626, A627, A628, A629,
		A630, A631, A632, A633, A634, A635, A636, A637, A638, A639,
		A640, A641, A642, A643, A644, A645, A646, A647, A648, A649,
		A650, A651, A652, A653, A654, A655, A656, A657, A658, A659,
		A660, A661, A662, A663, A664, A665, A666, A667, A668, A669,
		A670, A671, A672, A673, A674, A675, A676, A677, A678, A679,
		A680, A681, A682, A683, A684, A685, A686, A687, A688, A689,
		A690, A691, A692, A693, A694, A695, A696, A697, A698, A699,
		A700, A701, A702, A703, A704, A705, A706, A707, A708, A709,
		A710, A711, A712, A713, A714, A715, A716, A717, A718, A719,
		A720, A721, A722, A723, A724, A725, A726, A727, A728, A729,
		A730, A731, A732, A733, A734, A735, A736, A737, A738, A739,
		A740, A741, A742, A743, A744, A745, A746, A747, A748, A749,
		A750, A751, A752, A753, A754, A755, A756, A757, A758, A759,
		A760, A761, A762, A763, A764, A765, A766, A767, A768, A769,
		A770, A771, A772, A773, A774, A775, A776, A777, A778, A779,
		A780, A781, A782, A783, A784, A785, A786, A787, A788, A789,
		A790, A791, A792, A793, A794, A795, A796, A797, A798, A799,
		A800, A801, A802, A803, A804, A805, A806, A807, A808, A809,
		A810, A811, A812, A813, A814, A815, A816, A817, A818, A819,
		A820, A821, A822, A823, A824, A825, A826, A827, A828, A829,
		A830, A831, A832, A833, A834, A835, A836, A837, A838, A839,
		A840, A841, A842, A843, A844, A845, A846, A847, A848, A849,
		A850, A851, A852, A853, A854, A855, A856, A857, A858, A859,
		A860, A861, A862, A863, A864, A865, A866, A867, A868, A869,
		A870, A871, A872, A873, A874, A875, A876, A877, A878, A879,
		A880, A881, A882, A883, A884, A885, A886, A887, A888, A889,
		A890, A891, A892, A893, A894, A895, A896, A897, A898, A899,
		A900, A901, A902, A903, A904, A905, A906, A907, A908, A909,
		A910, A911, A912, A913, A914, A915, A916, A917, A918, A919,
		A920, A921, A922, A923, A924, A925, A926, A927, A928, A929,
		A930, A931, A932, A933, A934, A935, A936, A937, A938, A939,
		A940, A941, A942, A943, A944, A945, A946, A947, A948, A949,
		A950, A951, A952, A953, A954, A955, A956, A957, A958, A959,
		A960, A961, A962, A963, A964, A965, A966, A967, A968, A969,
		A970, A971, A972, A973, A974, A975, A976, A977, A978, A979,
		A980, A981, A982, A983, A984, A985, A986, A987, A988, A989,
		A990, A991, A992, A993, A994, A995, A996, A997, A998, A999,
		A1000, A1001, A1002, A1003, A1004, A1005, A1006, A1007, A1008, A1009,
		A1010, A1011, A1012, A1013, A1014, A1015, A1016, A1017, A1018, A1019,
		A1020, A1021, A1022, A1023, A1024, A1025, A1026, A1027, A1028, A1029,
		A1030, A1031, A1032, A1033, A1034, A1035, A1036, A1037, A1038, A1039,
		A1040, A1041, A1042, A1043, A1044, A1045, A1046, A1047, A1048, A1049,
		A1050, A1051, A1052, A1053, A1054, A1055, A1056, A1057, A1058, A1059,
		A1060, A1061, A1062, A1063, A1064, A1065, A1066, A1067, A1068, A1069,
		A1070, A1071, A1072, A1073, A1074, A1075, A1076, A1077, A1078, A1079,
		A1080, A1081, A1082, A1083, A1084, A1085, A1086, A1087, A1088, A1089,
		A1090, A1091, A1092, A1093, A1094, A1095, A1096, A1097, A1098, A1099,
		A1100, A1101, A1102, A1103, A1104, A1105, A1106, A1107, A1108, A1109,
		A1110, A1111, A1112, A1113, A1114, A1115, A1116, A1117, A1118, A1119,
		A1120, A1121, A1122, A1123, A1124, A1125, A1126, A1127, A1128, A1129,
	    A1999,
		}
}","org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
org.eclipse.jdt.internal.compiler.codegen.CodeStream"
FILE,eclipse-3.1,99355,2005-06-10T09:48:00.000-05:00,extract method trips,"package p;

class Container<T>
{
   private final T m_t;

   public Container(T t)
   {
      m_t = t;
   }

   T get()
   {
      return m_t;
   }
}

class GenericContainer
{
   private final Container<?> m_c;

   public GenericContainer(Container<?> c) 
   {
      m_c = c;
   }

   public Container<?> getC()
   {
      return m_c;
   }
}

public class A
{
   GenericContainer createContainer()
   {
      final Container<String> innerContainer = new Container<String>(""hello"");
      final Container<Container<String>> outerContainer = new
Container<Container<String>>(innerContainer);
      return new GenericContainer(outerContainer);
   }
   
   void method()
   {
      final GenericContainer createContainer = createContainer();
      @SuppressWarnings(""unchecked"")
      final Container<Container<String>> c = (Container<Container<String>>)
createContainer.getC();
      //extract method from here
      final Container<String> container = c.get();
      final String string = container.get();
      //to here
   }
}
 
 

package p;

class Container<T>
{
   private final T m_t;

   public Container(T t)
   {
      m_t = t;
   }

   T get()
   {
      return m_t;
   }
}

class GenericContainer
{
   private final Container<?> m_c;

   public GenericContainer(Container<?> c) 
   {
      m_c = c;
   }

   public Container<?> getC()
   {
      return m_c;
   }
}

public class A
{
   GenericContainer createContainer()
   {
      final Container<String> innerContainer = new Container<String>(""hello"");
      final Container<Container<String>> outerContainer = new
Container<Container<String>>(innerContainer);
      return new GenericContainer(outerContainer);
   }
   
   void method()
   {
      final GenericContainer createContainer = createContainer();
      @SuppressWarnings(""unchecked"")
      final Container<Container<String>> c = (Container<Container<String>>)
createContainer.getC();
      //extract method from here
      extractedMethod(c);
      //to here
   }

   private void extractedMethod(final final final Container<Container<String>> c)
   {
      final Container<String> container = c.get();
      final String string = container.get();
   }
}",org.eclipse.jdt.core.dom.ASTConverter
FILE,eclipse-3.1,99631,2005-06-13T09:21:00.000-05:00,assist [ ] unnecessary proposals on annotation completion,"@B 
 public class Test {}","org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor
org.eclipse.jdt.internal.codeassist.CompletionEngine"
FILE,eclipse-3.1,99693,2005-06-13T11:29:00.000-05:00,invalid during display,"private static void doGenerics() {
		List<Integer> list = new ArrayList<Integer>();
		for (int i = 0; i < 1000; i++) {
			int num = rand.nextInt(10000) + 1;
			list.add(num);
		}
		
		int max = 0;
//start eval
		for (Integer integer : list) { // BREAKPOINT HERE
			max = Math.max(max, integer);
		}
		System.out.println(max);
//end eval
	}","org.eclipse.debug.internal.ui.views.variables.VariablesViewEventHandler
org.eclipse.debug.internal.ui.views.expression.ExpressionViewEventHandler"
CLASS,openjpa-2.2.0,OPENJPA-2149,2012-03-05T01:50:18.000-06:00,cast to parameters,"Expression<String> stPointFunc = cb.function(
				""db2gse.st_point"", 
				String.class,
				cb.literal(0.0),
				cb.literal(0.0),
				cb.literal(1003));
		
		Expression<Double> distanceFunc = cb.function(
				""db2gse.st_distance"", 
				Double.class, 
				stPointFunc, 
				usersLocations.get(""location""));
		
		criteriaQuery.select(usersLocations).where(cb.lessThan(distanceFunc, cb.literal(50.0)));

 
    
    
 args.appendTo(sel, ctx, state, sql, 0);
     
 for (int i = 1; i < vals.length; i++) {
                sql.addCastForParam(getOperator(), vals[i]);
            }
     
  
  
 Expression<String> stPointFunc = cb.function(
				""db2gse.st_point"", 
				String.class,
				cb.coalesce(cb.literal(0.0), cb.literal(0.0)),
				cb.coalesce(cb.literal(1.0), cb.literal(1.0)),
				cb.coalesce(cb.literal(1003), cb.literal(1003)));","openjpa-jdbc.src.main.java.org.apache.openjpa.jdbc.kernel.exps.DatastoreFunction
openjpa-jdbc.src.main.java.org.apache.openjpa.jdbc.kernel.exps.Args
openjpa-jdbc.src.main.java.org.apache.openjpa.jdbc.kernel.exps.UnaryOp"
CLASS,openjpa-2.2.0,OPENJPA-2197,2012-05-16T17:10:22.000-05:00,compare parameters,"@PreUpdate
    public void updateChangeLog(Object entity)  
 private void updateChangeLog(BaseEntity he, ChangeLogEntry cle)

 
   @PreUpdate",openjpa-persistence-jdbc.src.test.java.org.apache.openjpa.persistence.callbacks.ListenerImpl
CLASS,openjpa-2.2.0,OPENJPA-2227,2012-07-09T14:24:05.000-05:00,not find custom SequenceGenerators,"{code}
 @Entity
@SequenceGenerator(name=""MySequence"", sequenceName=""org.apache.openjpa.generator.UIDGenerator()"")
public class Customer implements Serializable  
 @Id
    @GeneratedValue(strategy=GenerationType.SEQUENCE, generator=""MySequence"")
    private long id;
 {code}

 
     JavaTypes.classForName()     Class.forName()",openjpa-kernel.src.main.java.org.apache.openjpa.meta.SequenceMetaData
CLASS,openjpa-2.2.0,OPENJPA-2247,2012-08-03T10:29:58.000-05:00,map unidirectional own OneToOne be OneToOne in SecondaryTable,"@Entity
@SecondaryTable(name = ""ParentSecondaryTable"", pkJoinColumns = 
    { @PrimaryKeyJoinColumn(name = ""idParent"", referencedColumnName = ""idParent"") })
public class Parent {

    @Id
    @GeneratedValue
    int idParent;

    String child_ref;

    @OneToOne
    @JoinColumn(name = ""CHILD_REF"", table = ""ParentSecondaryTable"", referencedColumnName = ""idChild"")
    PChild child;

}",openjpa-jdbc.src.main.java.org.apache.openjpa.jdbc.meta.MappingRepository
CLASS,openjpa-2.2.0,OPENJPA-2255,2012-08-30T20:15:52.000-05:00,not load referencedColumn definition create JoinTable,"@Entity 
public class Student  
 @Id @Column(name=""id"", length=128, nullable=false) private String id; 
   @Column(name=""sName"", length=255) private String sName; 
   @ManyToMany 
  @JoinTable( 
    name=""student_course_map"", 
    joinColumns={@JoinColumn(name=""student_id"", referencedColumnName=""id"", nullable=false)}, 
    inverseJoinColumns={@JoinColumn(name=""course_id"", referencedColumnName=""id"", nullable=false)} 
  ) 
  public Collection getCourses() 

   
 @Entity 
public class Courses{ 
  @Id @Column(name=""id"", length=128, nullable=false) private String id; 
  @Column(name=""cName"", length=255) private String cName; 

  ... 
}",openjpa-jdbc.src.main.java.org.apache.openjpa.jdbc.meta.MappingInfo
METHOD,atunes-1.10.0,231,2008-10-04T18:31:26.000-05:00,not add image read repository,public boolean isSupportsInternalImage(),net.sourceforge.atunes.kernel.modules.repository.audio.AudioFile:supportsInternalPicture()
METHOD,atunes-1.10.0,281,2008-12-25T02:58:34.000-06:00,mute button in 1.11.1,"Debug mode = false
  Execution path = C   
  
  
 {MPlayer}",net.sourceforge.atunes.kernel.handlers.SystemTrayHandler:fillMenu(JTrayIconPopupMenu)
CLASS,solr-4.4.0,SOLR-5107,2013-08-01T09:48:12.000-05:00,throw NullPointerException,"{code}
    {code}","solr.core.src.java.org.apache.solr.handler.admin.LukeRequestHandler
solr.core.src.test.org.apache.solr.handler.admin.LukeRequestHandlerTest"
CLASS,solr-4.4.0,SOLR-5295,2013-10-02T00:09:02.000-05:00,create maxShardsPerNode number of replicas,"{quote}
 
  
  
  
 {quote}",solr.core.src.java.org.apache.solr.cloud.OverseerCollectionProcessor
CLASS,solr-4.4.0,SOLR-5296,2013-10-02T00:20:01.000-05:00,create collection with implicit router add shard ranges to shard,"{quote}
 {quote}",solr.core.src.java.org.apache.solr.cloud.Overseer
METHOD,mahout-0.4,MAHOUT-641,2011-03-29T13:36:33.000-05:00,ignore configuration set via setConf(),setConf()       setConf(),"org.apache.mahout.math.hadoop.TimesSquaredJob:createTimesSquaredJobConf(Vector, Path, Path, Class<? extends TimesSquaredMapper>, Class<? extends VectorSummingReducer>)
org.apache.mahout.math.hadoop.MatrixMultiplicationJob:createMatrixMultiplyJobConf(Path, Path, Path, int)
org.apache.mahout.math.hadoop.TimesSquaredJob:createTimesSquaredJobConf(Vector, int, Path, Path, Class<? extends TimesSquaredMapper>, Class<? extends VectorSummingReducer>)
org.apache.mahout.math.hadoop.DistributedRowMatrix:times(DistributedRowMatrix)
org.apache.mahout.math.hadoop.TimesSquaredJob:createTimesSquaredJobConf(Vector, Path, Path)
org.apache.mahout.math.hadoop.DistributedRowMatrix:timesSquared(Vector)
org.apache.mahout.math.hadoop.TransposeJob:buildTransposeJobConf(Path, Path, int)
org.apache.mahout.math.hadoop.DistributedRowMatrix:transpose()"
FILE,AMQP,AMQP-164,2011-04-27T02:00:51.000-05:00,not handle anonymous queues,testContext(org.springframework.amqp.rabbit.stocks.web.ServletConfigurationTests),"org.springframework.amqp.rabbit.config.HeadersExchangeParser
org.springframework.amqp.rabbit.config.TopicExchangeParser
org.springframework.amqp.core.Binding
org.springframework.amqp.rabbit.config.FanoutExchangeParser
org.springframework.amqp.rabbit.config.DirectExchangeParser"
FILE,AMQP,AMQP-190,2011-09-10T20:24:17.000-05:00,synchronize with TransactionManager,convertAndSend(),"org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer
org.springframework.amqp.rabbit.core.RabbitTemplatePerformanceIntegrationTests
org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils
org.springframework.amqp.rabbit.connection.RabbitResourceHolder"
FILE,AMQP,AMQP-280,2012-11-06T12:58:17.000-06:00,fix Race condition in test,close(),org.springframework.amqp.rabbit.listener.LocallyTransactedTests
FILE,AMQP,AMQP-340,2013-11-18T09:41:01.000-06:00,not consider wrong RabbitMQ credentials as fatal error,"start()  
 SimpleMessageListenerContainer.run()","org.springframework.amqp.rabbit.listener.BlockingQueueConsumer
org.springframework.amqp.rabbit.listener.MessageListenerContainerLifecycleIntegrationTests
org.springframework.amqp.rabbit.support.RabbitExceptionTranslator"
FILE,AMQP,AMQP-434,2014-10-21T05:21:17.000-05:00,throw MessageConversionException,convertMessageIfNecessary(),org.springframework.amqp.support.converter.MessageConversionException
FILE,AMQP,AMQP-502,2015-06-19T03:02:33.000-05:00,route key not create fanout binding due_to missing,"@RabbitListener(




      bindings = @QueueBinding(




          value = @Queue(




              autoDelete = ""true""




          ),




          exchange = @Exchange(




              type = ""fanout"",




              value = ""mytest.broadcast"",




              autoDelete = ""true""




          ),




          key = ""#""




      )




  )




  public void processBroadcast(String data) {




    int i = 0;




  }






 
  
  
  
     
 
     
 
  
  
  
  
  
   {}   
     
 
     
 
     
 
  
     
 
     
 
     
 
     
 
     
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
   {}   
  
     
 
      
   {}","org.springframework.amqp.rabbit.annotation.EnableRabbitIntegrationTests
org.springframework.amqp.rabbit.annotation.RabbitListenerAnnotationBeanPostProcessor"
FILE,AMQP,AMQP-633,2016-08-18T15:48:45.000-05:00,non transactional RabbitTemplate uses Container transactional channel,"RabbitResourceHolder resourceHolder = (RabbitResourceHolder) TransactionSynchronizationManager




		.getResource(connectionFactory);




if (resourceHolder != null) {




	Channel channel = resourceFactory.getChannel(resourceHolder);




	if (channel != null) {




		return resourceHolder;




	}




}






    resourceFactory.isSynchedLocalTransactionAllowed()","org.springframework.amqp.rabbit.listener.LocallyTransactedTests
org.springframework.amqp.rabbit.core.RabbitTemplate"
FILE,AMQP,AMQP-653,2016-10-08T02:53:08.000-05:00,not take advantage of registered converters,"@Bean




Jackson2JsonMessageConverter jackson2JsonMessageConverter() {




	return new Jackson2JsonMessageConverter();




}","org.springframework.amqp.rabbit.core.RabbitMessagingTemplateTests
org.springframework.amqp.rabbit.core.RabbitMessagingTemplate"
FILE,AMQP,AMQP-656,2016-10-15T00:25:46.000-05:00,use @Argument within @RabbitListener refer to default exchange,"@Argument 
 @RabbitListener(bindings =




        @QueueBinding(




            value = @Queue(




                value = ""app.events.myEvent"",




                durable = ""true"",




                exclusive = ""false"",




                autoDelete = ""false"",




                arguments = {




                        @Argument(name=""x-dead-letter-exchange"", value = """"),




                        @Argument(name=""x-dead-letter-routing-key"", value=""app.dlq"")




                }),




            exchange = @Exchange(value=""amq.topic"", durable = ""true"", type = ""topic""),




            key=""event.app.myEvent.v1""




        ))






 
 @Bean




    public Queue appMyEventQueue() {




        return QueueBuilder.durable(""app.events.myEvent"")




            .withArgument(""x-dead-letter-exchange"", """")




            .withArgument(""x-dead-letter-routing-key"", deadLetterQueue().getName())




            .build();




    }","org.springframework.amqp.rabbit.annotation.EnableRabbitIntegrationTests
org.springframework.amqp.rabbit.annotation.RabbitListenerAnnotationBeanPostProcessor"
METHOD,commons-math-3-3.0,MATH-718,2011-12-03T18:40:44.000-06:00,return wrong value for large trials,"{{System.out.println(new BinomialDistributionImpl(1000000, 0.5).inverseCumulativeProbability(0.5));}}","org.apache.commons.math3.util.ContinuedFraction:evaluate(double, double, int)"
METHOD,commons-math-3-3.0,MATH-778,2012-04-10T01:06:11.000-05:00,not comply with general contract FieldElement.multiply(int n),{{org.apache.commons.math3.Dfp}}  {{multiply(int n)}}   {{0 <= n <= 9999}}  {{FieldElement.multiply(int n)}}  {{n}},org.apache.commons.math3.dfp.Dfp:multiply(int)
METHOD,commons-math-3-3.0,MATH-905,2012-11-20T14:54:39.000-06:00,not support same range as Math counterparts not support same range of values,"Math.cosh(709.783)  
 FastMath.cosh(709.783)  
 Math.sinh(709.783)  
 FastMath.sinh(709.783)  
 StrictMath.log(Double.MAX_VALUE) 
 double t = exp(x*0.5);
return (0.5*t)*t;
 
 double t = exp(-x*0.5);
return (-0.5*t)*t;",org.apache.commons.math3.util.FastMathTest:testHyperbolicInverses()
METHOD,commons-math-3-3.0,MATH-915,2012-12-13T09:45:23.000-06:00,break in empiricaldistribution,{{o.a.c.m.random.EmpiricalDistribution}},"org.apache.commons.math3.random.EmpiricalDistribution:EmpiricalDistribution()
org.apache.commons.math3.random.EmpiricalDistribution:reSeed(long)
org.apache.commons.math3.random.EmpiricalDistribution:EmpiricalDistribution(RandomGenerator)
org.apache.commons.math3.random.EmpiricalDistributionTest:setUp()
org.apache.commons.math3.random.EmpiricalDistribution:EmpiricalDistribution(int)
org.apache.commons.math3.random.EmpiricalDistribution:EmpiricalDistribution(int, RandomGenerator)"
FILE,DATACMNS,DATACMNS-157,2012-04-20T01:24:38.000-05:00,extend interface,"@Query 
 @NoRepositoryBean




public interface EntityRepository<T> extends JpaRepository<T, Long> {









	T findByDealer(Dealer dealer);




}









 public interface CarRepository extends EntityRepository<PersonalSiteVehicle> {









	@Override




	@Query(""select p from PersonalSiteVehicle p join p.detail d join d.enrichable e where e.dealer = ?1"")




	PersonalSiteVehicle findByDealer(Dealer dealer);




}






 
  @Query","org.springframework.data.repository.core.support.DefaultRepositoryInformationUnitTests
org.springframework.data.repository.core.support.DefaultRepositoryInformation"
FILE,DATACMNS,DATACMNS-233,2012-09-14T07:38:12.000-05:00,return null for null sources return null for empty strings,@javax.validation.constraints.NotNull  @javax.persistence.ManyToOne,"org.springframework.data.repository.support.DomainClassConverterUnitTests
org.springframework.data.repository.support.DomainClassConverter"
FILE,DATACMNS,DATACMNS-257,2012-11-29T02:29:27.000-06:00,not deal with uppercase fields,"@Id 
 class Foo{




  




  @Id




  private String UID;









  //code omitted




}","org.springframework.data.mapping.PropertyPath
org.springframework.data.mapping.PropertyPathUnitTests"
FILE,DATACMNS,DATACMNS-441,2014-02-18T04:41:56.000-06:00,lead to npes lead during QueryMethod processing,@Query,"org.springframework.data.repository.core.support.DefaultRepositoryInformationUnitTests
org.springframework.data.repository.core.support.DefaultRepositoryInformation"
FILE,DATACMNS,DATACMNS-509,2014-05-08T08:39:02.000-05:00,break JSON conversion,"{




    final Set<Pos> allPos = posService.findAll();




    return ImmutableSortedSet.copyOf(allPos);




}






 
 {""name: ""pos1""}  {""name: ""pos2""} 
  
     {""name: ""pos1""}  {""name: ""pos2""}","org.springframework.data.repository.core.support.DummyRepositoryFactory
org.springframework.data.repository.core.support.RepositoryFactorySupport
org.springframework.data.repository.core.support.RepositoryFactorySupportUnitTests"
FILE,DATACMNS,DATACMNS-511,2014-05-22T00:04:43.000-05:00,cause infinite loop,"public class User extends AbstractTenantUser<User, Role, Permission, Tenant> {




    ...




}




 public abstract class AbstractTenantUser<USER extends AbstractTenantUser<USER, ROLE, PERMISSION, TENANT>, ROLE extends AbstractRole<USER, PERMISSION>, PERMISSION extends AbstractPermission<USER>, TENANT extends AbstractTenant<USER>> extends AbstractUser<USER, ROLE, PERMISSION> implements TenantEntity<TENANT> {




    ...




}




 public abstract class AbstractUser<USER extends AbstractUser<USER, ROLE, PERMISSION>, ROLE extends AbstractRole<USER, PERMISSION>, PERMISSION extends AbstractPermission<USER>> extends AuditingDateBaseEntity<USER> {




    ...




}




 public abstract class AbstractPermission<USER extends AbstractUser<USER, ?, ?>> extends AuditingDateBaseEntity<USER> {




    ...




}




 public abstract class AuditingDateBaseEntity<USER extends AbstractUser<USER, ?, ?>> extends AbstractDateBaseEntity implements AuditingEntity<USER> {




    ...




}




 public abstract class AbstractDateBaseEntity extends AbstractBaseEntity implements DateEntity {




    ...




}




 public abstract class AbstractBaseEntity implements BaseEntity {




    ...




}",org.springframework.data.util.TypeVariableTypeInformation
FILE,DATACMNS,DATACMNS-562,2014-08-19T01:25:20.000-05:00,resolve TreeMap as map value type,"public class ClassC extends ClassA {




	private ClassB b;









	public ClassB getB() {




		return b;




	}









	public void setB(ClassB b) {




		this.b = b;




	}




}









 class ClassA {









	private String name;









	private ClassD dObject;









	public String getName() {




		return name;




	}









	public void setName(String name) {




		this.name = name;




	}









	public ClassD getdObject() {




		return dObject;




	}









	public void setdObject(ClassD dObject) {




		this.dObject = dObject;




	}




}









 class ClassB extends ClassA {




}









 class ClassD {









	private TreeMap<String, TreeMap<String, String>> map = new TreeMap<>();









	public TreeMap<String, TreeMap<String, String>> getMap() {




		return map;




	}









	public void setMap(TreeMap<String, TreeMap<String, String>> map) {




		this.map = map;




	}









}






 
 
 
 
 
 
 
 ClassC cObject = new ClassC();




cObject.setName(""Jon"");




try {




	mongoTemplate.save(cObject, ""c"");




} catch (Exception e) {




	e.printStackTrace();




}






 
 
     private transient EntrySet entrySet = null;","org.springframework.data.mapping.model.AbstractPersistentPropertyUnitTests
org.springframework.data.mapping.model.AbstractPersistentProperty"
FILE,DATACMNS,DATACMNS-609,2014-11-30T07:31:51.000-06:00,create multiple bean definitions for RepositoryInterfaceAwareBeanPostProcessor,predictBeanType(),"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupportUnitTests
org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport"
FILE,DATACMNS,DATACMNS-616,2014-12-17T02:25:54.000-06:00,not access private fields,"@Entity




@RevisionEntity(ExtendedRevisionListener.class)




@Table(name = ""revinfo"")




public class ExtendedRevision implements Serializable  
 @Id




	@GeneratedValue




	@Column(name = ""REV"")




	@RevisionNumber




	private Integer id;









	 @RevisionTimestamp




	@Temporal(TemporalType.TIMESTAMP)




	@Column(name = ""REVTSTMP"", nullable = false)




	private Date date;









	 @Column(nullable = false, length = 15)




	private String username;









	 public Integer getId() {




		return id;




	}









	 public Date getDate() {




		return date;




	}









	 public String getUsername() {




		return username;




	}









	 public void setUsername(String username) {




		this.username = username;




	}",org.springframework.data.util.AnnotationDetectionFieldCallback
FILE,DATACMNS,DATACMNS-683,2015-04-13T05:31:25.000-05:00,enable Spring break @ModelAttribute binding in Spring MVC,"package be.vdab.web;









import org.springframework.context.annotation.ComponentScan;




import org.springframework.context.annotation.Configuration;




import org.springframework.data.web.config.EnableSpringDataWebSupport;




import org.springframework.web.servlet.config.annotation.EnableWebMvc;




import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;









// enkele imports




@Configuration




@EnableWebMvc




@EnableSpringDataWebSupport




@ComponentScan




public class CreateControllerBeans extends WebMvcConfigurerAdapter {




}






  






package be.vdab.web;









import org.springframework.stereotype.Controller;




import org.springframework.web.bind.annotation.ModelAttribute;




import org.springframework.web.bind.annotation.RequestMapping;




import org.springframework.web.bind.annotation.RequestMethod;




import org.springframework.web.servlet.ModelAndView;









import be.vdab.entities.Person;









@Controller




@RequestMapping(value = ""/"")




public class PersonController {




	private static final String TOEVOEGEN_VIEW = ""/WEB-INF/JSP/index.jsp"";














	@RequestMapping(method=RequestMethod.GET)




	ModelAndView get() {




		return new ModelAndView(TOEVOEGEN_VIEW).addObject(new Person());




	}




	




	@RequestMapping(method = RequestMethod.POST)




	String post(@ModelAttribute Person person) {




	  if (person == null) {




		  throw new IllegalArgumentException(""person IS NULL"");




	  }




	  return ""redirect:/"";




	}



















}






 
    
 
 
 
    
 @EnableSpringDataWebSupport   
 @ModelAttribute","org.springframework.data.repository.support.DomainClassConverterUnitTests
org.springframework.data.repository.support.DomainClassConverter"
FILE,DATACMNS,DATACMNS-769,2015-10-01T15:10:13.000-05:00,not create auto-generated @Async method with pagination,"public interface TRepository extends MongoRepository<T, String> {









    @Async




    CompletableFuture<List<T>> findByUrl(String url, Pageable p); // works neither with Future nor with ListenableFuture




}","org.springframework.data.repository.util.ClassUtilsUnitTests
org.springframework.data.repository.util.ClassUtils"
CLASS,derby-10.9.1.0,DERBY-4269,2009-06-12T06:40:38.000-05:00,not succeed in min.,testReplication_Local_3_p6_autocommit_OK(org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_3_p6),"java.engine.org.apache.derby.iapi.util.DoubleProperties
java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_3_p6"
CLASS,derby-10.9.1.0,DERBY-4669,2010-05-20T05:08:54.000-05:00,come before derby.jar,testBootingAnAlreadyBootedDatabase(org.apache.derbyTesting.functionTests.tests.store.ClassLoaderBootTest)  testBootingDatabaseShutdownByAnotherCLR(org.apache.derbyTesting.functionTests.tests.store.ClassLoaderBootTest),"java.client.org.apache.derby.client.net.EncodedInputStream
java.engine.org.apache.derby.iapi.services.info.JVMInfo
java.client.org.apache.derby.client.am.ClobLocatorReader
java.client.org.apache.derby.client.am.ClobLocatorInputStream
java.client.org.apache.derby.client.am.PreparedStatement
java.client.org.apache.derby.client.net.Utf8CcsidManager"
CLASS,derby-10.9.1.0,DERBY-5251,2011-05-29T04:27:15.000-05:00,make ErrorCodeTest pass in non-english locale,"test_errorcode(org.apache.derbyTesting.functionTests.tests.lang.ErrorCodeTest
)",java.testing.org.apache.derbyTesting.functionTests.tests.lang.ErrorCodeTest
CLASS,derby-10.9.1.0,DERBY-5407,2011-09-12T08:50:38.000-05:00,produce unusable DDL for VARCHAR FOR BIT DATA columns run across network,"varchar( 20 )  
 
 
 VARCHAR ()","java.testing.org.apache.derbyTesting.functionTests.tests.lang.SystemCatalogTest
java.engine.org.apache.derby.catalog.types.BaseTypeIdImpl"
CLASS,derby-10.9.1.0,DERBY-5531,2011-12-12T06:34:21.000-06:00,assert failure insert NULL into indexed column,"colldb;territory=en;collation=TERRITORY_BASED; 
 varchar(10)","java.engine.org.apache.derby.impl.sql.compile.ResultColumnList
java.engine.org.apache.derby.impl.store.access.btree.OpenBTree
java.testing.org.apache.derbyTesting.functionTests.tests.lang.CollationTest"
CLASS,derby-10.9.1.0,DERBY-5663,2012-03-17T23:45:11.000-05:00,get NPE set derby.language.logStatementText property to true,patch(DERBY5663_patch1.txt),"java.testing.org.apache.derbyTesting.functionTests.tests.largedata.LobLimitsTest
java.testing.org.apache.derbyTesting.junit.SystemPropertyTestSetup"
CLASS,derby-10.9.1.0,DERBY-5740,2012-05-03T07:31:43.000-05:00,remove unsued code in AlterTableConstantaction.columnDroppedAndTriggerDependencies,"CollectNodesVisitor visitor = new CollectNodesVisitor(ColumnReference.class);
			stmtnode.accept(visitor);
			Vector refs = visitor.getList();",java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction
CLASS,derby-10.9.1.0,DERBY-5912,2012-08-28T19:43:59.000-05:00,fail for NetworkServer,"isValid()  
 testIsValidImplemented(org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionTest) 
 
  assertTrue(getConnection().isValid(1));","java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionMethodsTest
java.drda.org.apache.derby.impl.drda.DRDAConnThread
java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionTest"
CLASS,derby-10.9.1.0,DERBY-6053,2013-01-25T09:02:53.000-06:00,use prepared statement for Connection.setTransactionIsolation use regular statement for Connection.setTransactionIsolation,"client.am.Connection setTransactionIsolation()   setTransactionIsolation()   
 private Statement setTransactionIsolationStmt = null;
 
  
 createStatementX(java.sql.ResultSet.TYPE_FORWARD_ONLY,
                            java.sql.ResultSet.CONCUR_READ_ONLY,
                            holdability());
 
 private void setTransactionIsolationX(int level)
 
 setTransactionIsolationStmt.executeUpdate(
                ""SET CURRENT ISOLATION = "" + levelString);


 
   

import java.sql.*;
import java.net.*;
import java.io.*;
import org.apache.derby.drda.NetworkServerControl;

/**
 * Client template starts its own NetworkServer and runs some SQL against it.
 * The SQL or JDBC API calls can be modified to reproduce issues
 * 
 */public class SetTransactionIsolation {
    public static Statement s;
    
    public static void main(String[] args) throws Exception {
        try {
            // Load the driver. Not needed for network server.
            
            Class.forName(""org.apache.derby.jdbc.ClientDriver"");
            // Start Network Server
            startNetworkServer();
            // If connecting to a customer database. Change the URL
            Connection conn = DriverManager
                    .getConnection(""jdbc:derby://localhost:1527/wombat;create=true"");
            // clean up from a previous run
            s = conn.createStatement();
            try {
                s.executeUpdate(""DROP TABLE T"");
            } catch (SQLException se) {
                if (!se.getSQLState().equals(""42Y55""))
                    throw se;
            }

            for (int i = 0; i < 50000; i++) {
		conn.setTransactionIsolation(Connection.TRANSACTION_REPEATABLE_READ);
		conn.setTransactionIsolation(Connection.TRANSACTION_SERIALIZABLE);

	    }
            
            // rs.close();
            // ps.close();
            runtimeInfo();
            conn.close();
            // Shutdown the server
            shutdownServer();
        } catch (SQLException se) {
            while (se != null) {
                System.out.println(""SQLState="" + se.getSQLState()
                        + se.getMessage());
                se.printStackTrace();
                se = se.getNextException();
            }
        }
    }
    
    /**
     * starts the Network server
     * 
     */
    public static void startNetworkServer() throws SQLException {
        Exception failException = null;
        try {
            
            NetworkServerControl networkServer = new NetworkServerControl(
                    InetAddress.getByName(""localhost""), 1527);
            
            networkServer.start(new PrintWriter(System.out));
            
            // Wait for the network server to start
            boolean started = false;
            int retries = 10; // Max retries = max seconds to wait
            
            while (!started && retries > 0) {
                try {
                    // Sleep 1 second and then ping the network server
                    Thread.sleep(1000);
                    networkServer.ping();
                    
                    // If ping does not throw an exception the server has
                    // started
                    started = true;
                } catch (Exception e) {
                    retries--;
                    failException = e;
                }
                
            }
            
            // Check if we got a reply on ping
            if (!started) {
                throw failException;
            }
        } catch (Exception e) {
            SQLException se = new SQLException(""Error starting network  server"");
            se.initCause(failException);
            throw se;
        }
    }
    
    public static void shutdownServer() throws Exception {
        NetworkServerControl networkServer = new NetworkServerControl(
                InetAddress.getByName(""localhost""), 1527);
        networkServer.shutdown();
    }
    
    public static void runtimeInfo() throws Exception {
        NetworkServerControl networkServer = new NetworkServerControl(
                InetAddress.getByName(""localhost""), 1527);
        System.out.println(networkServer.getRuntimeInfo());
    }
    
}",java.client.org.apache.derby.client.am.Connection
CLASS,derby-10.9.1.0,DERBY-6079,2013-02-19T18:51:03.000-06:00,run on weme checkin,testAll(org.apache.derbyTesting.functionTests.tests.lang.NativeAuthenticationServiceTest),"java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup
java.testing.org.apache.derbyTesting.junit.BaseTestCase"
CLASS,derby-10.9.1.0,DERBY-6131,2013-03-27T08:17:37.000-05:00,throw ClassCastException,"varchar(1000) 
   varchar(1000)","java.testing.org.apache.derbyTesting.functionTests.tests.lang._Suite
java.testing.org.apache.derbyTesting.junit.BaseJDBCTestCase
java.engine.org.apache.derby.impl.sql.compile.PredicateList"
CLASS,derby-10.9.1.0,DERBY-6138,2013-04-02T13:14:31.000-05:00,seal violation fail with sealing seal package org.apache.derby.iapi.services.sanity,testBootingDatabaseShutdownByAnotherCLR(org.apache.derbyTesting.functionTests.tests.store.ClassLoaderBootTest),java.client.org.apache.derby.client.am.LogWriter
CLASS,derby-10.9.1.0,DERBY-6150,2013-04-03T19:58:03.000-05:00,add automatic cleanup of connections open with openDefaultConnection(),openDefaultConnection()   tearDown(),java.testing.org.apache.derbyTesting.junit.BaseJDBCTestCase
METHOD,time,22,2013-05-07T14:19:36.000-05:00,throw exception for MonthDay,"final LocalDate january12012 = new LocalDate(2012, 1,1);
final LocalDate february292012 = new LocalDate(2012, 2, 29);
// OK
assertEquals(59, Days.daysBetween(january12012, february292012).getDays());

final MonthDay january1 = new MonthDay(1,1);
final MonthDay february29 = new MonthDay(2, 29);
// FAIL
assertEquals(59, Days.daysBetween(january1, february29).getDays());","org.joda.time.base.BaseSingleFieldPeriod:between(ReadablePartial, ReadablePartial, ReadablePeriod)"
METHOD,time,28,2013-05-31T00:52:24.000-05:00,questionable behaviour of GJChronology pass 1BC,"Chronology chronology = GJChronology.getInstance();

LocalDate start = new LocalDate(2013, 5, 31, chronology);
LocalDate expectedEnd = new LocalDate(-1, 5, 31, chronology); // 1 BC
assertThat(start.minusYears(2013), is(equalTo(expectedEnd)));
assertThat(start.plus(Period.years(-2013)), is(equalTo(expectedEnd)));","org.joda.time.chrono.GJChronology:getInstance(DateTimeZone, ReadableInstant, int)
org.joda.time.chrono.GJChronology:add(long, long)
org.joda.time.chrono.GJChronology:add(long, int)"
METHOD,time,77,2013-10-16T15:36:22.000-05:00,change value of MutableDateTime,"final MutableDateTime mdt = new MutableDateTime(2011, 10, 30, 3, 0, 0, 0, DateTimeZone.forID(""Europe/Berlin""));
System.out.println(""Start date: "" + mdt + "" ("" + mdt.toInstant().getMillis() + "")"");
mdt.addHours(-1);
System.out.println(""addHours(-1): "" + mdt + "" ("" + mdt.toInstant().getMillis() + "")"");
mdt.addHours(0);
System.out.println(""addHours(0): "" + mdt + "" ("" + mdt.toInstant().getMillis() + "")"");
mdt.addDays(0);
System.out.println(""addDays(0): "" + mdt + "" ("" + mdt.toInstant().getMillis() + "")"");
 
 
 addHours(-1)  
 addHours(0)  
 addDays(0)  
 
          
 addDays(0)","org.joda.time.MutableDateTime:add(DurationFieldType, int)
org.joda.time.MutableDateTime:addWeeks(int)
org.joda.time.MutableDateTime:addYears(int)
org.joda.time.MutableDateTime:addMonths(int)
org.joda.time.MutableDateTime:addMinutes(int)
org.joda.time.MutableDateTime:addHours(int)
org.joda.time.MutableDateTime:addWeekyears(int)
org.joda.time.MutableDateTime:addDays(int)
org.joda.time.MutableDateTime:addSeconds(int)
org.joda.time.MutableDateTime:addMillis(int)"
METHOD,time,93,2013-12-01T09:33:58.000-06:00,fail with NPE,"new Partial(yearOfCentury(), 1)  with(weekyear(), 1);
// NullPointerException
// org.joda.time.Partial.with (Partial.java:447)","org.joda.time.Partial:Partial(DateTimeFieldType[], int[], Chronology)
org.joda.time.field.UnsupportedDurationField:compareTo(DurationField)"
FILE,COMPRESS,COMPRESS-171,2012-01-20T17:54:09.000-06:00,file bytes as tar archives,ArchiveStreamFactory()  createArchiveInputStream(inputstream),org.apache.commons.compress.archivers.ArchiveStreamFactory
FILE,COMPRESS,COMPRESS-209,2012-11-01T17:37:59.000-05:00,recognize DOC as TAR,ArchiveStreamFactory.createArchiveInputStream(InputStream),org.apache.commons.compress.archivers.ArchiveStreamFactoryTest
FILE,COMPRESS,COMPRESS-189,2012-06-26T21:30:39.000-05:00,read bytes read from nested zip file,"ZipFile zipFile = new ZipFile(""C:/test.ZIP"");
    for (Enumeration<ZipArchiveEntry> iterator = zipFile.getEntries(); iterator.hasMoreElements(); ) {
      ZipArchiveEntry entry = iterator.nextElement();
      InputStream is = new BufferedInputStream(zipFile.getInputStream(entry));
      ZipArchiveInputStream zipInput = new ZipArchiveInputStream(is);
      ZipArchiveEntry innerEntry;
      while ((innerEntry = zipInput.getNextZipEntry()) != null){
        if (innerEntry.getName().endsWith(""XML""))
{

          //zipInput.read();

          System.out.println(IOUtils.toString(zipInput));

        }
      }
    }","org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream"
FILE,COMPRESS,COMPRESS-245,2013-12-05T11:01:39.000-06:00,tararchiveinputstream #getce null,"FileInputStream fin = new FileInputStream(""exampletar.tar.gz"");

GZIPInputStream gin = new GZIPInputStream(fin);

TarArchiveInputStream tin = new TarArchiveInputStream(gin);            TarArchiveEntry entry;

              tin.getNextTarEntry()","org.apache.commons.compress.archivers.tar.TarArchiveInputStream
org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest"
FILE,COMPRESS,COMPRESS-309,2015-02-18T17:22:16.000-06:00,read to full buffer,"BZip2CompressorInputStream.read(buffer, offset, length)  
 @Test

	public void testApacheCommonsBZipUncompression () throws Exception {

		// Create a big random piece of data

		byte[] rawData = new byte[1048576];

		for (int i=0; i<rawData.length; ++i) {

			rawData[i] = (byte) Math.floor(Math.random()*256);

		}



		// Compress it

		ByteArrayOutputStream baos = new ByteArrayOutputStream();

		BZip2CompressorOutputStream bzipOut = new BZip2CompressorOutputStream(baos);

		bzipOut.write(rawData);

		bzipOut.flush();

		bzipOut.close();

		baos.flush();

		baos.close();



		// Try to read it back in

		ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());

		BZip2CompressorInputStream bzipIn = new BZip2CompressorInputStream(bais);

		byte[] buffer = new byte[1024];

		// Works fine

		Assert.assertEquals(1024, bzipIn.read(buffer, 0, 1024));

		// Fails, returns -1 (indicating the stream is complete rather than that the buffer 

		// was full)

		Assert.assertEquals(0, bzipIn.read(buffer, 1024, 0));

		// But if you change the above expected value to -1, the following line still works

		Assert.assertEquals(1024, bzipIn.read(buffer, 0, 1024));

		bzipIn.close();

	}",org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream
FILE,COMPRESS,COMPRESS-332,2016-01-26T14:12:44.000-06:00,invalid value at end,FramedSnappyCompressorInputStream.read(),org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream
FILE,COMPRESS,COMPRESS-357,2016-05-25T17:50:50.000-05:00,affect output stream,"finished()  
  
 s.close();
s = null;
  finalize()  finish()  finish()  
 finish()  
 finalize() 
 finalize()",org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream
METHOD,mahout-0.8,MAHOUT-1261,2013-06-13T10:09:15.000-05:00,return int have size Integer.MAX_VALUE have int,Longs.hashCode(id),"org.apache.mahout.cf.taste.hadoop.TasteHadoopUtils:idToIndex(long)
org.apache.mahout.cf.taste.hadoop.TasteHadoopUtils:readID(String, boolean)"
METHOD,mahout-0.8,MAHOUT-1301,2013-08-01T09:31:21.000-05:00,have excess comma at end,"SequentialAccessSparseVector toString()   toString()  
 {code:java}
 Vector v = new SequentialAccessSparseVector(capacity);
v.set(1, 0.1);
v.set(3, 0.3);
{code}
  v.toString()  
 {code:java}
 {1:0.1,3:0.3}
 {code}
 
 {code:java}
 {1:0.1,3:0.3,}
 {code}","org.apache.mahout.math.SequentialAccessSparseVector:toString()
org.apache.mahout.math.RandomAccessSparseVector:toString()"
METHOD,mahout-0.8,MAHOUT-1308,2013-08-09T05:12:20.000-05:00,not extend CandidateItemsStrategy due_to restricted visibility,{{AbstractCandidateItemsStrategy}}  doGetCandidateItems(),"org.apache.mahout.cf.taste.impl.recommender.AbstractCandidateItemsStrategy:doGetCandidateItems(long[], DataModel)
org.apache.mahout.cf.taste.impl.recommender.AbstractCandidateItemsStrategy:refresh(Collection<Refreshable>)"
METHOD,mahout-0.8,MAHOUT-1314,2013-08-18T09:07:48.000-05:00,throw NullPointerException set REDUCE_STREAMING_KMEANS to true,"return input.getCentroid();  
 input.getCentroid()  clone();","org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer:reduce(IntWritable, Iterable<CentroidWritable>, Context)
org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer:getBestCentroids(List<Centroid>, Configuration)"
METHOD,mahout-0.8,MAHOUT-1358,2013-11-18T01:58:22.000-06:00,throw IllegalArgumentException set REDUCE_STREAMING_KMEANS to true,"{Code}


 {Code}


  StreamingKMeansThread.call()


 {Code}
     Iterator<Centroid> datapointsIterator = datapoints.iterator();
    if (estimateDistanceCutoff == StreamingKMeansDriver.INVALID_DISTANCE_CUTOFF) {
      List<Centroid> estimatePoints = Lists.newArrayListWithExpectedSize(NUM_ESTIMATE_POINTS);
      while (datapointsIterator.hasNext() && estimatePoints.size() < NUM_ESTIMATE_POINTS) {
        estimatePoints.add(datapointsIterator.next());
      }
      estimateDistanceCutoff = ClusteringUtils.estimateDistanceCutoff(estimatePoints, searcher.getDistanceMeasure());
    }


    StreamingKMeans clusterer = new StreamingKMeans(searcher, numClusters, estimateDistanceCutoff);
    while (datapointsIterator.hasNext()) {
      clusterer.cluster(datapointsIterator.next());
    }
{Code}","org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansThread:StreamingKMeansThread(Path, Configuration)
org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansThread:StreamingKMeansThread(Iterable<Centroid>, Configuration)"
CLASS,bookkeeper-4.1.0,BOOKKEEPER-294,2012-06-12T23:56:56.000-05:00,start bookkeeper before ZK session timeout,"{noformat}
         
 {noformat}","bookkeeper-server.src.test.java.org.apache.bookkeeper.bookie.BookieJournalTest
bookkeeper-server.src.main.java.org.apache.bookkeeper.bookie.Bookie
bookkeeper-server.src.main.java.org.apache.bookkeeper.proto.BookieServer"
CLASS,bookkeeper-4.1.0,BOOKKEEPER-318,2012-06-26T01:55:45.000-05:00,log message for spelling,"{code}
 @Override
        public void processResult(int rc, String path, Object ctx) {
            if (rc != successRc) {
                LOG.error(""Error in multi callback : "" + rc);
                exceptions.add(rc);
            }
            tick();
        }
 {code}",bookkeeper-server.src.main.java.org.apache.bookkeeper.proto.BookkeeperInternalCallbacks
CLASS,bookkeeper-4.1.0,BOOKKEEPER-371,2012-08-17T05:42:02.000-05:00,cause hedwig hub,"Channel topicSubscriberChannel = client.getSubscriber().getChannelForTopic(topicSubscriber);
        HedwigClientImpl.getResponseHandlerFromChannel(topicSubscriberChannel).getSubscribeResponseHandler()
        .messageConsumed(messageConsumeData.msg);

  getPipeline()  getLast()   channel.close()   messageConsumed()","hedwig-client.src.main.java.org.apache.hedwig.client.netty.WriteCallback
hedwig-client.src.main.java.org.apache.hedwig.client.handlers.SubscribeResponseHandler
hedwig-client.src.main.java.org.apache.hedwig.client.netty.HedwigPublisher
hedwig-client.src.main.java.org.apache.hedwig.client.netty.HedwigSubscriber
hedwig-client.src.main.java.org.apache.hedwig.client.handlers.MessageConsumeCallback
hedwig-client.src.main.java.org.apache.hedwig.client.netty.HedwigClientImpl"
CLASS,bookkeeper-4.1.0,BOOKKEEPER-376,2012-08-22T13:32:57.000-05:00,consider node as special znode,"{noformat}
     
 {noformat}","bookkeeper-server.src.main.java.org.apache.bookkeeper.meta.LedgerLayout
bookkeeper-server.src.main.java.org.apache.bookkeeper.meta.AbstractZkLedgerManager"
FILE,swt-3.1,100387,2005-06-16T08:44:00.000-05:00,create Shell on MouseHover dispose Shell on MouseHover,CTabFolder.showToolTip(),org.eclipse.swt.custom.CTabFolder
FILE,swt-3.1,102794,2005-07-05T17:56:00.000-05:00,have change behaviour between 3.0.2,"public static void main(String[] args) {
        Display display = new Display();

        Shell shell = new Shell(display);

        shell.setLayout(new FillLayout());

        ScrolledComposite sc1 = new ScrolledComposite(shell, SWT.H_SCROLL
                | SWT.V_SCROLL);
        Composite editor = new Composite(sc1, SWT.SHADOW_NONE);
        sc1.setContent(editor);
        sc1.setLayout(new FillLayout());

        GridLayout layout = new GridLayout();

        layout.numColumns = 6;
        layout.makeColumnsEqualWidth = true;
        editor.setLayout(layout);

        Label boxLabel = new Label(editor, SWT.NONE);
        boxLabel.setText(""My label"");

        Text textBox = new Text(editor, SWT.H_SCROLL | SWT.V_SCROLL | SWT.MULTI
                | SWT.BORDER);
        textBox.setText(""Some text for the text box\nAlso with a new line"");

        // do layout bits
        GridData labelData = new GridData(SWT.RIGHT, SWT.TOP, false, false);
        boxLabel.setLayoutData(labelData);

        GridData textBoxData = new GridData(SWT.FILL, SWT.CENTER, true, false,
                5, 1);
        textBoxData.widthHint = 400;
        textBox.setLayoutData(textBoxData);

        sc1.setExpandHorizontal(true);
        sc1.setExpandVertical(true);
        sc1.setMinSize(editor.computeSize(SWT.DEFAULT, SWT.DEFAULT));

        shell.pack();
        shell.open();

        while (!shell.isDisposed()) {
            if (!display.readAndDispatch())
                display.sleep();
        }
        display.dispose();
    }",org.eclipse.swt.layout.GridLayout
FILE,swt-3.1,104150,2005-07-16T19:58:00.000-05:00,click on empty space click on grid lines,"table.getLinesVisible()  
 table.setLinesVisible(true)",org.eclipse.swt.custom.TableCursor
FILE,swt-3.1,78854,2004-11-17T12:17:00.000-06:00,leak in ClipboardProxy.getFunc(),"ClipboardProxy.getFunc()  OS.gtk_selection_data_set()  
 OS.g_free()","org.eclipse.swt.dnd.Clipboard
org.eclipse.swt.dnd.DragSource"
FILE,swt-3.1,81264,2004-12-15T13:17:00.000-06:00,fail to setTopIndex add new items to table,"public static void main(String[] args) {
		final Display display = new Display();
		Shell shell = new Shell(display);
		shell.setBounds(10,10,200,200);
		final Table table = new Table(shell, SWT.NONE);
		table.setBounds(10,10,100,100);
		for (int i = 0; i < 99; i++) {
			new TableItem(table, SWT.NONE).setText(""item "" + i);
		}
		
		table.setTopIndex(20);

		shell.open();

		System.out.println(""top visible index: "" + table.getTopIndex());
		
		for (int i = 0; i < 5; i++) {
			new TableItem(table, SWT.NONE).setText(""item "" + i);
		}

		table.setTopIndex(40);
		System.out.println(""top visible index: "" + table.getTopIndex());
		
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch()) display.sleep();
		}
		display.dispose();
	}

  
  
 setTopTable(40)  
  
 setTopIndex(40)","org.eclipse.swt.widgets.Tree
org.eclipse.swt.widgets.List
org.eclipse.swt.widgets.Table"
FILE,swt-3.1,83699,2005-01-26T06:03:00.000-06:00,default after screen saver,"StyledText.setFont(Font)  
   updateFont(Font, Font)  
   updateFont(Font, Font)  
 updateFont(Font, Font)  
 Composite.updateFont(Font, Font)  
 Composite.updateFont(Font, Font)  
 Composite.updateFont(Font, Font)  
 Composite.updateFont(Font, Font)  
 Composite.updateFont(Font, Font)  
 Composite.updateFont(Font, Font)  
 Composite.updateFont(Font, Font)  
 updateFont(Font, Font)  
 Display.updateFont()  
  
  
 Display.readAndDispatch()  
 Workbench.runEventLoop(Window$IExceptionHandler, Display)  
 Workbench.runUI()  
 Workbench.createAndRunWorkbench(Display, WorkbenchAdvisor)  
 PlatformUI.createAndRunWorkbench(Display, WorkbenchAdvisor)  
 IDEApplication.run(Object)  
 EclipseStarter.run(Object)",org.eclipse.swt.widgets.Control
FILE,swt-3.1,84609,2005-02-07T13:35:00.000-06:00,have NPE while calling call pack() on last column,"lvtTable.getColumn(0).pack();
lvtTable.getColumn(1).pack();
lvtTable.getColumn(2).pack();

   
 parent.getColumns()","org.eclipse.swt.widgets.TableColumn
org.eclipse.swt.widgets.Table"
FILE,swt-3.1,86000,2005-02-21T14:47:00.000-06:00,produce invalid JPEG images,"package com.ibm.test.image;

import org.eclipse.swt.*;
import org.eclipse.swt.graphics.*;

public class ImageLoaderTest {
		
	public static void main(String[] args) {
		ImageLoader loader;
		String dir=""c:\\image-problems\\"";
		String files[]={
				""s34i3p04"",
				""s34n3p04"",
				""s35i3p04"",
				""s35n3p04"",
				""s36i3p04"",
				""s36n3p04"",
				""s37i3p04"",
				""s37n3p04"",
				""s38i3p04"",
				""s38n3p04"",
				""s39i3p04"",
				""s39n3p04""
		};
		
		try {
			for (int i=0; i<files.length; i++) {
			String filein  = dir+files[i]+"".png"";
			String fileout = dir+files[i]+"".jpg"";
			
			loader = new ImageLoader();
			loader.load(filein);
			loader.save(fileout,SWT.IMAGE_JPEG);
			}
		} catch (SWTException e) {
		  e.printStackTrace();
		}
	}
}",org.eclipse.swt.internal.image.JPEGFileFormat
FILE,swt-3.1,87363,2005-03-08T08:00:00.000-06:00,open new menus,"boolean showMenu (int x, int y) {
	Event event = new Event ();
	event.x = x;
	event.y = y;
	sendEvent (SWT.MenuDetect, event);
	if (!event.doit) return true;
	if (menu != null && !menu.isDisposed ()) {
		if (x != event.x || y != event.y) {
			menu.setLocation (event.x, event.y);
		}
		menu.setVisible (true);
		return true;
	}
	return false;
}

   
 boolean showMenu (Menu menu, int x, int y) {
	Event event = new Event ();
	event.x = x;
	event.y = y;
	sendEvent (SWT.MenuDetect, event);
	if (!event.doit) return true;
	if (menu != null && !menu.isDisposed ()) {
		if (x != event.x || y != event.y) {
			menu.setLocation (event.x, event.y);
		}
		menu.setVisible (true);
		return true;
	}
	return false;
}

 
  
 public static void main(String[] args) {
	Display display = new Display();
	final Shell shell = new Shell(display);
	shell.addListener(SWT.MenuDetect, new Listener() {
		int count = 0;
		public void handleEvent(Event event) {
			Menu menu = shell.getMenu();
			if (menu != null) menu.dispose();
			menu = new Menu(shell, SWT.POP_UP);
			MenuItem item = new MenuItem(menu, SWT.PUSH);
			item.setText(""Menu "" + count++);
			shell.setMenu(menu);
		}
	});
	shell.pack();
	shell.open();
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch()) display.sleep();
	}
	display.dispose();
}","org.eclipse.swt.widgets.Text
org.eclipse.swt.widgets.Tree
org.eclipse.swt.widgets.Widget
org.eclipse.swt.widgets.Table"
FILE,swt-3.1,87997,2005-03-14T19:21:00.000-06:00,cause NPE,"TableEdtior.dispose( )  
  
   

import org.eclipse.swt.custom.TableEditor;
import org.eclipse.swt.events.*;
import org.eclipse.swt.widgets.*;

public class Test
{
    public static void main( String[ ] args )
    {
        Shell shell = new Shell( );
        Table table = new Table( shell, 0 );
        new TableColumn( table, 0 );
        TableItem item = new TableItem( table, 0 );
        final TableEditor editor = new TableEditor( table );
        final Text text = new Text( table, 0 );
        editor.setEditor( text, item, 0 );
        item.addDisposeListener( new DisposeListener( ) {
            public void widgetDisposed( DisposeEvent e )
            {
                text.dispose( );
                editor.dispose( ); // Triggers a NPE
            }
        } );
        shell.dispose( );
    }
}","org.eclipse.swt.widgets.Tree
org.eclipse.swt.widgets.Table"
FILE,swt-3.1,88829,2005-03-22T20:41:00.000-06:00,not fire enough Move events,"Table.setColumnOrder(new int[] {4,1,2,3,0});",org.eclipse.swt.widgets.Table
FILE,swt-3.1,93724,2005-05-04T17:35:00.000-05:00,create signal names,"byte[] buffer = Converter.wcsToMbcs(null, ""drag_data_get"", true);
OS.g_signal_connect(control.handle, buffer, DragGetData.getAddress(), 0);	
buffer = Converter.wcsToMbcs(null, ""drag_end"", true);
OS.g_signal_connect(control.handle, buffer, DragEnd.getAddress(), 0);
buffer = Converter.wcsToMbcs(null, ""drag_data_delete"", true);
OS.g_signal_connect(control.handle, buffer, DragDataDelete.getAddress(), 0);","org.eclipse.swt.dnd.DropTarget
org.eclipse.swt.dnd.DragSource"
FILE,swt-3.1,97651,2005-05-31T14:43:00.000-05:00,mark cheese,"Tree.redraw() 
 public static void main(String[] args) {
	final Display display = new Display();
	final Shell shell = new Shell(display);
	shell.setBounds(10, 10, 300, 300);
	final Tree tree = new Tree(shell, SWT.NONE);
	tree.setBounds(10, 10, 200, 200);
	new TreeItem(tree, SWT.NONE).setText(""pre-root"");
	TreeItem root1 = new TreeItem(tree, SWT.NONE);
	root1.setText(""root"");
	TreeItem child = new TreeItem(root1, SWT.NONE);
	child.setText(""child"");
	Button button = new Button(shell, SWT.PUSH);
	button.setBounds(230,10,30,30);
	button.addSelectionListener(new SelectionAdapter() {
		public void widgetSelected(SelectionEvent e) {
			tree.redraw();
		}
	});
	root1.setExpanded(true);
	tree.setInsertMark(root1, false);
	shell.open();
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch()) display.sleep();
	}
	display.dispose();
}","org.eclipse.swt.dnd.TreeDragUnderEffect
org.eclipse.swt.widgets.Tree"
FILE,CONFIGURATION,CONFIGURATION-214,2006-05-26T21:35:46.000-05:00,add integer cause exception,"bsh % p = new org.apache.commons.configuration.PropertiesConfiguration();
bsh % p.setProperty(""foo"", 6);
bsh % p.getLong(""foo"");
// Error: // Uncaught Exception: Method Invocation p.getLong : at Line: 3 : in file: <unknown file> : p .getLong ( ""foo"" )
   
  PropertyConverter.toLong()","org.apache.commons.configuration.TestPropertyConverter
org.apache.commons.configuration.PropertyConverter
org.apache.commons.configuration.TestBaseConfiguration"
FILE,CONFIGURATION,CONFIGURATION-241,2006-12-02T00:03:48.000-06:00,not generate events,"clearProperty() 
 ConfigurationFactory configurationFactory = new ConfigurationFactory();
   
 configurationFactory.setConfigurationURL(configFileURL);
Configuration configuration = ConfigurationFactory.getConfiguration();
configuration.addConfigurationListener(new ConfigurationListener() {
    public void configurationChanged(ConfigurationEvent e) 
{
        System.out.println(e.getPropertyName() + "": "" + e.getPropertyValue());
    }
});
System.out.println(configuration.getProperty(""name.first"")); // prints ""Mike""
 configuration.claerProperty(""name.first"")  ; // no output whatsoever
System.out.println(configuration.getProperty(""name.first"")); // prints ""null""","org.apache.commons.configuration.TestCompositeConfiguration
org.apache.commons.configuration.CompositeConfiguration"
FILE,CONFIGURATION,CONFIGURATION-275,2007-05-25T17:12:43.000-05:00,not merge list properties,ConfigurationUtils.append(),org.apache.commons.configuration.AbstractConfiguration
FILE,CONFIGURATION,CONFIGURATION-283,2007-07-02T12:38:23.000-05:00,not take escaped characters into account,"import org.apache.commons.configuration.CombinedConfiguration;
import org.apache.commons.configuration.ConfigurationException;
import org.apache.commons.configuration.PropertiesConfiguration;
import junit.framework.TestCase;
public class TestProp extends TestCase {
	public void testprop() throws ConfigurationException 
{
		// test.properties contains :
		//    without_escape=aa,bb
		//    with_escape=aa\,bb
		//    with_2escapes=aa\\,bb
		
		String prop_filename = ""c:\\tmp\\test.properties"";
		PropertiesConfiguration properties_config = new PropertiesConfiguration(prop_filename);
		CombinedConfiguration   combined_config   = new CombinedConfiguration();
		combined_config.addConfiguration(properties_config);
		
		System.out.println(""Properties config"");
		System.out.println(properties_config.getString(""without_escape""));
		System.out.println(properties_config.getString(""with_escape""));
		System.out.println(properties_config.getString(""with_2escapes""));

		System.out.println(""\nCombined config"");
		System.out.println(combined_config.getString(""without_escape""));
		System.out.println(combined_config.getString(""with_escape""));
		System.out.println(combined_config.getString(""with_2escapes""));
		
	}
}","org.apache.commons.configuration.TestCombinedConfiguration
org.apache.commons.configuration.ConfigurationUtils
org.apache.commons.configuration.TestConfigurationUtils"
FILE,CONFIGURATION,CONFIGURATION-332,2008-07-04T15:54:10.000-05:00,not persist properties add through DataConfiguration,"public void testSaveWithDataConfiguration() throws ConfigurationException
{
    File file = new File(""target/testsave.properties"");
    if (file.exists()) {
        assertTrue(file.delete());
    }

    PropertiesConfiguration config = new PropertiesConfiguration(file);

    DataConfiguration dataConfig = new DataConfiguration(config);

    dataConfig.setProperty(""foo"", ""bar"");
    assertEquals(""bar"", config.getProperty(""foo""));
    config.save();

    // reload the file
    PropertiesConfiguration config2 = new PropertiesConfiguration(file);
    assertFalse(""empty configuration"", config2.isEmpty());
}","org.apache.commons.configuration.TestPropertiesConfiguration
org.apache.commons.configuration.DataConfiguration"
FILE,CONFIGURATION,CONFIGURATION-347,2008-11-05T21:06:22.000-06:00,iterate over keys of file-based configuration cause ConcurrentModificationException,getKeys(),"org.apache.commons.configuration.TestFileConfiguration
org.apache.commons.configuration.AbstractFileConfiguration"
FILE,CONFIGURATION,CONFIGURATION-408,2010-02-11T01:01:05.000-06:00,save URL as property value,"public static void main(String[] args)
  {
    try
    {

      PropertiesConfiguration config = new PropertiesConfiguration();     

      File newProps = new File(""foo.properties"");

      config.setProperty(""foo"", ""http://www.google.com/"");     

      config.save(newProps);

      

    }
    catch (Exception e){}
  }",org.apache.commons.configuration.TestPropertiesConfiguration
FILE,CONFIGURATION,CONFIGURATION-487,2012-03-17T17:03:03.000-05:00,not handle trivial conversion,"DataConfiguration.get()   PropertyConverter.to()  
 get()","org.apache.commons.configuration.TestPropertyConverter
org.apache.commons.configuration.PropertyConverter
org.apache.commons.configuration.TestDataConfiguration"
CLASS,hibernate-3.5.0b2,HHH-4617,2009-11-28T11:42:08.000-06:00,use materialized blobs with Postgresql cause error,@Lob,"org.hibernate.type.CharacterArrayClobType
org.hibernate.type.MaterializedClobType
org.hibernate.type.PrimitiveCharacterArrayClobType
org.hibernate.type.WrappedMaterializedBlobType
org.hibernate.type.MaterializedBlobType
org.hibernate.test.lob.MaterializedBlobTest
org.hibernate.type.BlobType
org.hibernate.type.ClobType
org.hibernate.test.lob.ClobLocatorTest
org.hibernate.dialect.Dialect
org.hibernate.cfg.annotations.SimpleValueBinder
org.hibernate.dialect.PostgreSQLDialect
org.hibernate.Hibernate"
CLASS,hibernate-3.5.0b2,HHH-5042,2010-03-26T05:06:09.000-05:00,not increment hibernate_sequences.next_hi_value exhaust current lo-range,"class MultipleHiLoPerTableGenerator 
 IntegralDataTypeHolder value;
 
 int lo;

 
  
  
 IntegralDataTypeHolder hiVal = (IntegralDataTypeHolder) doWorkInNewTransaction( session );

   
  
 varchar(255) 
     varchar(255)","org.hibernate.id.SequenceHiLoGenerator
org.hibernate.id.enhanced.OptimizerFactory
org.hibernate.id.SequenceGenerator
org.hibernate.id.MultipleHiLoPerTableGenerator"
METHOD,openjpa-2.0.1,OPENJPA-1613,2010-04-06T18:28:33.000-05:00,enhance class have abstract @MappedSuperclass with annotated properties have class with annotated properties,"@MappedSuperclass 
      
 @Access(AccessType.PROPERTY)",org.apache.openjpa.persistence.PersistenceMetaDataDefaults:toFieldNames(List<Field>)
METHOD,openjpa-2.0.1,OPENJPA-1627,2010-04-12T05:21:13.000-05:00,use wrong columns in SQL,"@OneToMany(fetch = FetchType.LAZY, cascade = {CascadeType.PERSIST})
	@ElementJoinColumn(name=""maccno"", referencedColumnName=""maccno"")
	@OrderBy(value = ""_id._processDate ASC, _id._tranSequenceNumber ASC"")
	private LinkedList<Transaction> _transactions;



      
 @EmbeddedId
	private TransactionId _id;
	
	 @Column(name = ""mtrancde"")
	private int _transactionCode;
	
	 @Column(name = ""mamount"")
	private BigDecimal _amount;
	
	 @Column(name = ""mdesc"")
	private String _description;
	


	 @Column(name = ""mactdate"")
	private Date _actualDate;
	
	 @Column(name = ""mbranch"")
	private int _branch;



   
 @Embeddable
public class TransactionId  
 @Column(name = ""maccno"")
	private String _accountNumber;
	
	 @Column(name = ""mprocdate"")
	private Date _processDate;
	
	 @Column(name = ""mtranseqno"")
	private int _tranSequenceNumber;","org.apache.openjpa.jdbc.meta.JDBCRelatedFieldOrder:order(Select, ClassMapping, Joins)"
METHOD,openjpa-2.0.1,OPENJPA-1793,2010-09-14T01:16:17.000-05:00,have field java.sql.Data,"@EmbeddedId  
 
  
  
 field.getHandler()  getResultArgument(field) 
 
  
  
 public Object getPrimaryKeyValue(Result res, Column[] cols, ForeignKey fk,
        JDBCStore store, Joins joins)
        throws SQLException {
        Column col;
        Object val = null;
        if (cols.length == 1) {
            col = cols[0];
            if (fk != null)
                col = fk.getColumn(col);
            val = res.getObject(col, field.getHandler().
                getResultArgument(field), joins);
        } else if (cols.length > 1) {
            Object[] vals = new Object[cols.length];
            Object[] args = (Object[]) field.getHandler().
                getResultArgument(field);
            for (int i = 0; i < vals.length; i++) {
                col = cols[i];
                if (fk != null)
                    col = fk.getColumn(col);
                vals[i] = res.getObject(col, (args == null) ? null : args[i],
                    joins);
            }
            val = vals;
        }
        return field.getHandler().toObjectValue(field, val);
    }


     
  
   DATE:
                return getDateInternal(obj, (Calendar) arg, joins);","org.apache.openjpa.persistence.embed.TestEmbeddable:testEntityA_Coll_String()
org.apache.openjpa.persistence.embed.TestEmbeddable:testEntityA_Embed_Coll_Map()"
METHOD,openjpa-2.0.1,OPENJPA-1830,2010-10-11T13:05:46.000-05:00,cause connectionPassword,ConfigurationImpl.writeExternal()   toProperties()       When readExternal(),"org.apache.openjpa.persistence.simple.TestSerializedFactory:setUp()
org.apache.openjpa.lib.conf.ConfigurationImpl:toProperties(boolean)"
METHOD,openjpa-2.0.1,OPENJPA-1896,2010-11-23T10:32:43.000-06:00,not store pojos,"merge()  
 merge()   persist()  
      
 merge()","org.apache.openjpa.kernel.VersionAttachStrategy:compareVersion(StateManagerImpl, PersistenceCapable)
org.apache.openjpa.persistence.relations.BasicEntity:getId()"
METHOD,openjpa-2.0.1,OPENJPA-1918,2011-01-06T08:11:24.000-06:00,ignore class loader,"PersistenceUnitInfo.getClassLoader() 
 MetaDataRepository.preload()      
 PersistenceUnitInfo.getClassLoader()    
  
   PersistenceProvider.createContainerEntityManagerFactory()  MetaDatRepository.preload()","org.apache.openjpa.meta.FieldMetaData:hashCode()
org.apache.openjpa.meta.FieldMetaData:compareTo(Object)"
METHOD,openjpa-2.0.1,OPENJPA-526,2008-02-27T13:28:05.000-06:00,cause sqlexception,"public class Exam 
 @Lob 
 @Column(name = ""text"", nullable = false)  
 private String text;
 
 With nullable = false","org.apache.openjpa.persistence.kernel.common.apps.Lobs:getId()
org.apache.openjpa.persistence.kernel.common.apps.Lobs:getLob()
org.apache.openjpa.persistence.kernel.common.apps.Lobs:Lobs(String, int)
org.apache.openjpa.persistence.kernel.common.apps.Lobs:setLob(String)
org.apache.openjpa.jdbc.sql.OracleDictionary:setNull(PreparedStatement, int, int, Column)"
METHOD,adempiere-3.1.0,1240,2008-05-16T03:03:55.000-05:00,produce produc,Production Quantity= 2,org.compiere.acct.Doc_Production:createFacts(MAcctSchema)
CLASS,pig-0.8.0,PIG-1188,2010-01-14T13:32:46.000-06:00,null to input tuple,"{code}
  as (a0, a1);
dump a;
{code}
 
 {code}
 
 {code}
 
 {code}
 
 {code}

 
 {code}
 
 {code}","test.org.apache.pig.test.TestMergeForEachOptimization
src.org.apache.pig.newplan.logical.rules.TypeCastInserter
test.org.apache.pig.test.TestNewPlanLogicalOptimizer
test.org.apache.pig.test.TestNewPlanFilterRule
test.org.apache.pig.test.TestNewPlanPushDownForeachFlatten
test.org.apache.pig.test.TestEvalPipeline2
test.org.apache.pig.test.TestMultiQueryCompiler
test.org.apache.pig.test.TestPartitionFilterPushDown
test.org.apache.pig.test.TestNewPlanFilterAboveForeach"
CLASS,pig-0.8.0,PIG-1277,2010-03-05T13:02:03.000-06:00,give cogroup on tuple keys,"UDF:
{code}
public class MapGenerate extends EvalFunc<Map> {
    @Override
    public Map exec(Tuple input) throws IOException {
        // TODO Auto-generated method stub
        Map m = new HashMap();
        m.put(""key"", new Integer(input.size()));
        return m;
    }
    
    @Override
    public Schema outputSchema(Schema input) {
        return new Schema(new Schema.FieldSchema(null, DataType.MAP));
    }
}
{code}

 
 {code}
 
  
 by (c0, c1);
dump e;
{code}

 
 {code}
 
 {code}

 
 {code}
 
 {code}

 
 {code}
  {(1,1)}  {(1,1)} 
 {code}

 
 {code}
  {(1,1)}  {} 
 {}  {(1,1)} 
 {code}","src.org.apache.pig.impl.io.NullableBytesWritable
test.org.apache.pig.test.TestPackage
test.org.apache.pig.test.TestEvalPipeline2
src.org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigBytesRawComparator
src.org.apache.pig.backend.hadoop.HDataType
src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMultiQueryPackage
src.org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigMapReduce
test.org.apache.pig.test.TestSecondarySort
src.org.apache.pig.newplan.logical.relational.LOUnion"
CLASS,pig-0.8.0,PIG-1771,2010-12-16T14:45:37.000-06:00,return different schema with load AS,"{code}
 
 BinStorage() 
         tuple()  ;
dump auxData;
{code}","test.org.apache.pig.test.TestEvalPipeline2
src.org.apache.pig.newplan.logical.relational.LogicalSchema"
CLASS,pig-0.8.0,PIG-1776,2010-12-17T16:28:09.000-06:00,change statement corresponding to alias change statement corresponding after explain do dump give incorrect result for changing,"{code}
 
  
 {code}","src.org.apache.pig.PigServer
src.org.apache.pig.newplan.logical.relational.LOLoad
test.org.apache.pig.test.TestUDFContext"
CLASS,pig-0.8.0,PIG-1813,2011-01-20T10:25:01.000-06:00,throw ERROR while refer map in result,"flatten(org.myudf.GETFIRST(value))  
 PigStorage()","src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc
test.org.apache.pig.test.TestEvalPipeline2
src.org.apache.pig.newplan.logical.relational.LOGenerate"
CLASS,pig-0.8.0,PIG-1856,2011-02-15T17:26:16.000-06:00,not package custom jar with new job,"{code}
 
  
 {code}","src.org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRCompiler
test.org.apache.pig.test.TestMRCompiler"
CLASS,pig-0.8.0,PIG-1858,2011-02-17T02:27:48.000-06:00,result frontend exception,"{code}
 
 PigStorage()  
 {
        Pvs = order B by pvs;
        Const = org.vivek.MyAnotherUDF(Pvs.pvs).(count,sum);
        generate Const.sum as sum;
        } 
   ;
{code}",test.org.apache.pig.test.TestEvalPipeline2
CLASS,pig-0.8.0,PIG-1861,2011-02-18T12:39:53.000-06:00,cause problems cause whitespace extract script execute script store in Hadoop history store pig script as concatenated string store pig script without whitespace,"{}  {}  {} 
 statement1;statement2;","test.org.apache.pig.test.TestPigStats
src.org.apache.pig.tools.pigstats.ScriptState"
CLASS,pig-0.8.0,PIG-1868,2011-02-24T00:42:05.000-06:00,have complex data types from udf,"{code}
 
 {
 Tuples = order B1 by ts;
 generate Tuples;
} 
   { t: ( previous, current, next ) } 
 as id;
dump C3;
{code}

 
 {code}
 
 {code}

  on C1 ;
{code}
C1: {seq: {t: (previous: (id: chararray,ts: int,url: chararray),current: (id: chararray,ts: int,url: chararray),next: (id: chararray,ts: int,url: chararray))}}
{code}","src.org.apache.pig.newplan.logical.relational.LogicalSchema
test.org.apache.pig.test.TestSchema"
CLASS,pig-0.8.0,PIG-1893,2011-03-10T20:43:13.000-06:00,report input size for empty input file,"{code}
 
 by b0;
dump c;
{code}","src.org.apache.pig.tools.pigstats.JobStats
test.org.apache.pig.test.TestPigRunner"
CLASS,pig-0.8.0,PIG-1910,2011-03-16T12:50:00.000-05:00,use project-star with other projections,"{code}
 
 describe f;
f: {a: bytearray,(null),b: bytearray}   
 {code}","src.org.apache.pig.newplan.logical.expression.DereferenceExpression
src.org.apache.pig.newplan.logical.expression.ExpToPhyTranslationVisitor
src.org.apache.pig.newplan.logical.relational.LOCogroup
src.org.apache.pig.newplan.logical.expression.ProjectExpression
test.org.apache.pig.test.TestPigServer
test.org.apache.pig.test.Util"
CLASS,pig-0.8.0,PIG-1935,2011-03-24T20:33:38.000-05:00,push up filter in_front_of bincond,"{code}
  PigStorage()    
        
   ;
dump filtered;
{code}","test.org.apache.pig.test.TestNewPlanFilterAboveForeach
src.org.apache.pig.newplan.logical.expression.BinCondExpression"
CLASS,pig-0.8.0,PIG-1955,2011-03-31T13:26:15.000-05:00,have member variable log object cause serialization errors,"private final transient Log log = LogFactory.getLog(getClass());
 
 private transient Log log = LogFactory.getLog(getClass());","src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserComparisonFunc
src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODemux
src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc
src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLoad
src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSkewedJoin
src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach
src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator
src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PODistinct
src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange
src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPreCombinerLocalRearrange
src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFRJoin
src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POFilter
src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCombinerPackage
src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMergeJoin
src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.ExpressionOperator
src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast
src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSort
src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLimit
src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POMultiQueryPackage
src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCollectedGroup
src.org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit"
CLASS,pig-0.8.0,PIG-1963,2011-04-04T17:18:24.000-05:00,take input from order-by not get results in nested foreach,"{code}
 
 explain d;
dump d;
{code}","test.org.apache.pig.test.TestAccumulator
src.org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.AccumulatorOptimizer"
CLASS,pig-0.8.0,PIG-1977,2011-04-07T17:27:11.000-05:00,read pig temp files,"{code}
   {code}","test.org.apache.pig.test.TestTmpFileCompression
src.org.apache.pig.impl.io.TFileRecordReader"
CLASS,pig-0.8.0,PIG-1979,2011-04-08T02:24:01.000-05:00,not find matching uid fail with ERROR,"{code}
 
  
    
    
      
     PigStorage() 
  
  
  
   PigStorage() ;
{code}

   
  
    
 {code}

 import java.io.IOException;
import org.apache.pig.EvalFunc;
import org.apache.pig.data.*;
import org.apache.pig.impl.logicalLayer.FrontendException;
import org.apache.pig.impl.logicalLayer.schema.Schema;
import org.apache.pig.impl.logicalLayer.schema.Schema.FieldSchema;

public class MyExtractor extends EvalFunc<DataBag>
{
  @Override
	public Schema outputSchema(Schema arg0) {
	  try {
			return Schema.generateNestedSchema(DataType.BAG, DataType.CHARARRAY);
		} catch (FrontendException e) {
			System.err.println(""Error while generating schema. ""+e);
			return new Schema(new FieldSchema(null, DataType.BAG));
		}
	}

  @Override
  public DataBag exec(Tuple inputTuple)
    throws IOException
  {
    try {
      Tuple tp2 = TupleFactory.getInstance().newTuple(1);
      tp2.set(0, (inputTuple.get(0).toString()+inputTuple.hashCode()));
      DataBag retBag = BagFactory.getInstance().newDefaultBag();
      retBag.add(tp2);
      return retBag;
    }
    catch (Exception e) {
      throw new IOException("" Caught exception"", e);
    }
  }
}

 {code}","test.org.apache.pig.test.TestEvalPipeline2
src.org.apache.pig.newplan.logical.expression.DereferenceExpression"
CLASS,pig-0.8.0,PIG-1993,2011-04-12T19:47:41.000-05:00,throw NPE with ColumnPruning,"{code}
 
  
  
 GENERATE a1;
dump b;
{code}","contrib.piggybank.java.src.test.java.org.apache.pig.piggybank.test.TestPigStorageSchema
contrib.piggybank.java.src.main.java.org.apache.pig.piggybank.storage.PigStorageSchema"
CLASS,pig-0.8.0,PIG-730,2009-03-24T14:36:45.000-05:00,combine schema with nested bag combine schema from union,"flatten(outlinks.target);
  flatten(outlinks.target);","src.org.apache.pig.impl.logicalLayer.schema.Schema
src.org.apache.pig.newplan.logical.expression.DereferenceExpression
src.org.apache.pig.newplan.logical.relational.LogicalSchema
test.org.apache.pig.test.TestSchema"
CLASS,pig-0.8.0,PIG-767,2009-04-15T23:43:29.000-05:00,report from DESCRIBE,"BinStorage()  
 DESCRIBE urlContents;
DUMP urlContents;

     BY url;
DESCRIBE urlContentsG;

     urlContents.pg;

DESCRIBE urlContentsF;
DUMP urlContentsF;


 
   {url: chararray,pg: chararray}
   {group: chararray,urlContents: {url: chararray,pg: chararray}}
   {group: chararray,pg: {pg: chararray}}

      
 
    
   {group: chararray,urlContents: {t1:(url: chararray,pg: chararray)}}

  {chararray}   {(chararray)}","test.org.apache.pig.test.TestNewPlanLogToPhyTranslationVisitor
src.org.apache.pig.newplan.logical.expression.DereferenceExpression
src.org.apache.pig.newplan.logical.relational.LOInnerLoad
src.org.apache.pig.newplan.logical.rules.DuplicateForEachColumnRewrite
test.org.apache.pig.test.TestLogicalPlanMigrationVisitor
src.org.apache.pig.newplan.logical.relational.LOCogroup
test.org.apache.pig.test.TestSchema
src.org.apache.pig.newplan.logical.relational.LOGenerate"
CLASS,pig-0.8.0,PIG-946,2009-09-04T17:51:37.000-05:00,follow group,"10;
dump d;","test.org.apache.pig.test.TestCombiner
src.org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.CombinerOptimizer"
METHOD,math,MATH-1021,2013-08-10T00:00:22.000-05:00,suffer from integer overflow,"HypergeometricDistribution.sample()  
 {code}
 import org.apache.commons.math3.distribution.HypergeometricDistribution;

public class Foo {
  public static void main(String[] args) {
    HypergeometricDistribution a = new HypergeometricDistribution(
        43130568, 42976365, 50);
    System.out.printf(""%d %d%n"", a.getSupportLowerBound(), a.getSupportUpperBound()); // Prints ""0 50""
    System.out.printf(""%d%n"",a.sample());                                             // Prints ""-50""
  }
}
 {code}

  HypergeometricDistribution.getNumericalMean()  
 {code}
 return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();
{code}
 
 {code}
 return getSampleSize() * ((double) getNumberOfSuccesses() / (double) getPopulationSize());
{code}",org.apache.commons.math3.distribution.HypergeometricDistribution:getNumericalMean()
METHOD,math,MATH-221,2008-08-29T13:31:56.000-05:00,multiply for complex numbers equal for complex numbers,"class Complex  
 {code}
 import org.apache.commons.math.complex.*;
public class TestProg {
        public static void main(String[] args) {

                ComplexFormat f = new ComplexFormat();
                Complex c1 = new Complex(0,1);
                Complex c2 = new Complex(-1,0);

                Complex res = c1.multiply(c2);
                Complex comp = new Complex(0,-1);

                System.out.println(""res:  ""+f.format(res));
                System.out.println(""comp: ""+f.format(comp));

                System.out.println(""res=comp: ""+res.equals(comp));
        }
}
 {code}",org.apache.commons.math.complex.Complex:equals(Object)
METHOD,math,MATH-238,2009-01-16T22:24:24.000-06:00,contain high power,"MathUtils.gcd(u, v)  
 assertEquals(3 * (1<<15), MathUtils.gcd(3 * (1<<20), 9 * (1<<15)));

  MathUtils.gcd()","org.apache.commons.math.util.MathUtils:gcd(int, int)"
METHOD,math,MATH-326,2009-12-29T00:09:20.000-06:00,use wrong formula in ArrayRealVector use wrong formula in OpenMapRealVector,"{code}
     public double getLInfNorm() {
        double max = 0;
        for (double a : data) {
            max += Math.max(max, Math.abs(a));
        }
        return max;
    }
 {code}

 
  
 {code}   
     public double getLInfNorm() {
        double max = 0;
        Iterator iter = entries.iterator();
        while (iter.hasNext()) {
            iter.advance();
            max += iter.value();
        }
        return max;
    }
 {code}

    sparseIterator() 
 {code}
   public double getLInfNorm() {
    double norm = 0;
    Iterator<Entry> it = sparseIterator();
    Entry e;
    while(it.hasNext() && (e = it.next()) != null) {
      norm = Math.max(norm, Math.abs(e.getValue()));
    }
    return norm;
  }
 {code}","org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()
org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()"
METHOD,math,MATH-358,2010-03-24T17:25:37.000-05:00,go past specified end of integration range,"{code}
   public void testMissedEvent() throws IntegratorException, DerivativeException {
          final double t0 = 1878250320.0000029;
          final double t =  1878250379.9999986;
          FirstOrderDifferentialEquations ode = new FirstOrderDifferentialEquations() {
            
            public int getDimension() {
                return 1;
            }
            
            public void computeDerivatives(double t, double[] y, double[] yDot)
                throws DerivativeException {
                yDot[0] = y[0] * 1.0e-6;
            }
        };

        DormandPrince853Integrator integrator = new DormandPrince853Integrator(0.0, 100.0,
                                                                               1.0e-10, 1.0e-10);

        double[] y = { 1.0 };
        integrator.setInitialStepSize(60.0);
        double finalT = integrator.integrate(ode, t0, y, t, y);
        Assert.assertEquals(t, finalT, 1.0e-6);
    }

 {code}","org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:integrate(FirstOrderDifferentialEquations, double, double[], double, double[])
org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator:integrate(FirstOrderDifferentialEquations, double, double[], double, double[])"
METHOD,math,MATH-369,2010-05-03T15:48:27.000-05:00,throw NullPointerException,"new BisectionSolver()  solve(someUnivariateFunctionImpl, 0.0, 1.0, 0.5);","org.apache.commons.math.analysis.solvers.BisectionSolver:solve(UnivariateRealFunction, double, double, double)"
METHOD,math,MATH-393,2010-07-25T00:14:20.000-05:00,method getResult() in multistartunivariaterealoptimizer,"{code} 
 public double getResult() {
    return optima[0];
}
 {code}
 
 {code}
 public double getFunctionValue() {
    return optimaValues[0];
}
 {code}","org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer:getFunctionValue()
org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer:getResult()"
METHOD,math,MATH-546,2011-03-12T04:52:54.000-06:00,issue in KMeansPlusPlusClusterer,int sum = 0;,"org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer:chooseInitialCenters(Collection<T>, int, Random)"
METHOD,math,MATH-552,2011-03-31T22:36:56.000-05:00,return wrong array of indices,"MultidimensionalCounter counter = new MultidimensionalCounter(2, 4);
for (Integer i : counter) {
    int[] x = counter.getCounts(i);
    System.out.println(i + "" "" + Arrays.toString(x));
}",org.apache.commons.math.util.MultidimensionalCounter:getCounts(int)
METHOD,math,MATH-60,2006-05-14T04:20:21.000-05:00,illogical result,"Fraction parse(String source, 
ParsePostion pos)  class ProperFractionFormat  
 ProperFractionFormat properFormat = new ProperFractionFormat();
result = null;
String source = ""1 -1 / 2"";
ParsePosition pos = new ParsePosition(0);

//Test 1 : fail 
 public void testParseNegative(){
 
   String source = ""-1 -2 / 3"";
   ParsePosition pos = new ParsePosition(0);

   Fraction actual = properFormat.parse(source, pos);
   assertNull(actual);
}

// Test2: success
 public void testParseNegative(){
 
   String source = ""-1 -2 / 3"";
   ParsePosition pos = new ParsePosition(0);

   Fraction actual = properFormat.parse(source, pos);  // return Fraction 1/3
   assertEquals(1, source.getNumerator());
   assertEquals(3, source.getDenominator());
}

 
 parse(String, ParsePosition)","org.apache.commons.math.fraction.ProperFractionFormat:parse(String, ParsePosition)"
METHOD,math,MATH-618,2011-07-13T20:23:43.000-05:00,handle nan arguments,"{code}
       
 {@link #NaN}  
 {@link java.lang.Double}  
 {code}",org.apache.commons.math.complex.Complex:add(Complex)
METHOD,math,MATH-691,2011-10-16T17:18:34.000-05:00,produce nan,"new Variance(true/false)    
 {code:java}
 int[] scores = {1, 2, 3, 4};
SummaryStatistics stats = new SummaryStatistics();
stats.setVarianceImpl(new Variance(false)); //use ""population variance""
for(int i : scores) {
  stats.addValue(i);
}
double sd = stats.getStandardDeviation();
System.out.println(sd);
{code}

 
 {code:java}
   double sd = FastMath.sqrt(stats.getSecondMoment() / stats.getN());
{code}",org.apache.commons.math.stat.descriptive.SummaryStatistics:addValue(double)
METHOD,math,MATH-778,2012-04-10T06:06:11.000-05:00,not comply with general contract FieldElement.multiply(int n),{{org.apache.commons.math3.Dfp}}  {{multiply(int n)}}   {{0 <= n <= 9999}}  {{FieldElement.multiply(int n)}}  {{n}},org.apache.commons.math3.dfp.Dfp:multiply(int)
METHOD,math,MATH-929,2013-01-15T11:45:28.000-06:00,return wrong value,"{code}
 Assert.assertEquals(0.398942280401433, new MultivariateNormalDistribution(new double[]{0}, new double[][]{{1}}).density(new double[]{0}), 1e-15);
{code}",org.apache.commons.math3.distribution.MultivariateNormalDistribution:density(double[])
METHOD,math,MATH-942,2013-03-09T15:05:04.000-06:00,throw exception if first element,"Array.newInstance(singletons.get(0).getClass(), sampleSize)   
 singleons.get(0) 
 {{DiscreteDistribution.sample()}}  
 {code}
 List<Pair<Object,Double>> list = new ArrayList<Pair<Object, Double>>();
list.add(new Pair<Object, Double>(new Object() {}, new Double(0)));
list.add(new Pair<Object, Double>(new Object() {}, new Double(1)));
new DiscreteDistribution<Object>(list).sample(1);
{code}",org.apache.commons.math3.distribution.DiscreteDistribution:sample(int)
METHOD,math,MATH-949,2013-03-15T18:11:56.000-05:00,report iterations,"LevenbergMarquardtOptimizer.getIterations()     BaseOptimizer.incrementEvaluationsCount()

 
 {noformat}
     @Test
    public void testGetIterations() {
        // setup
        LevenbergMarquardtOptimizer otim = new LevenbergMarquardtOptimizer();

        // action
        otim.optimize(new MaxEval(100), new Target(new double[] { 1 }),
                new Weight(new double[] { 1 }), new InitialGuess(
                        new double[] { 3 }), new ModelFunction(
                        new MultivariateVectorFunction() {
                            @Override
                            public double[] value(double[] point)
                                    throws IllegalArgumentException {
                                return new double[] { FastMath.pow(point[0], 4) };
                            }
                        }), new ModelFunctionJacobian(
                        new MultivariateMatrixFunction() {
                            @Override
                            public double[][] value(double[] point)
                                    throws IllegalArgumentException {
                                return new double[][] { { 0.25 * FastMath.pow(
                                        point[0], 3) } };
                            }
                        }));

        // verify
        assertThat(otim.getEvaluations(), greaterThan(1));
        assertThat(otim.getIterations(), greaterThan(1));
    }

 {noformat}","org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()
org.apache.commons.math3.optim.BaseOptimizer:BaseOptimizer(ConvergenceChecker<PAIR>)
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()"
FILE,WFCORE,WFCORE-267,2014-11-19T19:47:31.000-06:00,print output use cli client jar,"INFO: {




    ""outcome"" => ""success"",




    ""result"" => [




        ""core-service"",




        ""deployment"",




        ""deployment-overlay"",




        ""extension"",




        ""interface"",




        ""path"",




        ""socket-binding-group"",




        ""subsystem"",




        ""system-property""




    ]




}




{




    ""outcome"" => ""success"",




    ""result"" => [




        ""core-service"",




        ""deployment"",




        ""deployment-overlay"",




        ""extension"",




        ""interface"",




        ""path"",




        ""socket-binding-group"",




        ""subsystem"",




        ""system-property""




    ]




}",org.jboss.as.cli.CommandLineMain
FILE,WFCORE,WFCORE-495,2015-01-12T08:48:29.000-06:00,not startup to wflyctl0212,file(standalone.xml)  file(standalone.xml),org.jboss.as.server.deployment.DeploymentFullReplaceHandler
FILE,WFCORE,WFCORE-626,2015-04-06T15:53:19.000-05:00,create list elements,"clear(name=attribute)
  get(name=attribute, index=0)
  add(name=attribute, value=test)
  get(name=attribute, index=0)","org.jboss.as.controller.operations.global.ListOperations
org.jboss.as.controller.operations.global.MapOperations"
FILE,WFCORE,WFCORE-442,2014-12-02T19:15:13.000-06:00,not propagate failures to top level failure-description,"{read-only=1} 
 {




                ""name"" => ""jboss.server.temp.dir"",




                ""path"" => ""/Users/hbraun/dev/prj/wildfly-core/core-build/target/wildfly-core-1.0.0.Alpha14-SNAPSHOT/standalone/tmp"",




                ""read-only"" => true,




                ""relative-to"" => undefined




            } 
 {




                ""name"" => ""user.home"",




                ""path"" => ""/Users/hbraun"",




                ""read-only"" => true,




                ""relative-to"" => undefined




            } 
 {




                ""name"" => ""jboss.server.base.dir"",




                ""path"" => ""/Users/hbraun/dev/prj/wildfly-core/core-build/target/wildfly-core-1.0.0.Alpha14-SNAPSHOT/standalone"",




                ""read-only"" => true,




                ""relative-to"" => undefined




            } 
  
 {




                ""name"" => ""user.dir"",




                ""path"" => ""/Users/hbraun/dev/prj/wildfly-core/core-build/target/wildfly-core-1.0.0.Alpha14-SNAPSHOT"",




                ""read-only"" => true,




                ""relative-to"" => undefined




            } 
 {




                ""name"" => ""jboss.server.data.dir"",




                ""path"" => ""/Users/hbraun/dev/prj/wildfly-core/core-build/target/wildfly-core-1.0.0.Alpha14-SNAPSHOT/standalone/data"",




                ""read-only"" => true,




                ""relative-to"" => undefined




            } 
 {




                ""name"" => ""jboss.home.dir"",




                ""path"" => ""/Users/hbraun/dev/prj/wildfly-core/core-build/target/wildfly-core-1.0.0.Alpha14-SNAPSHOT"",




                ""read-only"" => true,




                ""relative-to"" => undefined




            } 
 {




                ""name"" => ""jboss.server.log.dir"",




                ""path"" => ""/Users/hbraun/dev/prj/wildfly-core/core-build/target/wildfly-core-1.0.0.Alpha14-SNAPSHOT/standalone/log"",




                ""read-only"" => true,




                ""relative-to"" => undefined




            } 
 {




                ""name"" => ""jboss.controller.temp.dir"",




                ""path"" => ""/Users/hbraun/dev/prj/wildfly-core/core-build/target/wildfly-core-1.0.0.Alpha14-SNAPSHOT/standalone/tmp"",




                ""read-only"" => true,




                ""relative-to"" => undefined




            }",org.jboss.as.controller.operations.global.GlobalOperationHandlers
FILE,WFCORE,WFCORE-716,2015-05-27T10:21:36.000-05:00,check at stage,"attribute(name=security-realm)




 {




    ""outcome"" => ""success"",




    ""response-headers"" => {




        ""operation-requires-reload"" => true,




        ""process-state"" => ""reload-required""




    }




 
 attribute(name=security-domain, value=MgMtDom)




 {




    ""outcome"" => ""success"",




    ""response-headers"" => {




        ""operation-requires-reload"" => true,




        ""process-state"" => ""reload-required""




    }",org.jboss.as.controller.CapabilityReferenceRecorder
FILE,WFCORE,WFCORE-815,2015-07-13T07:57:45.000-05:00,have more ancestors with same submodules,"add(name=includes, value=mail-01)
  add(name=includes, value=mail-02)

 
 {




    ""outcome"" => ""failed"",




    ""failure-description"" => {""domain-failure-description"" => ""WFLYCTL0401: Profile 'mail-01' defines subsystem 'mail' which is also defined in its ancestor profile 'mail-02'. Overriding subsystems is not supported""} 
 add(name=includes, value=mail-01)
  add(name=includes, value=mail-02)","org.jboss.as.domain.controller.operations.ProfileIncludesHandlerTestCase
org.jboss.as.domain.controller.operations.SocketBindingGroupIncludesHandlerTestCase
org.jboss.as.host.controller.logging.HostControllerLogger"
FILE,WFCORE,WFCORE-922,2015-08-26T21:07:03.000-05:00,persist kernel,ModelNode.asPropertyList()    The asPropertyList(),"org.jboss.as.host.controller.parsing.HostXml_4
org.jboss.as.server.parsing.StandaloneXml_4
org.jboss.as.host.controller.parsing.DomainXml_4
org.jboss.as.domain.management.parsing.ManagementXml_4"
FILE,WFCORE,WFCORE-955,2015-08-27T14:34:07.000-05:00,set parent of profile set parent to non-existent profile not respond after attempt,"add()
 
 {




    ""outcome"" => ""failed"",




    ""failure-description"" => ""java.lang.NullPointerException:null""




}




 
 add()","org.jboss.as.controller.OperationContextImpl
org.jboss.as.controller.AbstractOperationContext
org.jboss.as.controller.logging.ControllerLogger
org.jboss.as.controller.SocketCapabilityResolutionUnitTestCase
org.jboss.as.controller.capability.registry.IncludingResourceCapabilityScope
org.jboss.as.controller.AbstractCapabilityResolutionTestCase"
FILE,WFCORE,WFCORE-949,2015-09-03T05:08:35.000-05:00,autocomplete for removing,remove(),"org.jboss.as.server.operations.NativeRemotingManagementRemoveHandler
org.jboss.as.host.controller.operations.HttpManagementRemoveHandler
org.jboss.as.jmx.RemotingConnectorResource
org.jboss.as.test.integration.domain.HTTPSManagementInterfaceTestCase
org.jboss.as.server.mgmt.NativeManagementResourceDefinition
org.jboss.as.subsystem.test.AdditionalInitialization
org.jboss.as.remoting.management.ManagementRemotingServices
org.jboss.as.server.operations.HttpManagementRemoveHandler
org.jboss.as.server.operations.NativeManagementRemoveHandler
org.wildfly.core.test.standalone.mgmt.HTTPSConnectionWithCLITestCase
org.wildfly.core.test.standalone.mgmt.HTTPSManagementInterfaceTestCase
org.jboss.as.remoting.logging.RemotingLogger
org.jboss.as.server.mgmt.HttpManagementResourceDefinition
org.jboss.as.host.controller.resources.NativeManagementResourceDefinition
org.jboss.as.host.controller.resources.HttpManagementResourceDefinition"
FILE,WFCORE,WFCORE-1007,2015-09-24T06:45:11.000-05:00,remove extension,"migrate()




 {




    ""outcome"" => ""success"",




    ""result"" => {""migration-warnings"" => []}




 
 migrate()




 {




    ""outcome"" => ""success"",




    ""result"" => {""migration-warnings"" => []}




 
 migrate()




 {




    ""outcome"" => ""success"",




    ""result"" => {""migration-warnings"" => []}","org.jboss.as.controller.AbstractOperationContext
org.jboss.as.controller.logging.ControllerLogger"
FILE,WFCORE,WFCORE-1027,2015-10-01T18:16:10.000-05:00,scop roles,"{roles=master-monitor}




 
 {




                ""directory-grouping"" => ""by-server"",




                ""domain-controller"" => {""local"" => {} 
  
 {""org.jboss.as.jmx"" => undefined} 
 {




                    ""management"" => undefined,




                    ""public"" => undefined,




                    ""unsecure"" => undefined




                } 
 {""default"" => undefined} 
 {""jmx"" => undefined} 
 {roles=slave-maintainer}




 
 {roles=slave-maintainer}




 
  
 {""org.jboss.as.jmx"" => undefined} 
 {




                ""management"" => undefined,




                ""public"" => undefined,




                ""unsecure"" => undefined




            } 
 {""default"" => undefined} 
 {""jmx"" => undefined}","org.jboss.as.test.integration.domain.rbac.RBACProviderHostScopedRolesTestCase
org.jboss.as.test.integration.domain.rbac.AbstractHostScopedRolesTestCase
org.jboss.as.controller.operations.global.GlobalOperationHandlers
org.jboss.as.test.integration.domain.rbac.JmxRBACProviderHostScopedRolesTestCase
org.jboss.as.test.integration.domain.rbac.ListRoleNamesTestCase
org.jboss.as.test.integration.domain.rbac.WildcardReadsTestCase"
FILE,WFCORE,WFCORE-1067,2015-10-21T12:22:10.000-05:00,shut down server cancel op check for monitor/Deployer/auditor role,context.getServiceRegistry(true),"org.jboss.as.domain.management.controller.CancelActiveOperationHandler
org.jboss.as.server.operations.ServerShutdownHandler
org.jboss.as.test.integration.mgmt.access.StandardRolesBasicTestCase
org.jboss.as.test.integration.domain.rbac.AbstractStandardRolesTestCase
org.jboss.as.host.controller.operations.HostShutdownHandler"
FILE,WFCORE,WFCORE-1214,2015-12-11T23:17:45.000-06:00,header to domain servers,"{blocking-timeout=5;rollback-on-runtime-failure=false}  
 {

[Host Controller] 10:53:40,697 INFO  [stdout] (management-handler-thread - 3)     ""blocking-timeout"" => ""5"",

[Host Controller] 10:53:40,698 INFO  [stdout] (management-handler-thread - 3)     ""rollback-on-runtime-failure"" => ""false"",

[Host Controller] 10:53:40,698 INFO  [stdout] (management-handler-thread - 3)     ""caller-type"" => ""user"",

[Host Controller] 10:53:40,698 INFO  [stdout] (management-handler-thread - 3)     ""access-mechanism"" => ""NATIVE""

[Host Controller] 10:53:40,698 INFO  [stdout] (management-handler-thread - 3) }","org.jboss.as.domain.controller.operations.coordination.DomainRolloutStepHandler
org.jboss.as.domain.controller.operations.coordination.OperationCoordinatorStepHandler"
FILE,WFCORE,WFCORE-1198,2015-12-09T09:30:00.000-06:00,not resolve multiple properties,"{PROFILE-NAME}  {APP-VERSION}  {VAR}  add(auto-start=true, group=""${PROFILE-NAME}${APP-VERSION}-server-group"")","org.jboss.as.cli.parsing.test.PropertyReplacementTestCase
org.jboss.as.cli.parsing.ExpressionBaseState"
FILE,WFCORE,WFCORE-1261,2016-01-04T17:37:05.000-06:00,change max-history attribute value for configuration-changes,"attribute(name=max-history,value=20)
 {

""outcome"" => ""failed"",

""failure-description"" => ""WFLYCTL0158: Operation handler failed: java.lang.IllegalStateException: WFLYCTL0188: Stage MODEL is already complete"",

""rolled-back"" => true

}","org.wildfly.core.test.standalone.mgmt.api.core.ConfigurationChangesHistoryTestCase
org.jboss.as.domain.management.ConfigurationChangeResourceDefinition"
FILE,WFCORE,WFCORE-1354,2016-02-03T00:19:08.000-06:00,not clone profile with remoting subsystem,clone(to-profile=test),"org.jboss.as.remoting.RemotingExtension
org.jboss.as.subsystem.test.AbstractSubsystemBaseTest"
FILE,WFCORE,WFCORE-1428,2016-03-04T14:45:35.000-06:00,contain string be of type LONG,resource(include-runtime=true),org.jboss.as.logging.LogFileResourceDefinition
FILE,WFCORE,WFCORE-701,2015-05-19T15:06:17.000-05:00,report between server-config resource report between server resource,"attribute(name=status)




 {




    ""outcome"" => ""success"",




    ""result"" => ""FAILED""




}




  attribute(name=server-state)




 {




    ""outcome"" => ""success"",




    ""result"" => ""STOPPED""




}",org.jboss.as.host.controller.ManagedServer
FILE,WFCORE,WFCORE-1028,2015-10-01T19:12:08.000-05:00,handle of invalid roles,{roles=slave-monitor},"org.jboss.as.controller.logging.ControllerLogger
org.jboss.as.controller.operations.global.GlobalOperationHandlers
org.jboss.as.controller.access.rbac.RoleMapper
org.jboss.as.test.integration.domain.ServerManagementTestCase"
FILE,WFCORE,WFCORE-1493,2016-04-20T20:05:27.000-05:00,not propagate -Djdk.launcher.addexports.%d=%s value,org.jboss.as.host.controller.Main.getHostSystemProperties(),org.jboss.as.host.controller.Main
FILE,WFCORE,WFCORE-1572,2016-05-27T16:20:10.000-05:00,contain whitespace,{rollout id=foo},"org.jboss.as.cli.parsing.DefaultStateWithEndCharacter
org.jboss.as.cli.parsing.ParserUtil
org.jboss.as.cli.parsing.test.CommandTestCase"
FILE,WFCORE,WFCORE-1570,2016-05-27T12:51:56.000-05:00,save name id attribute discrepancy,"group(rolling-to-servers=false,max-failed-servers=1)  group(rolling-to-servers=true,max-failure-percentage=20)  
 {rollout id=my-rollout-plan}","org.jboss.as.cli.parsing.operation.header.RolloutPlanState
org.jboss.as.cli.parsing.operation.header.RolloutPlanHeaderCallbackHandler
org.jboss.as.cli.operation.impl.RolloutPlanCompleter"
FILE,WFCORE,WFCORE-1578,2016-06-07T05:13:13.000-05:00,add local | remote-destination-outbound-socket-binding,"{remote|local} 
   add()




    add(host=localhost,port=8765)




 
   add(socket-binding-ref=http)




 
  
  
     
  
 
  
 {remote|local}","org.jboss.as.controller.logging.ControllerLogger
org.jboss.as.server.services.net.LocalDestinationOutboundSocketBindingAddHandler
org.jboss.as.server.services.net.SocketBindingAddHandler
org.jboss.as.server.services.net.RemoteDestinationOutboundSocketBindingAddHandler"
FILE,WFCORE,WFCORE-1607,2016-06-17T12:23:38.000-05:00,finish with {,"{""outcome"" => ""success""}",org.jboss.as.domain.management.security.SecurityRealmChildRemoveHandler
FILE,WFCORE,WFCORE-1635,2016-07-05T07:04:51.000-05:00,fail in batch,"add(path=log, relative-to=""jboss.server.base.dir"", auto-deploy-exploded=false, scan-enabled=false)




  attribute(name=scan-interval, value=6000)




 
 
 add(path=log, relative-to=""jboss.server.base.dir"", auto-deploy-exploded=false, scan-enabled=false)




  attribute(name=scan-interval, value=6000)",org.jboss.as.server.deployment.scanner.AbstractWriteAttributeHandler
FILE,WFCORE,WFCORE-1590,2016-06-12T14:18:43.000-05:00,ignore setMinSize(0),"static final SimpleAttributeDefinition REPLACEMENT = new SimpleAttributeDefinitionBuilder(ElytronDescriptionConstants.REPLACEMENT, ModelType.STRING, false)




        .setAllowExpression(true)




        .setMinSize(0)




        .setFlags(AttributeAccess.Flag.RESTART_RESOURCE_SERVICES)




        .build();






 
 add(pattern=""@ELYTRON.ORG"", replacement="""", replace-all=true)","org.jboss.as.controller.operations.validation.BytesValidator
org.jboss.as.controller.SimpleAttributeDefinitionUnitTestCase
org.jboss.as.controller.test.WriteAttributeOperationTestCase
org.jboss.as.controller.AbstractAttributeDefinitionBuilder
org.jboss.as.controller.AttributeDefinition"
FILE,WFCORE,WFCORE-1715,2016-08-15T19:04:54.000-05:00,not reset restartMode,The doReload()     ServerInventoryService.stop(),org.jboss.as.host.controller.operations.StartServersHandler
FILE,WFCORE,WFCORE-1765,2016-09-05T16:22:02.000-05:00,remove deployment-scanner element from configuration,"{xml}
         {xml}",org.jboss.as.controller.ParallelBootOperationStepHandler
FILE,WFCORE,WFCORE-1793,2016-09-14T08:08:21.000-05:00,overwrite existing content with overwrite = true pass content by file path,"{""outcome"" => ""success""}




 
 {""outcome"" => ""success""}




 
 {""outcome"" => ""success""}




  {path=/home/mjurc/testing/eap7-204/test.txt, target-path=test.txt} 
  
 {path=/home/mjurc/testing/eap7-204/test.txt, target-path=test.txt} 
  
 {path=/home/mjurc/testing/eap7-204/test.txt, target-path=test.txt}","org.jboss.as.server.controller.resources.DeploymentAttributes
org.jboss.as.server.deployment.ExplodedDeploymentAddContentHandler"
FILE,WFCORE,WFCORE-1851,2016-10-04T12:28:40.000-05:00,explode deployments behaviour with browse-content operation,"content(depth=1)  
 {




    ""outcome"" => ""success"",




    ""result"" => [




        {




            ""path"" => ""jboss-kitchensink-ear-web.war"",




            ""directory"" => false,




            ""file-size"" => 63190L




        } 
 {




            ""path"" => ""jboss-kitchensink-ear-ejb.jar"",




            ""directory"" => false,




            ""file-size"" => 12256L




        } 
 {




            ""path"" => ""META-INF/"",




            ""directory"" => true




        }




     
 {




    ""outcome"" => ""success"",




    ""result"" => [




        {




            ""path"" => ""META-INF/"",




            ""directory"" => true




        } 
 {




            ""path"" => ""META-INF/MANIFEST.MF"",




            ""directory"" => false,




            ""file-size"" => 130L




        } 
 {




            ""path"" => ""jboss-kitchensink-ear-web.war"",




            ""directory"" => false,




            ""file-size"" => 63190L




        } 
 {




            ""path"" => ""jboss-kitchensink-ear-ejb.jar"",




            ""directory"" => false,




            ""file-size"" => 12256L




        } 
 {




            ""path"" => ""META-INF/application.xml"",




            ""directory"" => false,




            ""file-size"" => 802L




        } 
 {




            ""path"" => ""META-INF/kitchensink-ear-quickstart-ds.xml"",




            ""directory"" => false,




            ""file-size"" => 1955L




        }","org.jboss.as.repository.PathUtil
org.jboss.as.repository.ContentRepositoryTest"
FILE,WFCORE,WFCORE-1864,2016-10-13T09:12:31.000-05:00,add command not remove whitespaces from dependencies,"{{
...
    <dependencies>
        <module name=""org.a""/>
        <module name="" org.b ""/>
    </dependencies>
...
}}","org.jboss.as.cli.handlers.module.ASModuleHandler
org.jboss.as.test.integration.management.cli.ModuleTestCase"
FILE,WFCORE,WFCORE-1908,2016-10-31T08:13:57.000-05:00,write attribute have access type metric have attribute,"attribute(name=message-count, value=5)




 {




    ""outcome"" => ""failed"",




    ""failure-description"" => ""WFLYCTL0048: Attribute message-count is not writable"",




    ""rolled-back"" => true




}","org.jboss.as.cli.impl.AttributeNamePathCompleter
org.jboss.as.cli.parsing.test.AttributeNamePathCompletionTestCase
org.jboss.as.cli.Util"
FILE,WFCORE,WFCORE-1936,2016-11-04T10:57:06.000-05:00,not match reality for socket-binding not match reality for *,description(recursive=true),"org.jboss.as.server.services.net.OutboundSocketBindingResourceDefinition
org.jboss.as.controller.resource.AbstractSocketBindingResourceDefinition"
FILE,WFCORE,WFCORE-1896,2016-10-26T09:44:51.000-05:00,not return archives in archived deployments,"content(archive=true)  
 content()




 {




    ""outcome"" => ""success"",




    ""result"" => [




        {




            ""path"" => ""jboss-kitchensink-ear-web.war"",




            ""directory"" => false,




            ""file-size"" => 63190L




        } 
 {




            ""path"" => ""jboss-kitchensink-ear-ejb.jar"",




            ""directory"" => false,




            ""file-size"" => 12256L




        } 
 {




            ""path"" => ""META-INF/maven/"",




            ""directory"" => true




        } 
 {




            ""path"" => ""META-INF/MANIFEST.MF"",




            ""directory"" => false,




            ""file-size"" => 130L




        } 
 {




            ""path"" => ""META-INF/application.xml"",




            ""directory"" => false,




            ""file-size"" => 802L




        } 
 {




            ""path"" => ""META-INF/kitchensink-ear-quickstart-ds.xml"",




            ""directory"" => false,




            ""file-size"" => 1955L




        } 
 {




            ""path"" => ""META-INF/"",




            ""directory"" => true




        }




     
 content(archive=true)




 {""outcome"" => ""success""}






 
 {""outcome"" => ""success""}




 
 {""outcome"" => ""success""}




 
 {""outcome"" => ""success""}




  content(archive=true)




 {




    ""outcome"" => ""success"",




    ""result"" => [




        {




            ""path"" => ""jboss-kitchensink-ear-web.war"",




            ""directory"" => false,




            ""file-size"" => 63190L




        } 
 {




            ""path"" => ""jboss-kitchensink-ear-ejb.jar"",




            ""directory"" => false,




            ""file-size"" => 12256L




        }","org.jboss.as.repository.ContentFilter
org.jboss.as.repository.PathUtil
org.jboss.as.repository.PathUtilTest"
FILE,WFCORE,WFCORE-1959,2016-11-08T16:28:30.000-06:00,deploy empty managed exploded deployment in domain deploy empty managed exploded deployment to server group,"{empty=true} 
 add()",org.jboss.as.domain.controller.operations.coordination.ServerOperationResolver
FILE,WFCORE,WFCORE-1992,2016-11-15T14:35:44.000-06:00,parse { } in object,"{}    
 {path=$SOME_PATH}  {} 
 {}












  {rdn-identifier=uid,otp-credential-mapper={}","org.jboss.as.cli.parsing.test.ArgumentValueConverterTestCase
org.jboss.as.cli.parsing.arguments.ArgumentValueCallbackHandler"
FILE,WFCORE,WFCORE-2021,2016-11-21T08:50:23.000-06:00,print proper error message,"{""WFLYCTL0062: Composite operation failed and was rolled back. Steps that failed:"" => {""Operation step-1"" => ""WFLYCTL0030: No resource definition is registered for address [(\""subsystem\"" => \""*\"")]""}",org.jboss.as.cli.handlers.LsHandler
METHOD,tika-1.3,TIKA-1152,2013-07-23T08:45:11.000-05:00,process loops on parsing parse of CHM file,"{code}
 
    
     
    
    
    
    
    
    
    
    
 {code}","org.apache.tika.parser.chm.lzx.ChmLzxBlock:decompressAlignedBlock(int, byte[])
org.apache.tika.parser.chm.lzx.ChmLzxBlock:extractContent()
org.apache.tika.parser.chm.lzx.ChmLzxBlock:decompressUncompressedBlock(int, byte[])"
METHOD,eclipse-2.0,15277,2002-05-05T00:01:00.000-05:00,add suite,"suite() 
 suite()","org.eclipse.jdt.internal.junit.wizards.NewTestSuiteCreationWizardPage:handleFieldChanged(String)
org.eclipse.jdt.internal.junit.wizards.NewTestSuiteCreationWizardPage:setVisible(boolean)
org.eclipse.jdt.internal.junit.wizards.NewTestSuiteCreationWizardPage:testSuiteChanged()"
METHOD,eclipse-2.0,16787,2002-05-22T08:55:00.000-05:00,return to new page,"showPage()   showStartingPage() 
 page.getControl()  
 page.getControl()    
  
 public void dispose() {
	   super.dispose();
	   this.setControl(null);
	}",org.eclipse.ui.internal.dialogs.NewWizardNewPage:handleWizardSelection(SelectionChangedEvent)
METHOD,eclipse-2.0,31779,2003-02-13T09:55:00.000-06:00,ensure [ resources,getStat(),"org.eclipse.core.internal.localstore.UnifiedTree:addChildrenFromFileSystem(UnifiedTreeNode, String, Object[], int)
org.eclipse.core.internal.localstore.UnifiedTree:createChildNodeFromFileSystem(UnifiedTreeNode, String, String)"
